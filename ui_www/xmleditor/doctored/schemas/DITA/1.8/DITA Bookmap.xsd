<?xml version="1.0" encoding="UTF-8"?>
<!--W3C XML Schema generated by XMLSpy v2014 sp1 (x64) (http://www.altova.com)-->
<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:ditaarch="http://dita.oasis-open.org/architecture/2005/" xmlns:xml="http://www.w3.org/XML/1998/namespace">
	<xs:import namespace="http://www.w3.org/XML/1998/namespace" schemaLocation="xml.xsd"/>
	<xs:import namespace="http://dita.oasis-open.org/architecture/2005/" schemaLocation="ditaarch.xsd"/>
	<xs:group name="bookmap">
		<xs:sequence>
			<xs:element ref="bookmap"/>
		</xs:sequence>
	</xs:group>
	<xs:group name="abbrevlist">
		<xs:sequence>
			<xs:element ref="abbrevlist"/>
		</xs:sequence>
	</xs:group>
	<xs:group name="amendments">
		<xs:sequence>
			<xs:element ref="amendments"/>
		</xs:sequence>
	</xs:group>
	<xs:group name="appendices">
		<xs:sequence>
			<xs:element ref="appendices"/>
		</xs:sequence>
	</xs:group>
	<xs:group name="appendix">
		<xs:sequence>
			<xs:element ref="appendix"/>
		</xs:sequence>
	</xs:group>
	<xs:group name="approved">
		<xs:sequence>
			<xs:element ref="approved"/>
		</xs:sequence>
	</xs:group>
	<xs:group name="backmatter">
		<xs:sequence>
			<xs:element ref="backmatter"/>
		</xs:sequence>
	</xs:group>
	<xs:group name="bibliolist">
		<xs:sequence>
			<xs:element ref="bibliolist"/>
		</xs:sequence>
	</xs:group>
	<xs:group name="bookabstract">
		<xs:sequence>
			<xs:element ref="bookabstract"/>
		</xs:sequence>
	</xs:group>
	<xs:group name="bookchangehistory">
		<xs:sequence>
			<xs:element ref="bookchangehistory"/>
		</xs:sequence>
	</xs:group>
	<xs:group name="bookevent">
		<xs:sequence>
			<xs:element ref="bookevent"/>
		</xs:sequence>
	</xs:group>
	<xs:group name="bookeventtype">
		<xs:sequence>
			<xs:element ref="bookeventtype"/>
		</xs:sequence>
	</xs:group>
	<xs:group name="bookid">
		<xs:sequence>
			<xs:element ref="bookid"/>
		</xs:sequence>
	</xs:group>
	<xs:group name="booklist">
		<xs:sequence>
			<xs:element ref="booklist"/>
		</xs:sequence>
	</xs:group>
	<xs:group name="booklists">
		<xs:sequence>
			<xs:element ref="booklists"/>
		</xs:sequence>
	</xs:group>
	<xs:group name="booklibrary">
		<xs:sequence>
			<xs:element ref="booklibrary"/>
		</xs:sequence>
	</xs:group>
	<xs:group name="bookmeta">
		<xs:sequence>
			<xs:element ref="bookmeta"/>
		</xs:sequence>
	</xs:group>
	<xs:group name="booknumber">
		<xs:sequence>
			<xs:element ref="booknumber"/>
		</xs:sequence>
	</xs:group>
	<xs:group name="bookowner">
		<xs:sequence>
			<xs:element ref="bookowner"/>
		</xs:sequence>
	</xs:group>
	<xs:group name="bookpartno">
		<xs:sequence>
			<xs:element ref="bookpartno"/>
		</xs:sequence>
	</xs:group>
	<xs:group name="bookrestriction">
		<xs:sequence>
			<xs:element ref="bookrestriction"/>
		</xs:sequence>
	</xs:group>
	<xs:group name="bookrights">
		<xs:sequence>
			<xs:element ref="bookrights"/>
		</xs:sequence>
	</xs:group>
	<xs:group name="booktitle">
		<xs:sequence>
			<xs:element ref="booktitle"/>
		</xs:sequence>
	</xs:group>
	<xs:group name="booktitlealt">
		<xs:sequence>
			<xs:element ref="booktitlealt"/>
		</xs:sequence>
	</xs:group>
	<xs:group name="chapter">
		<xs:sequence>
			<xs:element ref="chapter"/>
		</xs:sequence>
	</xs:group>
	<xs:group name="colophon">
		<xs:sequence>
			<xs:element ref="colophon"/>
		</xs:sequence>
	</xs:group>
	<xs:group name="completed">
		<xs:sequence>
			<xs:element ref="completed"/>
		</xs:sequence>
	</xs:group>
	<xs:group name="copyrfirst">
		<xs:sequence>
			<xs:element ref="copyrfirst"/>
		</xs:sequence>
	</xs:group>
	<xs:group name="copyrlast">
		<xs:sequence>
			<xs:element ref="copyrlast"/>
		</xs:sequence>
	</xs:group>
	<xs:group name="day">
		<xs:sequence>
			<xs:element ref="day"/>
		</xs:sequence>
	</xs:group>
	<xs:group name="dedication">
		<xs:sequence>
			<xs:element ref="dedication"/>
		</xs:sequence>
	</xs:group>
	<xs:group name="draftintro">
		<xs:sequence>
			<xs:element ref="draftintro"/>
		</xs:sequence>
	</xs:group>
	<xs:group name="edited">
		<xs:sequence>
			<xs:element ref="edited"/>
		</xs:sequence>
	</xs:group>
	<xs:group name="edition">
		<xs:sequence>
			<xs:element ref="edition"/>
		</xs:sequence>
	</xs:group>
	<xs:group name="figurelist">
		<xs:sequence>
			<xs:element ref="figurelist"/>
		</xs:sequence>
	</xs:group>
	<xs:group name="frontmatter">
		<xs:sequence>
			<xs:element ref="frontmatter"/>
		</xs:sequence>
	</xs:group>
	<xs:group name="glossarylist">
		<xs:sequence>
			<xs:element ref="glossarylist"/>
		</xs:sequence>
	</xs:group>
	<xs:group name="indexlist">
		<xs:sequence>
			<xs:element ref="indexlist"/>
		</xs:sequence>
	</xs:group>
	<xs:group name="isbn">
		<xs:sequence>
			<xs:element ref="isbn"/>
		</xs:sequence>
	</xs:group>
	<xs:group name="mainbooktitle">
		<xs:sequence>
			<xs:element ref="mainbooktitle"/>
		</xs:sequence>
	</xs:group>
	<xs:group name="maintainer">
		<xs:sequence>
			<xs:element ref="maintainer"/>
		</xs:sequence>
	</xs:group>
	<xs:group name="month">
		<xs:sequence>
			<xs:element ref="month"/>
		</xs:sequence>
	</xs:group>
	<xs:group name="notices">
		<xs:sequence>
			<xs:element ref="notices"/>
		</xs:sequence>
	</xs:group>
	<xs:group name="organization">
		<xs:sequence>
			<xs:element ref="organization"/>
		</xs:sequence>
	</xs:group>
	<xs:group name="part">
		<xs:sequence>
			<xs:element ref="part"/>
		</xs:sequence>
	</xs:group>
	<xs:group name="person">
		<xs:sequence>
			<xs:element ref="person"/>
		</xs:sequence>
	</xs:group>
	<xs:group name="preface">
		<xs:sequence>
			<xs:element ref="preface"/>
		</xs:sequence>
	</xs:group>
	<xs:group name="printlocation">
		<xs:sequence>
			<xs:element ref="printlocation"/>
		</xs:sequence>
	</xs:group>
	<xs:group name="published">
		<xs:sequence>
			<xs:element ref="published"/>
		</xs:sequence>
	</xs:group>
	<xs:group name="publisherinformation">
		<xs:sequence>
			<xs:element ref="publisherinformation"/>
		</xs:sequence>
	</xs:group>
	<xs:group name="publishtype">
		<xs:sequence>
			<xs:element ref="publishtype"/>
		</xs:sequence>
	</xs:group>
	<xs:group name="reviewed">
		<xs:sequence>
			<xs:element ref="reviewed"/>
		</xs:sequence>
	</xs:group>
	<xs:group name="revisionid">
		<xs:sequence>
			<xs:element ref="revisionid"/>
		</xs:sequence>
	</xs:group>
	<xs:group name="started">
		<xs:sequence>
			<xs:element ref="started"/>
		</xs:sequence>
	</xs:group>
	<xs:group name="summary">
		<xs:sequence>
			<xs:element ref="summary"/>
		</xs:sequence>
	</xs:group>
	<xs:group name="tablelist">
		<xs:sequence>
			<xs:element ref="tablelist"/>
		</xs:sequence>
	</xs:group>
	<xs:group name="tested">
		<xs:sequence>
			<xs:element ref="tested"/>
		</xs:sequence>
	</xs:group>
	<xs:group name="toc">
		<xs:sequence>
			<xs:element ref="toc"/>
		</xs:sequence>
	</xs:group>
	<xs:group name="trademarklist">
		<xs:sequence>
			<xs:element ref="trademarklist"/>
		</xs:sequence>
	</xs:group>
	<xs:group name="volume">
		<xs:sequence>
			<xs:element ref="volume"/>
		</xs:sequence>
	</xs:group>
	<xs:group name="year">
		<xs:sequence>
			<xs:element ref="year"/>
		</xs:sequence>
	</xs:group>
	<xs:annotation>
		<xs:appinfo>
			<dita:domainsModule xmlns:dita="http://dita.oasis-open.org/architecture/2005/">(topic hazard-d)</dita:domainsModule>
		</xs:appinfo>
		<xs:documentation>
      
    </xs:documentation>
	</xs:annotation>
	<xs:group name="hazard-d-note">
		<xs:choice>
			<xs:element ref="hazardstatement"/>
		</xs:choice>
	</xs:group>
	<xs:group name="hazardstatement">
		<xs:sequence>
			<xs:choice>
				<xs:element ref="hazardstatement"/>
			</xs:choice>
		</xs:sequence>
	</xs:group>
	<xs:group name="messagepanel">
		<xs:sequence>
			<xs:choice>
				<xs:element ref="messagepanel"/>
			</xs:choice>
		</xs:sequence>
	</xs:group>
	<xs:group name="hazardsymbol">
		<xs:sequence>
			<xs:choice>
				<xs:element ref="hazardsymbol"/>
			</xs:choice>
		</xs:sequence>
	</xs:group>
	<xs:group name="typeofhazard">
		<xs:sequence>
			<xs:choice>
				<xs:element ref="typeofhazard"/>
			</xs:choice>
		</xs:sequence>
	</xs:group>
	<xs:group name="consequence">
		<xs:sequence>
			<xs:choice>
				<xs:element ref="consequence"/>
			</xs:choice>
		</xs:sequence>
	</xs:group>
	<xs:group name="howtoavoid">
		<xs:sequence>
			<xs:choice>
				<xs:element ref="howtoavoid"/>
			</xs:choice>
		</xs:sequence>
	</xs:group>
	<!--  
      Any content model that includes the hazard.cnt group must also set  mixed="true" 
   >-->
	<xs:group name="hazard.cnt">
		<xs:sequence>
			<xs:choice>
				<xs:group ref="basic.ph"/>
				<xs:group ref="sl"/>
				<xs:group ref="simpletable"/>
			</xs:choice>
		</xs:sequence>
	</xs:group>
	<xs:element name="hazardstatement">
		<xs:complexType>
			<xs:complexContent>
				<xs:extension base="hazardstatement.class">
					<xs:attribute ref="class" default="+ topic/note hazard-d/hazardstatement "/>
				</xs:extension>
			</xs:complexContent>
		</xs:complexType>
	</xs:element>
	<xs:complexType name="hazardstatement.class">
		<xs:sequence>
			<xs:group ref="hazardstatement.content"/>
		</xs:sequence>
		<xs:attributeGroup ref="hazardstatement.attributes"/>
	</xs:complexType>
	<xs:group name="hazardstatement.content">
		<xs:sequence>
			<xs:sequence>
				<xs:group ref="messagepanel" maxOccurs="unbounded"/>
				<xs:group ref="hazardsymbol" minOccurs="0" maxOccurs="unbounded"/>
			</xs:sequence>
		</xs:sequence>
	</xs:group>
	<xs:attributeGroup name="hazardstatement.attributes">
		<xs:attribute name="type" type="type-note-atts.class"/>
		<xs:attribute name="spectitle" type="xs:string"/>
		<xs:attribute name="othertype" type="xs:string"/>
		<xs:attribute name="outputclass" type="xs:string"/>
		<xs:attributeGroup ref="univ-atts"/>
		<xs:attributeGroup ref="global-atts"/>
	</xs:attributeGroup>
	<xs:element name="messagepanel">
		<xs:complexType>
			<xs:complexContent>
				<xs:extension base="messagepanel.class">
					<xs:attribute ref="class" default="+ topic/ul hazard-d/messagepanel "/>
				</xs:extension>
			</xs:complexContent>
		</xs:complexType>
	</xs:element>
	<xs:complexType name="messagepanel.class">
		<xs:sequence>
			<xs:group ref="messagepanel.content"/>
		</xs:sequence>
		<xs:attributeGroup ref="messagepanel.attributes"/>
	</xs:complexType>
	<xs:group name="messagepanel.content">
		<xs:sequence>
			<xs:sequence>
				<xs:group ref="typeofhazard"/>
				<xs:group ref="consequence" minOccurs="0" maxOccurs="unbounded"/>
				<xs:group ref="howtoavoid" maxOccurs="unbounded"/>
			</xs:sequence>
		</xs:sequence>
	</xs:group>
	<xs:attributeGroup name="messagepanel.attributes">
		<xs:attribute name="spectitle" type="xs:string"/>
		<xs:attribute name="outputclass" type="xs:string"/>
		<xs:attributeGroup ref="univ-atts"/>
		<xs:attributeGroup ref="global-atts"/>
	</xs:attributeGroup>
	<xs:element name="hazardsymbol">
		<xs:complexType>
			<xs:complexContent>
				<xs:extension base="hazardsymbol.class">
					<xs:attribute ref="class" default="+ topic/image hazard-d/hazardsymbol "/>
				</xs:extension>
			</xs:complexContent>
		</xs:complexType>
	</xs:element>
	<xs:complexType name="hazardsymbol.class">
		<xs:sequence>
			<xs:group ref="hazardsymbol.content"/>
		</xs:sequence>
		<xs:attributeGroup ref="hazardsymbol.attributes"/>
	</xs:complexType>
	<xs:group name="hazardsymbol.content">
		<xs:sequence>
			<xs:sequence>
				<xs:group ref="alt" minOccurs="0"/>
				<xs:group ref="longdescref" minOccurs="0"/>
			</xs:sequence>
		</xs:sequence>
	</xs:group>
	<xs:attributeGroup name="hazardsymbol.attributes">
		<xs:attribute name="href" type="xs:string" use="required"/>
		<xs:attribute name="keyref" type="xs:string"/>
		<!-- <xs:attribute name="alt" type="xs:string"/> -->
		<xs:attribute name="longdescref" type="xs:string"/>
		<xs:attribute name="height" type="xs:NMTOKEN"/>
		<xs:attribute name="width" type="xs:NMTOKEN"/>
		<xs:attribute name="scale" type="xs:NMTOKEN"/>
		<xs:attribute name="scalefit" type="yesno-att.class"/>
		<xs:attribute name="scope" type="scope-att.class"/>
		<xs:attribute name="align" type="xs:string"/>
		<xs:attribute name="placement" type="image-placement-att.class" default="inline"/>
		<xs:attribute name="outputclass" type="xs:string"/>
		<xs:attributeGroup ref="univ-atts"/>
		<xs:attributeGroup ref="global-atts"/>
	</xs:attributeGroup>
	<xs:element name="typeofhazard">
		<xs:complexType mixed="true">
			<xs:complexContent>
				<xs:extension base="typeofhazard.class">
					<xs:attribute ref="class" default="+ topic/li hazard-d/typeofhazard "/>
				</xs:extension>
			</xs:complexContent>
		</xs:complexType>
	</xs:element>
	<xs:complexType name="typeofhazard.class" mixed="true">
		<xs:sequence>
			<xs:group ref="typeofhazard.content"/>
		</xs:sequence>
		<xs:attributeGroup ref="typeofhazard.attributes"/>
	</xs:complexType>
	<xs:group name="typeofhazard.content">
		<xs:sequence>
			<xs:choice minOccurs="0" maxOccurs="unbounded">
				<xs:group ref="words.cnt" minOccurs="0"/>
				<xs:group ref="ph" minOccurs="0"/>
				<xs:group ref="tm" minOccurs="0"/>
			</xs:choice>
		</xs:sequence>
	</xs:group>
	<xs:attributeGroup name="typeofhazard.attributes">
		<xs:attribute name="outputclass" type="xs:string"/>
		<xs:attributeGroup ref="univ-atts"/>
		<xs:attributeGroup ref="global-atts"/>
	</xs:attributeGroup>
	<xs:element name="consequence">
		<xs:complexType mixed="true">
			<xs:complexContent>
				<xs:extension base="consequence.class">
					<xs:attribute ref="class" default="+ topic/li hazard-d/consequence "/>
				</xs:extension>
			</xs:complexContent>
		</xs:complexType>
	</xs:element>
	<xs:complexType name="consequence.class" mixed="true">
		<xs:sequence>
			<xs:group ref="consequence.content"/>
		</xs:sequence>
		<xs:attributeGroup ref="consequence.attributes"/>
	</xs:complexType>
	<xs:group name="consequence.content">
		<xs:sequence>
			<xs:choice minOccurs="0" maxOccurs="unbounded">
				<xs:group ref="words.cnt" minOccurs="0"/>
				<xs:group ref="ph" minOccurs="0"/>
				<xs:group ref="tm" minOccurs="0"/>
			</xs:choice>
		</xs:sequence>
	</xs:group>
	<xs:attributeGroup name="consequence.attributes">
		<xs:attribute name="outputclass" type="xs:string"/>
		<xs:attributeGroup ref="univ-atts"/>
		<xs:attributeGroup ref="global-atts"/>
	</xs:attributeGroup>
	<xs:element name="howtoavoid">
		<xs:complexType mixed="true">
			<xs:complexContent>
				<xs:extension base="howtoavoid.class">
					<xs:attribute ref="class" default="+ topic/li hazard-d/howtoavoid "/>
				</xs:extension>
			</xs:complexContent>
		</xs:complexType>
	</xs:element>
	<xs:complexType name="howtoavoid.class" mixed="true">
		<xs:sequence>
			<xs:group ref="howtoavoid.content"/>
		</xs:sequence>
		<xs:attributeGroup ref="howtoavoid.content"/>
	</xs:complexType>
	<xs:group name="howtoavoid.content">
		<xs:sequence>
			<xs:choice minOccurs="0" maxOccurs="unbounded">
				<xs:group ref="hazard.cnt" minOccurs="0"/>
			</xs:choice>
		</xs:sequence>
	</xs:group>
	<xs:attributeGroup name="howtoavoid.content">
		<xs:attribute name="outputclass" type="xs:string"/>
		<xs:attributeGroup ref="univ-atts"/>
		<xs:attributeGroup ref="global-atts"/>
	</xs:attributeGroup>
	<xs:annotation>
		<xs:appinfo>
			<dita:domainsModule xmlns:dita="http://dita.oasis-open.org/architecture/2005/">(topic ut-d)</dita:domainsModule>
		</xs:appinfo>
		<xs:documentation>
			<!--  place holder for documentation -->
		</xs:documentation>
	</xs:annotation>
	<xs:group name="ut-d-fig">
		<xs:choice>
			<xs:element ref="imagemap"/>
		</xs:choice>
	</xs:group>
	<xs:group name="imagemap">
		<xs:sequence>
			<xs:choice>
				<xs:element ref="imagemap"/>
			</xs:choice>
		</xs:sequence>
	</xs:group>
	<xs:group name="area">
		<xs:sequence>
			<xs:choice>
				<xs:element ref="area"/>
			</xs:choice>
		</xs:sequence>
	</xs:group>
	<xs:group name="shape">
		<xs:sequence>
			<xs:choice>
				<xs:element ref="shape"/>
			</xs:choice>
		</xs:sequence>
	</xs:group>
	<xs:group name="coords">
		<xs:sequence>
			<xs:choice>
				<xs:element ref="coords"/>
			</xs:choice>
		</xs:sequence>
	</xs:group>
	<!-- Base form: Imagemap ((%image;), (%area;)+) -->
	<xs:element name="imagemap">
		<xs:annotation>
			<xs:documentation>
        The imagemap element supports the basic functionality of the HTML <q>client-side</q> image map markup.
      </xs:documentation>
		</xs:annotation>
		<xs:complexType>
			<xs:complexContent>
				<xs:extension base="imagemap.class">
					<xs:attribute ref="class" default="+ topic/fig ut-d/imagemap "/>
				</xs:extension>
			</xs:complexContent>
		</xs:complexType>
	</xs:element>
	<xs:complexType name="imagemap.class">
		<xs:sequence>
			<xs:group ref="imagemap.content"/>
		</xs:sequence>
		<xs:attributeGroup ref="imagemap.attributes"/>
	</xs:complexType>
	<xs:group name="imagemap.content">
		<xs:sequence>
			<xs:sequence>
				<xs:group ref="image"/>
				<xs:group ref="area" maxOccurs="unbounded"/>
			</xs:sequence>
		</xs:sequence>
	</xs:group>
	<xs:attributeGroup name="imagemap.attributes">
		<xs:attributeGroup ref="univ-atts"/>
		<xs:attributeGroup ref="display-atts"/>
		<xs:attribute name="spectitle" type="xs:string" form="unqualified"/>
		<xs:attribute name="outputclass" type="xs:string" form="unqualified"/>
		<xs:attributeGroup ref="global-atts"/>
	</xs:attributeGroup>
	<xs:element name="area">
		<xs:annotation>
			<xs:documentation>
        The area element supports the basic functionality of the HTML image map markup.
      </xs:documentation>
		</xs:annotation>
		<xs:complexType>
			<xs:complexContent>
				<xs:extension base="area.class">
					<xs:attribute ref="class" default="+ topic/figgroup ut-d/area "/>
				</xs:extension>
			</xs:complexContent>
		</xs:complexType>
	</xs:element>
	<xs:complexType name="area.class">
		<xs:sequence>
			<xs:group ref="area.content"/>
		</xs:sequence>
		<xs:attributeGroup ref="area.attributes"/>
	</xs:complexType>
	<xs:group name="area.content">
		<xs:sequence>
			<xs:sequence>
				<xs:group ref="shape"/>
				<xs:group ref="coords"/>
				<xs:group ref="xref"/>
			</xs:sequence>
		</xs:sequence>
	</xs:group>
	<xs:attributeGroup name="area.attributes">
		<xs:attributeGroup ref="univ-atts"/>
		<xs:attribute name="outputclass" type="xs:string" form="unqualified"/>
		<xs:attributeGroup ref="global-atts"/>
	</xs:attributeGroup>
	<xs:element name="shape">
		<xs:annotation>
			<xs:documentation>
        The shape element supports the basic functionality of the HTML <q>client-side</q> image map markup.
      </xs:documentation>
		</xs:annotation>
		<xs:complexType mixed="true">
			<xs:complexContent>
				<xs:extension base="shape.class">
					<xs:attribute ref="class" default="+ topic/keyword ut-d/shape "/>
				</xs:extension>
			</xs:complexContent>
		</xs:complexType>
	</xs:element>
	<xs:complexType name="shape.class" mixed="true">
		<xs:sequence>
			<xs:group ref="shape.content"/>
		</xs:sequence>
		<xs:attributeGroup ref="shape.attributes"/>
	</xs:complexType>
	<xs:group name="shape.content">
		<xs:sequence>
			<xs:choice minOccurs="0" maxOccurs="unbounded">
				<xs:group ref="text"/>
			</xs:choice>
		</xs:sequence>
	</xs:group>
	<xs:attributeGroup name="shape.attributes">
		<xs:attribute name="keyref" type="xs:string" form="unqualified"/>
		<xs:attributeGroup ref="univ-atts-translate-no"/>
		<xs:attribute name="outputclass" type="xs:string" form="unqualified"/>
		<xs:attributeGroup ref="global-atts"/>
	</xs:attributeGroup>
	<xs:element name="coords">
		<xs:annotation>
			<xs:documentation>
        The coords element supports the basic functionality of the HTML <q>client-side</q> image map markup.
       </xs:documentation>
		</xs:annotation>
		<xs:complexType mixed="true">
			<xs:complexContent>
				<xs:extension base="coords.class">
					<xs:attribute ref="class" default="+ topic/ph ut-d/coords "/>
				</xs:extension>
			</xs:complexContent>
		</xs:complexType>
	</xs:element>
	<xs:complexType name="coords.class" mixed="true">
		<xs:sequence>
			<xs:group ref="coords.content"/>
		</xs:sequence>
		<xs:attributeGroup ref="coords.attributes"/>
	</xs:complexType>
	<xs:group name="coords.content">
		<xs:sequence>
			<xs:choice minOccurs="0" maxOccurs="unbounded">
				<xs:group ref="words.cnt"/>
			</xs:choice>
		</xs:sequence>
	</xs:group>
	<xs:attributeGroup name="coords.attributes">
		<xs:attribute name="keyref" type="xs:string" form="unqualified"/>
		<xs:attributeGroup ref="univ-atts-translate-no"/>
		<xs:attribute name="outputclass" type="xs:string" form="unqualified"/>
		<xs:attributeGroup ref="global-atts"/>
	</xs:attributeGroup>
	<!--<!ENTITY mapgroup-d-att "(map mapgroup-d)"                           >-->
	<xs:annotation>
		<xs:appinfo>
			<dita:domainsModule xmlns:dita="http://dita.oasis-open.org/architecture/2005/">(topic mapgroup-d)</dita:domainsModule>
		</xs:appinfo>
		<xs:documentation> 
    
    </xs:documentation>
	</xs:annotation>
	<xs:group name="mapgroup-d-topicref">
		<xs:choice>
			<xs:element ref="anchorref"/>
			<xs:element ref="keydef"/>
			<xs:element ref="mapref"/>
			<xs:element ref="topicgroup"/>
			<xs:element ref="topichead"/>
			<xs:element ref="topicset"/>
			<xs:element ref="topicsetref"/>
		</xs:choice>
	</xs:group>
	<xs:group name="topichead">
		<xs:sequence>
			<xs:choice>
				<xs:element ref="topichead"/>
			</xs:choice>
		</xs:sequence>
	</xs:group>
	<xs:group name="topicgroup">
		<xs:sequence>
			<xs:choice>
				<xs:element ref="topicgroup"/>
			</xs:choice>
		</xs:sequence>
	</xs:group>
	<xs:group name="anchorref">
		<xs:sequence>
			<xs:choice>
				<xs:element ref="anchorref"/>
			</xs:choice>
		</xs:sequence>
	</xs:group>
	<xs:group name="mapref">
		<xs:sequence>
			<xs:choice>
				<xs:element ref="mapref"/>
			</xs:choice>
		</xs:sequence>
	</xs:group>
	<xs:group name="topicset">
		<xs:sequence>
			<xs:choice>
				<xs:element ref="topicset"/>
			</xs:choice>
		</xs:sequence>
	</xs:group>
	<xs:group name="topicsetref">
		<xs:sequence>
			<xs:choice>
				<xs:element ref="topicsetref"/>
			</xs:choice>
		</xs:sequence>
	</xs:group>
	<xs:group name="keydef">
		<xs:sequence>
			<xs:choice>
				<xs:element ref="keydef"/>
			</xs:choice>
		</xs:sequence>
	</xs:group>
	<xs:attributeGroup name="topicref-atts-without-format">
		<xs:annotation>
			<xs:documentation>
        The %topicref-atts-without-format; parameter entity represents a group of attributes
        used in numerous map elements: mapref,
        and topicgroup. The set is similar to those documented in <xref href="topicref-atts.xml">topicref-atts</xref> but
        excludes the <i>
					<keyword>format</keyword>
				</i> attribute.
      </xs:documentation>
		</xs:annotation>
		<xs:attribute name="collection-type" type="collection-type.class" form="unqualified"/>
		<xs:attribute name="type" type="xs:string" form="unqualified"/>
		<xs:attribute name="processing-role" type="processing-role-att.class" form="unqualified"/>
		<xs:attribute name="scope" type="scope-att.class" form="unqualified"/>
		<xs:attribute name="locktitle" type="yesno-att.class" form="unqualified"/>
		<xs:attribute name="linking" type="linkingtypes.class" form="unqualified"/>
		<xs:attribute name="toc" type="yesno-att.class" form="unqualified"/>
		<xs:attribute name="print" type="print-att.class" form="unqualified"/>
		<xs:attribute name="search" type="yesno-att.class" form="unqualified"/>
		<xs:attribute name="chunk" type="xs:string" form="unqualified"/>
	</xs:attributeGroup>
	<xs:element name="topichead">
		<xs:annotation>
			<xs:documentation>The &lt;<keyword>topichead</keyword>> element provides a title-only
          entry in a navigation map, as an alternative to the fully-linked title provided
          by the &lt;<keyword>topicref</keyword>> element.
        </xs:documentation>
		</xs:annotation>
		<xs:complexType>
			<xs:complexContent>
				<xs:extension base="topichead.class">
					<xs:attribute ref="class" default="+ map/topicref mapgroup-d/topichead "/>
				</xs:extension>
			</xs:complexContent>
		</xs:complexType>
	</xs:element>
	<xs:complexType name="topichead.class">
		<xs:sequence>
			<xs:group ref="topichead.content"/>
		</xs:sequence>
		<xs:attributeGroup ref="topichead.attributes"/>
	</xs:complexType>
	<xs:group name="topichead.content">
		<xs:sequence>
			<xs:sequence>
				<xs:element ref="topicmeta" minOccurs="0"/>
				<xs:choice minOccurs="0" maxOccurs="unbounded">
					<xs:group ref="navref"/>
					<xs:group ref="anchor"/>
					<xs:group ref="topicref"/>
					<xs:group ref="data.elements.incl"/>
				</xs:choice>
			</xs:sequence>
		</xs:sequence>
	</xs:group>
	<xs:attributeGroup name="topichead.attributes">
		<xs:attribute name="navtitle" type="xs:string" form="unqualified"/>
		<xs:attribute name="outputclass" type="xs:string" form="unqualified"/>
		<xs:attribute name="copy-to" type="xs:string" form="unqualified"/>
		<xs:attribute name="keys" type="xs:string" form="unqualified"/>
		<xs:attributeGroup ref="topicref-atts"/>
		<xs:attributeGroup ref="univ-atts"/>
		<xs:attributeGroup ref="global-atts"/>
	</xs:attributeGroup>
	<xs:element name="topicgroup">
		<xs:annotation>
			<xs:documentation>The &lt;<keyword>topicgroup</keyword>> element is for creating
        groups of &lt;<keyword>topicref</keyword>> elements without affecting the
        hierarchy, as opposed to nested &lt;<keyword>topicref</keyword>> elements
        within a &lt;<keyword>topicref</keyword>>, which does imply a structural hierarchy.
        It is typically used outside a hierarchy to identify groups for linking without
        affecting the resulting toc/navigation output.          
      </xs:documentation>
		</xs:annotation>
		<xs:complexType>
			<xs:complexContent>
				<xs:extension base="topicgroup.class">
					<xs:attribute ref="class" default="+ map/topicref mapgroup-d/topicgroup "/>
				</xs:extension>
			</xs:complexContent>
		</xs:complexType>
	</xs:element>
	<xs:complexType name="topicgroup.class">
		<xs:sequence>
			<xs:group ref="topicgroup.content"/>
		</xs:sequence>
		<xs:attributeGroup ref="topicgroup.attributes"/>
	</xs:complexType>
	<xs:group name="topicgroup.content">
		<xs:sequence>
			<xs:sequence>
				<xs:group ref="topicmeta" minOccurs="0"/>
				<xs:choice minOccurs="0" maxOccurs="unbounded">
					<xs:group ref="navref"/>
					<xs:group ref="anchor"/>
					<xs:group ref="topicref"/>
					<xs:group ref="data.elements.incl"/>
				</xs:choice>
			</xs:sequence>
		</xs:sequence>
	</xs:group>
	<xs:attributeGroup name="topicgroup.attributes">
		<xs:attribute name="outputclass" type="xs:string" form="unqualified"/>
		<xs:attributeGroup ref="topicref-atts"/>
		<xs:attributeGroup ref="univ-atts"/>
		<xs:attributeGroup ref="global-atts"/>
	</xs:attributeGroup>
	<xs:element name="anchorref">
		<xs:annotation>
			<xs:documentation>The &lt;<keyword>anchorref</keyword>>  specializes &lt;topicref> to set format="ditamap" 
        and type="anchor" defaults for a reference to an &lt;<keyword>anchor</keyword>> to enable push of collections
        of content smaller than a map onto an anchor.
      </xs:documentation>
		</xs:annotation>
		<xs:complexType>
			<xs:complexContent>
				<xs:extension base="anchorref.class">
					<xs:attribute ref="class" default="+ map/topicref mapgroup-d/anchorref "/>
				</xs:extension>
			</xs:complexContent>
		</xs:complexType>
	</xs:element>
	<xs:complexType name="anchorref.class">
		<xs:sequence>
			<xs:group ref="anchorref.content"/>
		</xs:sequence>
		<xs:attributeGroup ref="anchorref.attributes"/>
	</xs:complexType>
	<xs:group name="anchorref.content">
		<xs:sequence>
			<xs:sequence>
				<xs:element ref="topicmeta" minOccurs="0"/>
				<xs:choice minOccurs="0" maxOccurs="unbounded">
					<xs:group ref="topicref"/>
					<xs:group ref="data.elements.incl"/>
				</xs:choice>
			</xs:sequence>
		</xs:sequence>
	</xs:group>
	<xs:attributeGroup name="anchorref.attributes">
		<xs:attribute name="navtitle" type="xs:string" form="unqualified"/>
		<xs:attribute name="href" type="xs:string" form="unqualified"/>
		<xs:attribute name="keyref" type="xs:string" form="unqualified"/>
		<xs:attribute name="keys" type="xs:string" form="unqualified"/>
		<xs:attribute name="query" type="xs:string" form="unqualified"/>
		<xs:attribute name="copy-to" type="xs:string" form="unqualified"/>
		<xs:attribute name="outputclass" type="xs:string" form="unqualified"/>
		<xs:attribute name="collection-type" type="collection-type.class" form="unqualified"/>
		<xs:attribute name="processing-role" type="processing-role-att.class" form="unqualified"/>
		<xs:attribute name="type" type="xs:string" default="anchor" form="unqualified"/>
		<xs:attribute name="scope" type="scope-att.class" form="unqualified"/>
		<xs:attribute name="locktitle" type="yesno-att.class" form="unqualified"/>
		<xs:attribute name="format" type="xs:string" default="ditamap" form="unqualified"/>
		<xs:attribute name="linking" type="linkingtypes.class" form="unqualified"/>
		<xs:attribute name="toc" type="yesno-att.class" form="unqualified"/>
		<xs:attribute name="print" type="print-att.class" form="unqualified"/>
		<xs:attribute name="search" type="yesno-att.class" form="unqualified"/>
		<xs:attribute name="chunk" type="xs:string" default="to-navigation" form="unqualified"/>
		<xs:attributeGroup ref="univ-atts"/>
		<xs:attributeGroup ref="global-atts"/>
	</xs:attributeGroup>
	<xs:element name="mapref">
		<xs:annotation>
			<xs:documentation>The &lt;<keyword>anchorref</keyword>>  specializes &lt;topicref> to set a format="ditamap" 
        default for more intuitive map references        
      </xs:documentation>
		</xs:annotation>
		<xs:complexType>
			<xs:complexContent>
				<xs:extension base="mapref.class">
					<xs:attribute ref="class" default="+ map/topicref mapgroup-d/mapref "/>
				</xs:extension>
			</xs:complexContent>
		</xs:complexType>
	</xs:element>
	<xs:complexType name="mapref.class">
		<xs:sequence>
			<xs:group ref="mapref.content"/>
		</xs:sequence>
		<xs:attributeGroup ref="mapref.attributes"/>
	</xs:complexType>
	<xs:group name="mapref.content">
		<xs:sequence>
			<xs:sequence>
				<xs:element ref="topicmeta" minOccurs="0"/>
				<xs:choice minOccurs="0" maxOccurs="unbounded">
					<xs:group ref="data.elements.incl"/>
				</xs:choice>
			</xs:sequence>
		</xs:sequence>
	</xs:group>
	<xs:attributeGroup name="mapref.attributes">
		<xs:attribute name="navtitle" type="xs:string" form="unqualified"/>
		<xs:attribute name="href" type="xs:string" form="unqualified"/>
		<xs:attribute name="keyref" type="xs:string" form="unqualified"/>
		<xs:attribute name="keys" type="xs:string" form="unqualified"/>
		<xs:attribute name="query" type="xs:string" form="unqualified"/>
		<xs:attribute name="copy-to" type="xs:string" form="unqualified"/>
		<xs:attribute name="outputclass" type="xs:string" form="unqualified"/>
		<xs:attributeGroup ref="topicref-atts-without-format"/>
		<xs:attribute name="format" type="xs:string" default="ditamap" form="unqualified"/>
		<xs:attributeGroup ref="univ-atts"/>
		<xs:attributeGroup ref="global-atts"/>
	</xs:attributeGroup>
	<xs:element name="topicset">
		<xs:annotation>
			<xs:documentation>The &lt;<keyword>topicset</keyword>>  specializes &lt;topicref> to set a chunk="to-navigation" 
        default and required id attribute to make it easy to delimit standalone, reusable collections of content within a 
        map (such as lessons within a course or large tasks explained by a collection of discrete task topics).        
      </xs:documentation>
		</xs:annotation>
		<xs:complexType>
			<xs:complexContent>
				<xs:extension base="topicset.class">
					<xs:attribute ref="class" default="+ map/topicref mapgroup-d/topicset "/>
				</xs:extension>
			</xs:complexContent>
		</xs:complexType>
	</xs:element>
	<xs:complexType name="topicset.class">
		<xs:sequence>
			<xs:group ref="topicset.content"/>
		</xs:sequence>
		<xs:attributeGroup ref="topicset.attributes"/>
	</xs:complexType>
	<xs:group name="topicset.content">
		<xs:sequence>
			<xs:sequence>
				<xs:element ref="topicmeta" minOccurs="0"/>
				<xs:choice minOccurs="0" maxOccurs="unbounded">
					<xs:group ref="topicref"/>
					<xs:group ref="anchor"/>
					<xs:group ref="navref"/>
					<xs:group ref="data.elements.incl"/>
				</xs:choice>
			</xs:sequence>
		</xs:sequence>
	</xs:group>
	<xs:attributeGroup name="topicset.attributes">
		<xs:attribute name="navtitle" type="xs:string" form="unqualified"/>
		<xs:attribute name="href" type="xs:string" form="unqualified"/>
		<xs:attribute name="keyref" type="xs:string" form="unqualified"/>
		<xs:attribute name="keys" type="xs:string" form="unqualified"/>
		<xs:attribute name="query" type="xs:string" form="unqualified"/>
		<xs:attribute name="copy-to" type="xs:string" form="unqualified"/>
		<xs:attribute name="outputclass" type="xs:string" form="unqualified"/>
		<!-- topic-ref-att plus chuck defaulted to "to-navigation" -->
		<xs:attribute name="collection-type" type="collection-type.class" form="unqualified"/>
		<xs:attribute name="processing-role" type="processing-role-att.class" form="unqualified"/>
		<xs:attribute name="type" type="xs:string" form="unqualified"/>
		<xs:attribute name="scope" type="scope-att.class" form="unqualified"/>
		<xs:attribute name="locktitle" type="yesno-att.class" form="unqualified"/>
		<xs:attribute name="format" type="xs:string" form="unqualified"/>
		<xs:attribute name="linking" type="linkingtypes.class" form="unqualified"/>
		<xs:attribute name="toc" type="yesno-att.class" form="unqualified"/>
		<xs:attribute name="print" type="print-att.class" form="unqualified"/>
		<xs:attribute name="search" type="yesno-att.class" form="unqualified"/>
		<xs:attribute name="chunk" type="xs:string" default="to-navigation" form="unqualified"/>
		<xs:attribute name="id" type="xs:NMTOKEN" use="required" form="unqualified"/>
		<xs:attributeGroup ref="select-atts"/>
		<xs:attributeGroup ref="localization-atts"/>
		<xs:attributeGroup ref="conref-atts"/>
		<xs:attributeGroup ref="global-atts"/>
	</xs:attributeGroup>
	<xs:element name="topicsetref">
		<xs:annotation>
			<xs:documentation>The &lt;<keyword>topicsetref</keyword>>  pecializes &lt;topicref> to set format="ditamap" and 
        type="branch" defaults for a reference to a &lt;topicset> to enable reuse of small collections within a 
        map (especially for task composition approaches in which multiple larger task collections reuse smaller component task collections). 
      </xs:documentation>
		</xs:annotation>
		<xs:complexType>
			<xs:complexContent>
				<xs:extension base="topicsetref.class">
					<xs:attribute ref="class" default="+ map/topicref mapgroup-d/topicsetref "/>
				</xs:extension>
			</xs:complexContent>
		</xs:complexType>
	</xs:element>
	<xs:complexType name="topicsetref.class">
		<xs:sequence>
			<xs:group ref="topicsetref.content"/>
		</xs:sequence>
		<xs:attributeGroup ref="topicsetref.attributes"/>
	</xs:complexType>
	<xs:group name="topicsetref.content">
		<xs:sequence>
			<xs:sequence>
				<xs:element ref="topicmeta" minOccurs="0"/>
				<xs:choice minOccurs="0" maxOccurs="unbounded">
					<xs:group ref="topicref"/>
					<xs:group ref="data.elements.incl"/>
				</xs:choice>
			</xs:sequence>
		</xs:sequence>
	</xs:group>
	<xs:attributeGroup name="topicsetref.attributes">
		<xs:attribute name="navtitle" type="xs:string" form="unqualified"/>
		<xs:attribute name="href" type="xs:string" form="unqualified"/>
		<xs:attribute name="keyref" type="xs:string" form="unqualified"/>
		<xs:attribute name="keys" type="xs:string" form="unqualified"/>
		<xs:attribute name="query" type="xs:string" form="unqualified"/>
		<xs:attribute name="copy-to" type="xs:string" form="unqualified"/>
		<xs:attribute name="outputclass" type="xs:string" form="unqualified"/>
		<!-- topic-ref-att plus chuck fixed to "to-navigation" -->
		<xs:attribute name="collection-type" type="collection-type.class" form="unqualified"/>
		<xs:attribute name="processing-role" type="processing-role-att.class" form="unqualified"/>
		<xs:attribute name="type" type="xs:string" default="topicset" form="unqualified"/>
		<xs:attribute name="scope" type="scope-att.class" form="unqualified"/>
		<xs:attribute name="locktitle" type="yesno-att.class" form="unqualified"/>
		<xs:attribute name="format" type="xs:string" default="ditamap" form="unqualified"/>
		<xs:attribute name="linking" type="linkingtypes.class" form="unqualified"/>
		<xs:attribute name="toc" type="yesno-att.class" form="unqualified"/>
		<xs:attribute name="print" type="print-att.class" form="unqualified"/>
		<xs:attribute name="search" type="yesno-att.class" form="unqualified"/>
		<xs:attribute name="chunk" type="xs:string" form="unqualified"/>
		<xs:attributeGroup ref="univ-atts"/>
		<xs:attributeGroup ref="global-atts"/>
	</xs:attributeGroup>
	<xs:element name="keydef">
		<xs:annotation>
			<xs:documentation>The &lt;<keyword>keydef</keyword>>  specializes &lt;topicref> to set a chunk="to-navigation" 
        default and required id attribute to make it easy to delimit standalone, reusable collections of content within a 
        map (such as lessons within a course or large tasks explained by a collection of discrete task topics).        
      </xs:documentation>
		</xs:annotation>
		<xs:complexType>
			<xs:complexContent>
				<xs:extension base="keydef.class">
					<xs:attribute ref="class" default="+ map/topicref mapgroup-d/keydef "/>
				</xs:extension>
			</xs:complexContent>
		</xs:complexType>
	</xs:element>
	<xs:complexType name="keydef.class">
		<xs:sequence>
			<xs:group ref="keydef.content"/>
		</xs:sequence>
		<xs:attributeGroup ref="keydef.attributes"/>
	</xs:complexType>
	<xs:group name="keydef.content">
		<xs:sequence>
			<xs:sequence>
				<xs:element ref="topicmeta" minOccurs="0"/>
				<xs:choice minOccurs="0" maxOccurs="unbounded">
					<xs:group ref="topicref"/>
					<xs:group ref="anchor"/>
					<xs:group ref="navref"/>
					<xs:group ref="data.elements.incl"/>
				</xs:choice>
			</xs:sequence>
		</xs:sequence>
	</xs:group>
	<xs:attributeGroup name="keydef.attributes">
		<xs:attribute name="navtitle" type="xs:string" form="unqualified"/>
		<xs:attribute name="href" type="xs:string" form="unqualified"/>
		<xs:attribute name="keyref" type="xs:string" form="unqualified"/>
		<xs:attribute name="keys" type="xs:string" use="required" form="unqualified"/>
		<xs:attribute name="query" type="xs:string" form="unqualified"/>
		<xs:attribute name="copy-to" type="xs:string" form="unqualified"/>
		<xs:attribute name="outputclass" type="xs:string" form="unqualified"/>
		<xs:attribute name="collection-type" type="collection-type.class" form="unqualified"/>
		<xs:attribute name="processing-role" type="processing-role-att.class" default="resource-only" form="unqualified"/>
		<xs:attribute name="type" type="xs:string" form="unqualified"/>
		<xs:attribute name="scope" type="scope-att.class" form="unqualified"/>
		<xs:attribute name="locktitle" type="yesno-att.class" form="unqualified"/>
		<xs:attribute name="format" type="xs:string" form="unqualified"/>
		<xs:attribute name="linking" type="linkingtypes.class" form="unqualified"/>
		<xs:attribute name="toc" type="yesno-att.class" form="unqualified"/>
		<xs:attribute name="print" type="print-att.class" form="unqualified"/>
		<xs:attribute name="search" type="yesno-att.class" form="unqualified"/>
		<xs:attribute name="chunk" type="xs:string" form="unqualified"/>
		<xs:attributeGroup ref="univ-atts"/>
		<xs:attributeGroup ref="global-atts"/>
	</xs:attributeGroup>
	<!--  Import the XML Schema that contains the defiinitions for xml:lang and xml:space attributes -->
	<xs:attributeGroup name="display-atts">
		<xs:annotation>
			<xs:documentation>Display attributes is a parameter entity declaration in the topic
                XSD that includes attributes whose values may be used for affecting the display
                of a topic or its selection by search tools.
            </xs:documentation>
		</xs:annotation>
		<xs:attribute name="scale" type="scale-atts.class"/>
		<xs:attribute name="frame" type="frame-att.class"/>
		<xs:attribute name="expanse" type="expanse-att.class"/>
	</xs:attributeGroup>
	<xs:simpleType name="frame-att.class">
		<xs:restriction base="xs:string">
			<xs:enumeration value="top"/>
			<xs:enumeration value="bottom"/>
			<xs:enumeration value="topbot"/>
			<xs:enumeration value="all"/>
			<xs:enumeration value="sides"/>
			<xs:enumeration value="none"/>
			<xs:enumeration value="-dita-use-conref-target"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="expanse-att.class">
		<xs:restriction base="xs:string">
			<xs:enumeration value="page"/>
			<xs:enumeration value="column"/>
			<xs:enumeration value="textline"/>
			<xs:enumeration value="-dita-use-conref-target"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:attributeGroup name="id-atts">
		<xs:annotation>
			<xs:documentation>ID attributes (%id-atts;) is a parameter entity declaration in the
                topic XSD that includes attributes that enable the naming and referencing
                of elements in a DITA topic: <keyword>id</keyword> and <keyword>conref</keyword>.
            </xs:documentation>
		</xs:annotation>
		<xs:attribute name="id" type="xs:NMTOKEN"/>
		<xs:attributeGroup ref="conref-atts"/>
	</xs:attributeGroup>
	<xs:attributeGroup name="conref-atts">
		<xs:annotation>
			<xs:documentation>
      </xs:documentation>
		</xs:annotation>
		<xs:attribute name="conref" type="xs:string"/>
		<xs:attribute name="conrefend" type="xs:string"/>
		<xs:attribute name="conaction" type="conaction-att.class"/>
		<xs:attribute name="conkeyref" type="xs:string"/>
	</xs:attributeGroup>
	<xs:simpleType name="conaction-att.class">
		<xs:restriction base="xs:string">
			<xs:enumeration value="mark"/>
			<xs:enumeration value="pushafter"/>
			<xs:enumeration value="pushbefore"/>
			<xs:enumeration value="pushreplace"/>
			<xs:enumeration value="-dita-use-conref-target"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:attributeGroup name="select-atts">
		<xs:annotation>
			<xs:documentation>Attributes that support both filtering and flagging include <keyword>platform</keyword>, <keyword>product</keyword>, <keyword>
                 audience</keyword>, and  <keyword>otherprops</keyword>. Attribute <keyword>rev</keyword> only
                lets you flag information that matches a run-time parameter. Attribute <keyword>importance</keyword> currently
                provides output effects only for steps (where only the values "optional" and
                "required" are supported).
            </xs:documentation>
		</xs:annotation>
		<xs:attributeGroup ref="filter-atts"/>
		<xs:attribute name="base" type="xs:string"/>
		<xs:attributeGroup ref="base-attribute-extensions"/>
		<xs:attribute name="rev" type="xs:string"/>
		<xs:attribute name="importance" type="importance-atts.class"/>
		<xs:attribute name="status" type="status-atts.class"/>
	</xs:attributeGroup>
	<xs:attributeGroup name="data-element-atts.class">
		<xs:attributeGroup ref="univ-atts"/>
		<xs:attribute name="name" type="xs:string"/>
		<xs:attribute name="datatype" type="xs:string"/>
		<xs:attribute name="value" type="xs:string"/>
		<xs:attribute name="href" type="xs:string"/>
		<xs:attribute name="keyref" type="xs:string"/>
		<xs:attribute name="format" type="xs:string"/>
		<xs:attribute name="type" type="xs:string"/>
		<xs:attribute name="scope" type="scope-att.class"/>
		<xs:attribute name="outputclass" type="xs:string"/>
	</xs:attributeGroup>
	<xs:simpleType name="importance-atts.class">
		<xs:restriction base="xs:string">
			<xs:enumeration value="obsolete"/>
			<xs:enumeration value="deprecated"/>
			<xs:enumeration value="optional"/>
			<xs:enumeration value="default"/>
			<xs:enumeration value="low"/>
			<xs:enumeration value="normal"/>
			<xs:enumeration value="high"/>
			<xs:enumeration value="recommended"/>
			<xs:enumeration value="required"/>
			<xs:enumeration value="urgent"/>
			<xs:enumeration value="-dita-use-conref-target"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="scale-atts.class">
		<xs:restriction base="xs:string">
			<xs:enumeration value="50"/>
			<xs:enumeration value="60"/>
			<xs:enumeration value="70"/>
			<xs:enumeration value="80"/>
			<xs:enumeration value="90"/>
			<xs:enumeration value="100"/>
			<xs:enumeration value="110"/>
			<xs:enumeration value="120"/>
			<xs:enumeration value="140"/>
			<xs:enumeration value="160"/>
			<xs:enumeration value="180"/>
			<xs:enumeration value="200"/>
			<xs:enumeration value="-dita-use-conref-target"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="status-atts.class">
		<xs:restriction base="xs:string">
			<xs:enumeration value="new"/>
			<xs:enumeration value="changed"/>
			<xs:enumeration value="deleted"/>
			<xs:enumeration value="unchanged"/>
			<xs:enumeration value="-dita-use-conref-target"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:attributeGroup name="univ-atts">
		<xs:annotation>
			<xs:documentation>Universal attributes is a parameter entity declaration in the topic XSD that
                includes all of the attributes in the select-atts and id-atts attribute groups. 
            </xs:documentation>
		</xs:annotation>
		<xs:attributeGroup ref="id-atts"/>
		<xs:attributeGroup ref="select-atts"/>
		<xs:attributeGroup ref="localization-atts"/>
	</xs:attributeGroup>
	<xs:attributeGroup name="univ-atts-translate-no">
		<xs:attributeGroup ref="id-atts"/>
		<xs:attributeGroup ref="select-atts"/>
		<xs:attributeGroup ref="localization-atts-translate-no"/>
	</xs:attributeGroup>
	<xs:attributeGroup name="global-atts">
		<xs:annotation>
			<xs:documentation>Debugging attributes, normally hidden from authoring view.        
            </xs:documentation>
		</xs:annotation>
		<xs:attribute name="xtrc" type="xs:string"/>
		<xs:attribute name="xtrf" type="xs:string"/>
	</xs:attributeGroup>
	<!-- =========================================================================== -->
	<!-- COMMON GROUP DECLARATIONS - START ======================================= -->
	<!-- =========================================================================== -->
	<!-- Phrase or inline elements of various classes
        <!ENTITY % basic.ph             "%ph;|%term;|%xref;|%cite;|%q;|%state;|%keyword;|%tm;"> -->
	<xs:group name="basic.ph">
		<xs:choice>
			<xs:group ref="ph"/>
			<xs:group ref="term"/>
			<xs:group ref="xref"/>
			<xs:group ref="cite"/>
			<xs:group ref="q"/>
			<xs:group ref="state"/>
			<xs:group ref="boolean"/>
			<xs:group ref="keyword"/>
			<xs:group ref="tm"/>
		</xs:choice>
	</xs:group>
	<!-- Elements common to most body-like contexts -->
	<xs:group name="basic.block">
		<xs:choice>
			<xs:group ref="p"/>
			<xs:group ref="lq"/>
			<xs:group ref="note"/>
			<xs:group ref="dl"/>
			<xs:group ref="ul"/>
			<xs:group ref="ol"/>
			<xs:group ref="sl"/>
			<xs:group ref="pre"/>
			<xs:group ref="lines"/>
			<xs:group ref="fig"/>
			<xs:group ref="image"/>
			<xs:group ref="object"/>
			<xs:group ref="table"/>
			<xs:group ref="simpletable"/>
		</xs:choice>
	</xs:group>
	<!-- class groupings to preserve in a schema
        <!ENTITY % basic.phandblock     "%basic.ph; | %basic.block;">
    -->
	<xs:group name="basic.phandblock">
		<xs:choice>
			<xs:group ref="basic.ph"/>
			<xs:group ref="basic.block"/>
		</xs:choice>
	</xs:group>
	<!-- Exclusions:.models.modified by removing excluded content -->
	<!-- <!ENTITY % basic.ph.noxref      "%ph;|%term;|              %q;|%state;|%keyword;|%tm">  -->
	<xs:group name="basic.ph.noxref">
		<xs:choice>
			<xs:group ref="ph"/>
			<xs:group ref="term"/>
			<xs:group ref="q"/>
			<xs:group ref="state"/>
			<xs:group ref="boolean"/>
			<xs:group ref="keyword"/>
			<xs:group ref="tm"/>
		</xs:choice>
	</xs:group>
	<!-- <!ENTITY % basic.block.notbl    "%p;|%lq;|%note;|%dl;|%ul;|%ol;|%pre;|%lines;|%fig;|%image;|%object;">  -->
	<xs:group name="basic.block.notbl">
		<xs:choice>
			<xs:group ref="p"/>
			<xs:group ref="lq"/>
			<xs:group ref="note"/>
			<xs:group ref="dl"/>
			<xs:group ref="ul"/>
			<xs:group ref="ol"/>
			<xs:group ref="sl"/>
			<xs:group ref="pre"/>
			<xs:group ref="lines"/>
			<xs:group ref="fig"/>
			<xs:group ref="image"/>
			<xs:group ref="object"/>
		</xs:choice>
	</xs:group>
	<!-- <!ENTITY % basic.block.nonote   "%p;|%lq;|       %dl;|%ul;|%ol;|%pre;|%lines;|%fig;|%image;|%object;|%table;|%simpletable;">  -->
	<xs:group name="basic.block.nonote">
		<xs:choice>
			<xs:group ref="p"/>
			<xs:group ref="lq"/>
			<xs:group ref="dl"/>
			<xs:group ref="ul"/>
			<xs:group ref="ol"/>
			<xs:group ref="sl"/>
			<xs:group ref="pre"/>
			<xs:group ref="lines"/>
			<xs:group ref="fig"/>
			<xs:group ref="image"/>
			<xs:group ref="object"/>
			<xs:group ref="table"/>
			<xs:group ref="simpletable"/>
		</xs:choice>
	</xs:group>
	<!-- <!ENTITY % basic.block.nopara   "    %lq;|%note;|%dl;|%ul;|%ol;|%pre;|%lines;|%fig;|%image;|%object;|%table;|%simpletable;">  -->
	<xs:group name="basic.block.nopara">
		<xs:choice>
			<xs:group ref="lq"/>
			<xs:group ref="note"/>
			<xs:group ref="dl"/>
			<xs:group ref="ul"/>
			<xs:group ref="ol"/>
			<xs:group ref="sl"/>
			<xs:group ref="pre"/>
			<xs:group ref="lines"/>
			<xs:group ref="fig"/>
			<xs:group ref="image"/>
			<xs:group ref="object"/>
			<xs:group ref="table"/>
			<xs:group ref="simpletable"/>
		</xs:choice>
	</xs:group>
	<!-- <!ENTITY % basic.block.nolq     "%p;|     %note;|%dl;|%ul;|%ol;|%pre;|%lines;|%fig;|%image;|%object;|%table;|%simpletable;">  -->
	<xs:group name="basic.block.nolq">
		<xs:choice>
			<xs:group ref="p"/>
			<xs:group ref="note"/>
			<xs:group ref="dl"/>
			<xs:group ref="ul"/>
			<xs:group ref="ol"/>
			<xs:group ref="sl"/>
			<xs:group ref="pre"/>
			<xs:group ref="lines"/>
			<xs:group ref="fig"/>
			<xs:group ref="image"/>
			<xs:group ref="object"/>
			<xs:group ref="table"/>
			<xs:group ref="simpletable"/>
		</xs:choice>
	</xs:group>
	<!-- <!ENTITY % basic.block.notbnofg  "%p;|%lq;|%note;|%dl;|%ul;|%ol;|%pre;|%lines;|      %image;|%object;">  -->
	<xs:group name="basic.block.notbnofg">
		<xs:choice>
			<xs:group ref="p"/>
			<xs:group ref="lq"/>
			<xs:group ref="note"/>
			<xs:group ref="dl"/>
			<xs:group ref="ul"/>
			<xs:group ref="ol"/>
			<xs:group ref="sl"/>
			<xs:group ref="pre"/>
			<xs:group ref="lines"/>
			<xs:group ref="image"/>
			<xs:group ref="object"/>
		</xs:choice>
	</xs:group>
	<!-- <!ENTITY % basic.block.notbfgobj "%p;|%lq;|%note;|%dl;|%ul;|%ol;|%pre;|%lines;|      %image;">  -->
	<xs:group name="basic.block.notbfgobj">
		<xs:choice>
			<xs:group ref="p"/>
			<xs:group ref="lq"/>
			<xs:group ref="note"/>
			<xs:group ref="dl"/>
			<xs:group ref="ul"/>
			<xs:group ref="ol"/>
			<xs:group ref="sl"/>
			<xs:group ref="pre"/>
			<xs:group ref="lines"/>
			<xs:group ref="image"/>
		</xs:choice>
	</xs:group>
	<!-- Phrase or inline elements of various classes
        <!ENTITY % basic.ph             "%ph;|%term;|%xref;|%cite;|%q;|%state;|%keyword;"> -->
	<xs:group name="basic.ph.notm">
		<xs:choice>
			<xs:group ref="ph"/>
			<xs:group ref="term"/>
			<xs:group ref="xref"/>
			<xs:group ref="cite"/>
			<xs:group ref="q"/>
			<xs:group ref="state"/>
			<xs:group ref="boolean"/>
			<xs:group ref="keyword"/>
		</xs:choice>
	</xs:group>
	<!-- Inclusions: defined sets that can be added into appropriate.models -->
	<xs:group name="txt.incl">
		<xs:choice>
			<xs:group ref="draft-comment"/>
			<xs:group ref="required-cleanup"/>
			<xs:group ref="fn"/>
			<xs:group ref="indextermref"/>
			<xs:group ref="indexterm"/>
		</xs:choice>
	</xs:group>
	<!-- =========================================================================== -->
	<!-- COMMON GROUP DECLARATIONS - END ======================================= -->
	<!-- =========================================================================== -->
	<!-- <!ENTITY % fig.cnt              "%basic.block.notbnofg; | %simpletable; | %xref; | %fn;| %data.elements.incl; | %foreign.unknown.incl;"> -->
	<xs:group name="fig.cnt">
		<xs:choice>
			<xs:group ref="basic.block.notbnofg"/>
			<xs:group ref="simpletable"/>
			<xs:group ref="xref"/>
			<xs:group ref="fn"/>
			<xs:group ref="data.elements.incl"/>
			<xs:group ref="foreign.unknown.incl"/>
		</xs:choice>
	</xs:group>
	<!-- <!ENTITY % desc.cnt             "#PCDATA | %basic.ph; | %basic.block.notbfgobj; | %data.elements.incl; | %foreign.unknown.incl;"> -->
	<xs:group name="desc.cnt">
		<xs:choice>
			<xs:group ref="basic.ph"/>
			<xs:group ref="basic.block.notbfgobj"/>
			<xs:group ref="data.elements.incl"/>
			<xs:group ref="foreign.unknown.incl"/>
		</xs:choice>
	</xs:group>
	<!-- <!ENTITY % note.cnt             "#PCDATA | %basic.ph; | %basic.block.nonote; | %txt.incl; | %data.elements.incl; | %foreign.unknown.incl;"> -->
	<xs:group name="note.cnt">
		<xs:choice>
			<xs:group ref="basic.ph"/>
			<xs:group ref="basic.block.nonote"/>
			<xs:group ref="txt.incl"/>
			<xs:group ref="data.elements.incl"/>
			<xs:group ref="foreign.unknown.incl"/>
		</xs:choice>
	</xs:group>
	<!-- <!ENTITY % fn.cnt               "#PCDATA | %basic.ph; | %basic.block.notbl; | %data.elements.incl; | %foreign.unknown.incl;"> -->
	<xs:group name="fn.cnt">
		<xs:choice>
			<xs:group ref="basic.ph"/>
			<xs:group ref="basic.block.notbl"/>
			<xs:group ref="data.elements.incl"/>
			<xs:group ref="foreign.unknown.incl"/>
		</xs:choice>
	</xs:group>
	<!-- <!ENTITY % ph.cnt               "#PCDATA | %basic.ph; | %image;              | %; | %data.elements.incl; | %foreign.unknown.incl;"> -->
	<xs:group name="ph.cnt">
		<xs:choice>
			<xs:group ref="basic.ph"/>
			<xs:group ref="image"/>
			<xs:group ref="txt.incl"/>
			<xs:group ref="data.elements.incl"/>
			<xs:group ref="foreign.unknown.incl"/>
		</xs:choice>
	</xs:group>
	<!-- <!ENTITY % tblcell.cnt          "#PCDATA | %basic.ph; | %basic.block.notbl;  | %txt.incl; | %data.elements.incl; | %foreign.unknown.incl;"> -->
	<xs:group name="tblcell.cnt">
		<xs:choice>
			<xs:group ref="basic.ph"/>
			<xs:group ref="basic.block.notbl"/>
			<xs:group ref="txt.incl"/>
			<xs:group ref="data.elements.incl"/>
			<xs:group ref="foreign.unknown.incl"/>
		</xs:choice>
	</xs:group>
	<!-- <!ENTITY % itemgroup.cnt        "#PCDATA | %basic.ph; | %basic.block; |             %txt.incl; | %data.elements.incl; | %foreign.unknown.incl;"> -->
	<xs:group name="itemgroup.cnt">
		<xs:choice>
			<xs:group ref="basic.ph"/>
			<xs:group ref="basic.block"/>
			<xs:group ref="txt.incl"/>
			<xs:group ref="data.elements.incl"/>
			<xs:group ref="foreign.unknown.incl"/>
		</xs:choice>
	</xs:group>
	<!-- <!ENTITY % listitem.cnt         "#PCDATA | %basic.ph; | %basic.block; |%itemgroup;| %txt.incl; | %data.elements.incl; | %foreign.unknown.incl;"> -->
	<xs:group name="listitem.cnt">
		<xs:choice>
			<xs:group ref="basic.ph"/>
			<xs:group ref="basic.block"/>
			<xs:group ref="itemgroup"/>
			<xs:group ref="txt.incl"/>
			<xs:group ref="data.elements.incl"/>
			<xs:group ref="foreign.unknown.incl"/>
		</xs:choice>
	</xs:group>
	<!-- <!ENTITY % para.cnt             "#PCDATA | %basic.ph; | %basic.block.nopara; | %txt.incl; | %data.elements.incl; | %foreign.unknown.incl;"> -->
	<xs:group name="para.cnt">
		<xs:choice>
			<xs:group ref="basic.ph"/>
			<xs:group ref="basic.block.nopara"/>
			<xs:group ref="txt.incl"/>
			<xs:group ref="data.elements.incl"/>
			<xs:group ref="foreign.unknown.incl"/>
		</xs:choice>
	</xs:group>
	<!-- <!ENTITY % longquote.cnt        "#PCDATA | %basic.ph; | %basic.block.nolq;   | %txt.incl; | %data.elements.incl; | %foreign.unknown.incl;"> -->
	<xs:group name="longquote.cnt">
		<xs:choice>
			<xs:group ref="basic.ph"/>
			<xs:group ref="basic.block.nolq"/>
			<xs:group ref="txt.incl"/>
			<xs:group ref="data.elements.incl"/>
			<xs:group ref="foreign.unknown.incl"/>
			<xs:group ref="longquoteref"/>
		</xs:choice>
	</xs:group>
	<!-- <!ENTITY % shortquote.cnt       "#PCDATA | %basic.ph; | %data.elements.incl; | %foreign.unknown.incl;"> -->
	<xs:group name="shortquote.cnt">
		<xs:choice>
			<xs:group ref="basic.ph"/>
			<xs:group ref="data.elements.incl"/>
			<xs:group ref="foreign.unknown.incl"/>
		</xs:choice>
	</xs:group>
	<!-- <!ENTITY % defn.cnt             ""#PCDATA | %basic.ph; | %basic.block; |%itemgroup;| %txt.incl; | %data.elements.incl; | %foreign.unknown.incl;"> -->
	<xs:group name="defn.cnt">
		<xs:choice>
			<xs:group ref="basic.ph"/>
			<xs:group ref="basic.block"/>
			<xs:group ref="itemgroup"/>
			<xs:group ref="txt.incl"/>
			<xs:group ref="data.elements.incl"/>
			<xs:group ref="foreign.unknown.incl"/>
		</xs:choice>
	</xs:group>
	<!-- <!ENTITY % pre.cnt              "#PCDATA | %basic.ph; | %txt.incl; | %data.elements.incl; | %foreign.unknown.incl;"> -->
	<xs:group name="pre.cnt">
		<xs:choice>
			<xs:group ref="basic.ph"/>
			<xs:group ref="txt.incl"/>
			<xs:group ref="data.elements.incl"/>
			<xs:group ref="foreign.unknown.incl"/>
		</xs:choice>
	</xs:group>
	<!-- <!ENTITY % term.cnt             "#PCDATA | %basic.ph; | %image; | %data.elements.incl; | %foreign.unknown.incl;"> -->
	<xs:group name="term.cnt">
		<xs:choice>
			<xs:group ref="basic.ph"/>
			<xs:group ref="image"/>
			<xs:group ref="data.elements.incl"/>
			<xs:group ref="foreign.unknown.incl"/>
		</xs:choice>
	</xs:group>
	<!-- <!ENTITY % xreftext.cnt         "#PCDATA | %basic.ph.noxref; | %image; | %data.elements.incl; | %foreign.unknown.incl;"> -->
	<xs:group name="xreftext.cnt">
		<xs:choice>
			<xs:group ref="basic.ph.noxref"/>
			<xs:group ref="image"/>
			<xs:group ref="data.elements.incl"/>
			<xs:group ref="foreign.unknown.incl"/>
		</xs:choice>
	</xs:group>
	<!-- <!ENTITY % title.cnt            "#PCDATA | %basic.ph.noxref; | %image; | %data.elements.incl; | %foreign.unknown.incl;"> -->
	<xs:group name="title.cnt">
		<xs:choice>
			<xs:group ref="basic.ph.noxref"/>
			<xs:group ref="image"/>
			<xs:group ref="data.elements.incl"/>
			<xs:group ref="foreign.unknown.incl"/>
		</xs:choice>
	</xs:group>
	<!-- <!ENTITY % xrefph.cnt           "#PCDATA | %basic.ph.noxref; | %data.elements.incl; | %foreign.unknown.incl;"> -->
	<xs:group name="xrefph.cnt">
		<xs:choice>
			<xs:group ref="basic.ph.noxref"/>
			<xs:group ref="data.elements.incl"/>
			<xs:group ref="foreign.unknown.incl"/>
		</xs:choice>
	</xs:group>
	<!-- <!ENTITY % words.cnt            "#PCDATA | %keyword; | %term; | %data.elements.incl; | %foreign.unknown.incl;"> -->
	<xs:group name="words.cnt">
		<xs:choice>
			<xs:group ref="keyword"/>
			<xs:group ref="term"/>
			<xs:group ref="data.elements.incl"/>
			<xs:group ref="foreign.unknown.incl"/>
		</xs:choice>
	</xs:group>
	<!--<!ENTITY % data.cnt             "%words.cnt;|%image;|%object;|%ph;|%title;">-->
	<xs:group name="data.cnt">
		<xs:choice>
			<xs:group ref="words.cnt"/>
			<xs:group ref="image"/>
			<xs:group ref="object"/>
			<xs:group ref="ph"/>
			<xs:group ref="title"/>
		</xs:choice>
	</xs:group>
	<xs:group name="data.elements.incl">
		<xs:choice>
			<xs:group ref="data"/>
			<xs:group ref="data-about"/>
		</xs:choice>
	</xs:group>
	<xs:group name="foreign.unknown.incl">
		<xs:choice>
			<xs:group ref="foreign"/>
			<xs:group ref="unknown"/>
		</xs:choice>
	</xs:group>
	<xs:simpleType name="role-att.class">
		<xs:restriction base="xs:string">
			<xs:enumeration value="parent"/>
			<xs:enumeration value="child"/>
			<xs:enumeration value="sibling"/>
			<xs:enumeration value="friend"/>
			<xs:enumeration value="next"/>
			<xs:enumeration value="previous"/>
			<xs:enumeration value="cousin"/>
			<xs:enumeration value="ancestor"/>
			<xs:enumeration value="descendant"/>
			<xs:enumeration value="sample"/>
			<xs:enumeration value="external"/>
			<xs:enumeration value="other"/>
			<xs:enumeration value="-dita-use-conref-target"/>
		</xs:restriction>
	</xs:simpleType>
	<!-- Remove as per DITA Feature 12022
      <xs:simpleType name="view-att.class">
        <xs:restriction base="xs:string">
            <xs:enumeration value="internal"/>
            <xs:enumeration value="classified"/>
            <xs:enumeration value="all"/>
            <xs:enumeration value="entitled"/>
            <xs:enumeration value="-dita-use-conref-target"/>
        </xs:restriction>
    </xs:simpleType>-->
	<xs:simpleType name="workflow-att.class">
		<xs:restriction base="xs:string">
			<xs:enumeration value="author"/>
			<xs:enumeration value="editor"/>
			<xs:enumeration value="reviewer"/>
			<xs:enumeration value="publisher"/>
			<xs:enumeration value="-dita-use-conref-target"/>
		</xs:restriction>
	</xs:simpleType>
	<!-- Remove as per DITA Feature 12022
      <xs:simpleType name="job-att.class">
        <xs:restriction base="xs:string">
            <xs:enumeration value="installing"/>
            <xs:enumeration value="customizing"/>
            <xs:enumeration value="administering"/>
            <xs:enumeration value="programming"/>
            <xs:enumeration value="using"/>
            <xs:enumeration value="maintaining"/>
            <xs:enumeration value="troubleshooting"/>
            <xs:enumeration value="evaluating"/>
            <xs:enumeration value="planning"/>
            <xs:enumeration value="migrating"/>
            <xs:enumeration value="other"/>
            <xs:enumeration value="-dita-use-conref-target"/>
        </xs:restriction>
    </xs:simpleType>-->
	<!-- Remove as per DITA Feature 12022
      <xs:simpleType name="experiencelevel-att.class">
        <xs:restriction base="xs:string">
            <xs:enumeration value="novice"/>
            <xs:enumeration value="general"/>
            <xs:enumeration value="expert"/>
            <xs:enumeration value="-dita-use-conref-target"/>
        </xs:restriction>
    </xs:simpleType>-->
	<!--  Remove as per DITA Feature 12022
    <xs:simpleType name="disposition-att.class">
        <xs:restriction base="xs:string">
            <xs:enumeration value="issue"/>
            <xs:enumeration value="open"/>
            <xs:enumeration value="accepted"/>
            <xs:enumeration value="rejected"/>
            <xs:enumeration value="deferred"/>
            <xs:enumeration value="duplicate"/>
            <xs:enumeration value="reopened"/>
            <xs:enumeration value="unassigned"/>
            <xs:enumeration value="completed"/>
            <xs:enumeration value="-dita-use-conref-target"/>
        </xs:restriction>
    </xs:simpleType> -->
	<xs:simpleType name="yesno-att.class">
		<xs:restriction base="xs:string">
			<xs:enumeration value="yes"/>
			<xs:enumeration value="no"/>
			<xs:enumeration value="-dita-use-conref-target"/>
		</xs:restriction>
	</xs:simpleType>
	<!-- This is referenced inside CALS tables -->
	<xs:element name="title">
		<xs:annotation>
			<xs:documentation>The &lt;<keyword>title</keyword>> element contains a heading or
                label for the main parts of a document such as &lt;topic>, &lt;section>, and
                &lt;example> and for the display elements such as figure  (&lt;<keyword>fig</keyword>>)
                and &lt;<keyword>table</keyword>>.
            </xs:documentation>
		</xs:annotation>
		<xs:complexType mixed="true">
			<xs:complexContent>
				<xs:extension base="title.class">
					<xs:attribute ref="class" default="- topic/title "/>
				</xs:extension>
			</xs:complexContent>
		</xs:complexType>
	</xs:element>
	<xs:complexType name="title.class" mixed="true">
		<xs:sequence>
			<xs:group ref="title.content"/>
		</xs:sequence>
		<xs:attributeGroup ref="title.attributes"/>
	</xs:complexType>
	<xs:group name="title.content">
		<xs:sequence>
			<xs:choice minOccurs="0" maxOccurs="unbounded">
				<xs:group ref="title.cnt" minOccurs="0"/>
			</xs:choice>
		</xs:sequence>
	</xs:group>
	<xs:attributeGroup name="title.attributes">
		<xs:attribute name="outputclass" type="xs:string"/>
		<xs:attribute name="base" type="xs:string"/>
		<xs:attributeGroup ref="base-attribute-extensions"/>
		<xs:attributeGroup ref="id-atts"/>
		<xs:attributeGroup ref="localization-atts"/>
		<xs:attributeGroup ref="global-atts"/>
	</xs:attributeGroup>
	<xs:element name="keyword">
		<xs:annotation>
			<xs:documentation>The &lt;<keyword>keyword</keyword>> element identifies a keyword
                or token, such as a single value from an enumerated list, the name of a command
                or parameter, or a lookup key for a message (contrast with <xref href="term.xml">term</xref>).
            </xs:documentation>
		</xs:annotation>
		<xs:complexType mixed="true">
			<xs:complexContent>
				<xs:extension base="keyword.class">
					<xs:attribute ref="class" default="- topic/keyword "/>
				</xs:extension>
			</xs:complexContent>
		</xs:complexType>
	</xs:element>
	<xs:complexType name="keyword.class" mixed="true">
		<xs:sequence>
			<xs:group ref="keyword.content"/>
		</xs:sequence>
		<xs:attributeGroup ref="keyword.attributes"/>
	</xs:complexType>
	<xs:group name="keyword.content">
		<xs:sequence>
			<xs:choice minOccurs="0" maxOccurs="unbounded">
				<xs:group ref="tm" minOccurs="0"/>
				<xs:group ref="text" minOccurs="0"/>
			</xs:choice>
		</xs:sequence>
	</xs:group>
	<xs:attributeGroup name="keyword.attributes">
		<xs:attribute name="keyref" type="xs:string"/>
		<xs:attribute name="outputclass" type="xs:string"/>
		<xs:attributeGroup ref="univ-atts"/>
		<xs:attributeGroup ref="global-atts"/>
	</xs:attributeGroup>
	<xs:element name="desc">
		<xs:annotation>
			<xs:documentation>The &lt;<keyword>desc</keyword>> element contains the description
                of the current element. A description should provide more information than
                the title.
            </xs:documentation>
		</xs:annotation>
		<xs:complexType mixed="true">
			<xs:complexContent>
				<xs:extension base="desc.class">
					<xs:attribute ref="class" default="- topic/desc "/>
				</xs:extension>
			</xs:complexContent>
		</xs:complexType>
	</xs:element>
	<xs:complexType name="desc.class" mixed="true">
		<xs:sequence>
			<xs:group ref="desc.content"/>
		</xs:sequence>
		<xs:attributeGroup ref="desc.attributes"/>
	</xs:complexType>
	<xs:group name="desc.content">
		<xs:sequence>
			<xs:choice minOccurs="0" maxOccurs="unbounded">
				<xs:group ref="desc.cnt" minOccurs="0"/>
			</xs:choice>
		</xs:sequence>
	</xs:group>
	<xs:attributeGroup name="desc.attributes">
		<xs:attribute name="outputclass" type="xs:string"/>
		<xs:attributeGroup ref="univ-atts"/>
		<xs:attributeGroup ref="global-atts"/>
	</xs:attributeGroup>
	<xs:element name="ph">
		<xs:annotation>
			<xs:documentation>The phrase (&lt;<keyword>ph</keyword>>) element is used to organize
        content for reuse or conditional processing (for example, when part of a paragraph
        applies to a particular audience). It can be used by future specializations
        of DITA to apply specific processing or formatting to marked up phrases.</xs:documentation>
		</xs:annotation>
		<xs:complexType mixed="true">
			<xs:complexContent>
				<xs:extension base="ph.class">
					<xs:attribute ref="class" default="- topic/ph "/>
				</xs:extension>
			</xs:complexContent>
		</xs:complexType>
	</xs:element>
	<xs:complexType name="ph.class" mixed="true">
		<xs:annotation>
			<xs:documentation>var &amp; keyword defined by syntax diagram</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:group ref="ph.content"/>
		</xs:sequence>
		<xs:attributeGroup ref="ph.attributes"/>
	</xs:complexType>
	<xs:group name="ph.content">
		<xs:sequence>
			<xs:choice minOccurs="0" maxOccurs="unbounded">
				<xs:group ref="ph.cnt" minOccurs="0"/>
				<xs:group ref="text" minOccurs="0"/>
			</xs:choice>
		</xs:sequence>
	</xs:group>
	<xs:attributeGroup name="ph.attributes">
		<xs:attribute name="keyref" type="xs:string"/>
		<xs:attribute name="outputclass" type="xs:string"/>
		<xs:attributeGroup ref="univ-atts"/>
		<xs:attributeGroup ref="global-atts"/>
	</xs:attributeGroup>
	<xs:element name="term">
		<xs:annotation>
			<xs:documentation>The &lt;<keyword>term</keyword>> element identifies words that
        represent extended definitions or explanations. In future development of DITA,
        for example, terms might provide associative linking to matching glossary
        entries.
      </xs:documentation>
		</xs:annotation>
		<xs:complexType mixed="true">
			<xs:complexContent>
				<xs:extension base="term.class">
					<xs:attribute ref="class" default="- topic/term "/>
				</xs:extension>
			</xs:complexContent>
		</xs:complexType>
	</xs:element>
	<xs:complexType name="term.class" mixed="true">
		<xs:annotation>
			<xs:documentation>Inline content (prhases)</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:group ref="term.content"/>
		</xs:sequence>
		<xs:attributeGroup ref="term.attributes"/>
	</xs:complexType>
	<xs:group name="term.content">
		<xs:sequence>
			<xs:choice minOccurs="0" maxOccurs="unbounded">
				<xs:group ref="tm" minOccurs="0"/>
				<xs:group ref="text" minOccurs="0"/>
			</xs:choice>
		</xs:sequence>
	</xs:group>
	<xs:attributeGroup name="term.attributes">
		<xs:attribute name="keyref" type="xs:string"/>
		<xs:attribute name="outputclass" type="xs:string"/>
		<xs:attributeGroup ref="univ-atts"/>
		<xs:attributeGroup ref="global-atts"/>
	</xs:attributeGroup>
	<xs:element name="text">
		<xs:complexType mixed="true">
			<xs:complexContent>
				<xs:extension base="text.class">
					<xs:attribute ref="class" default="- topic/text "/>
				</xs:extension>
			</xs:complexContent>
		</xs:complexType>
	</xs:element>
	<xs:complexType name="text.class" mixed="true">
		<xs:sequence>
			<xs:group ref="text.content"/>
		</xs:sequence>
		<xs:attributeGroup ref="text.attributes"/>
	</xs:complexType>
	<xs:group name="text.content">
		<xs:sequence>
			<xs:choice minOccurs="0" maxOccurs="unbounded">
				<xs:group ref="text" minOccurs="0"/>
			</xs:choice>
		</xs:sequence>
	</xs:group>
	<xs:attributeGroup name="text.attributes">
		<xs:attributeGroup ref="univ-atts"/>
		<xs:attributeGroup ref="global-atts"/>
	</xs:attributeGroup>
	<xs:element name="tm">
		<xs:annotation>
			<xs:documentation>The trademark (&lt;<keyword>tm</keyword>>) element in DITA is used
        to markup and identify a term or phrase that is trademarked. Trademarks include
        registered trademarks, service marks, slogans and logos.
      </xs:documentation>
		</xs:annotation>
		<xs:complexType mixed="true">
			<xs:complexContent>
				<xs:extension base="tm.class">
					<xs:attribute ref="class" default="- topic/tm "/>
				</xs:extension>
			</xs:complexContent>
		</xs:complexType>
	</xs:element>
	<xs:complexType name="tm.class" mixed="true">
		<xs:sequence>
			<xs:group ref="tm.content"/>
		</xs:sequence>
		<xs:attributeGroup ref="tm.attributes"/>
	</xs:complexType>
	<xs:group name="tm.content">
		<xs:sequence>
			<xs:choice minOccurs="0" maxOccurs="unbounded">
				<xs:group ref="tm" minOccurs="0"/>
				<xs:group ref="text" minOccurs="0"/>
			</xs:choice>
		</xs:sequence>
	</xs:group>
	<xs:attributeGroup name="tm.attributes">
		<xs:attribute name="trademark" type="xs:string"/>
		<xs:attribute name="tmowner" type="xs:string"/>
		<xs:attribute name="tmtype" type="type-tmtype-att.class" use="required"/>
		<xs:attribute name="tmclass" type="xs:string"/>
		<xs:attributeGroup ref="univ-atts"/>
		<xs:attributeGroup ref="global-atts"/>
	</xs:attributeGroup>
	<xs:simpleType name="type-tmtype-att.class">
		<xs:restriction base="xs:string">
			<xs:enumeration value="tm"/>
			<xs:enumeration value="reg"/>
			<xs:enumeration value="service"/>
			<xs:enumeration value="-dita-use-conref-target"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:element name="boolean">
		<xs:annotation>
			<xs:documentation>( Deprecated ) - The &lt;<keyword>boolean</keyword>&gt; element is used to express
        one of two opposite values, such as yes or no, on or off, true or false, high
        or low, and so forth. The element itself is empty; the value of the element
        is stored in its <keyword>state</keyword> attribute, and
        the semantic associated with the value is typically in a specialized name
        derived from this element. If you need more than two values (for example,
        "yes," "no" and "don&apos;t care") use the <xref href="state.xml">&lt;<keyword>state</keyword>></xref> 
         element instead. This element is primarily for specialization, where
        it can be used to require a logical true or false designation in a particular
        part of the document.
      </xs:documentation>
		</xs:annotation>
		<xs:complexType>
			<xs:complexContent>
				<xs:extension base="boolean.class">
					<xs:attribute ref="class" default="- topic/boolean "/>
				</xs:extension>
			</xs:complexContent>
		</xs:complexType>
	</xs:element>
	<xs:complexType name="boolean.class">
		<xs:attributeGroup ref="boolean.attributes"/>
	</xs:complexType>
	<xs:attributeGroup name="boolean.attributes">
		<xs:attribute name="state" type="yesno-att.class" use="required"/>
		<xs:attribute name="outputclass" type="xs:string"/>
		<xs:attributeGroup ref="univ-atts"/>
		<xs:attributeGroup ref="global-atts"/>
	</xs:attributeGroup>
	<xs:element name="state">
		<xs:annotation>
			<xs:documentation>The &lt;<keyword>state</keyword>> element specifies a name/value
        pair whenever it is necessary to represent a named state that has a variable
        value. The element is primarily intended for use in specializations to represent
        specific states (like logic circuit states, chemical reaction states, airplane
        instrumentation states, and so forth).
      </xs:documentation>
		</xs:annotation>
		<xs:complexType>
			<xs:complexContent>
				<xs:extension base="state.class">
					<xs:attribute ref="class" default="- topic/state "/>
				</xs:extension>
			</xs:complexContent>
		</xs:complexType>
	</xs:element>
	<xs:complexType name="state.class">
		<xs:attributeGroup ref="state.attributes"/>
	</xs:complexType>
	<xs:attributeGroup name="state.attributes">
		<xs:attribute name="name" type="xs:string" use="required"/>
		<xs:attribute name="value" type="xs:string" use="required"/>
		<xs:attribute name="outputclass" type="xs:string"/>
		<xs:attributeGroup ref="univ-atts"/>
		<xs:attributeGroup ref="global-atts"/>
	</xs:attributeGroup>
	<!---->
	<!-- MIME type should follow the convention xxx/xxx -->
	<!-- =========================================================================== -->
	<!-- BASIC DOCUMENT ELEMENT DECLARATIONS (rich text) =========================== -->
	<!-- =========================================================================== -->
	<!-- Base form: Paragraph -->
	<xs:element name="p">
		<xs:annotation>
			<xs:documentation>A paragraph element (&lt;<keyword>p</keyword>>) is a block of
        text containing a single main idea.
      </xs:documentation>
		</xs:annotation>
		<xs:complexType mixed="true">
			<xs:complexContent>
				<xs:extension base="p.class">
					<xs:attribute ref="class" default="- topic/p "/>
				</xs:extension>
			</xs:complexContent>
		</xs:complexType>
	</xs:element>
	<xs:complexType name="p.class" mixed="true">
		<xs:sequence>
			<xs:group ref="p.content"/>
		</xs:sequence>
		<xs:attributeGroup ref="p.attributes"/>
	</xs:complexType>
	<xs:group name="p.content">
		<xs:sequence>
			<xs:choice minOccurs="0" maxOccurs="unbounded">
				<xs:group ref="para.cnt" minOccurs="0"/>
			</xs:choice>
		</xs:sequence>
	</xs:group>
	<xs:attributeGroup name="p.attributes">
		<xs:attribute name="outputclass" type="xs:string"/>
		<xs:attributeGroup ref="univ-atts"/>
		<xs:attributeGroup ref="global-atts"/>
	</xs:attributeGroup>
	<!-- Base form: Excerpt -->
	<xs:element name="lq">
		<xs:annotation>
			<xs:documentation> The long quote (&lt;<keyword>lq</keyword>&gt;) element indicates
        content quoted from another source. Use the quote element &lt;<keyword>q</keyword>&gt;for
        short, inline quotations, and long quote &lt;<keyword>lq</keyword>&gt; for quotations
        that are too long for inline use, following normal guidelines for quoting
        other sources. You can store a URL to the source of the quotation in the <keyword>href</keyword> attribute.
      </xs:documentation>
		</xs:annotation>
		<xs:complexType mixed="true">
			<xs:complexContent>
				<xs:extension base="lq.class">
					<xs:attribute ref="class" default="- topic/lq "/>
				</xs:extension>
			</xs:complexContent>
		</xs:complexType>
	</xs:element>
	<xs:complexType name="lq.class" mixed="true">
		<xs:sequence>
			<xs:group ref="lq.content"/>
		</xs:sequence>
		<xs:attributeGroup ref="lq.attributes"/>
	</xs:complexType>
	<xs:group name="lq.content">
		<xs:sequence>
			<xs:choice minOccurs="0" maxOccurs="unbounded">
				<xs:group ref="longquote.cnt" minOccurs="0"/>
			</xs:choice>
		</xs:sequence>
	</xs:group>
	<xs:attributeGroup name="lq.attributes">
		<xs:attribute name="href" type="xs:string"/>
		<xs:attribute name="keyref" type="xs:string"/>
		<xs:attribute name="type" type="xs:string"/>
		<xs:attribute name="reftitle" type="xs:string"/>
		<xs:attribute name="format" type="xs:string"/>
		<xs:attribute name="scope" type="scope-att.class"/>
		<xs:attribute name="outputclass" type="xs:string"/>
		<xs:attributeGroup ref="univ-atts"/>
		<xs:attributeGroup ref="global-atts"/>
	</xs:attributeGroup>
	<xs:element name="longquoteref">
		<xs:annotation>
			<xs:documentation> 
      </xs:documentation>
		</xs:annotation>
		<xs:complexType>
			<xs:complexContent>
				<xs:extension base="longquoteref.class">
					<xs:attribute ref="class" default="- topic/longquoteref "/>
				</xs:extension>
			</xs:complexContent>
		</xs:complexType>
	</xs:element>
	<xs:complexType name="longquoteref.class">
		<xs:sequence>
			<xs:group ref="longquoteref.content"/>
		</xs:sequence>
		<xs:attributeGroup ref="longquoteref.attributes"/>
	</xs:complexType>
	<xs:group name="longquoteref.content">
		<xs:sequence/>
	</xs:group>
	<xs:attributeGroup name="longquoteref.attributes">
		<xs:attribute name="href" type="xs:string"/>
		<xs:attribute name="keyref" type="xs:string"/>
		<xs:attribute name="type" type="xs:string"/>
		<xs:attribute name="format" type="xs:string"/>
		<xs:attribute name="outputclass" type="xs:string"/>
		<xs:attribute name="scope" type="scope-att.class"/>
		<xs:attributeGroup ref="univ-atts"/>
		<xs:attributeGroup ref="global-atts"/>
	</xs:attributeGroup>
	<!--<xs:simpleType name="type-lq-atts.class">
    <xs:restriction base="xs:string">
      <xs:enumeration value="internal"/>
      <xs:enumeration value="external"/>
      <xs:enumeration value="bibliographic"/>
      <xs:enumeration value="-dita-use-conref-target"/>
    </xs:restriction>
  </xs:simpleType>-->
	<!-- Base form: Note -->
	<xs:element name="note">
		<xs:annotation>
			<xs:documentation>A &lt;<keyword>note</keyword>> element contains information, differentiated
        from the main text, which expands on or calls attention to a particular point.
      </xs:documentation>
		</xs:annotation>
		<xs:complexType mixed="true">
			<xs:complexContent>
				<xs:extension base="note.class">
					<xs:attribute ref="class" default="- topic/note "/>
				</xs:extension>
			</xs:complexContent>
		</xs:complexType>
	</xs:element>
	<xs:complexType name="note.class" mixed="true">
		<xs:sequence>
			<xs:group ref="note.content"/>
		</xs:sequence>
		<xs:attributeGroup ref="note.attributes"/>
	</xs:complexType>
	<xs:group name="note.content">
		<xs:sequence>
			<xs:choice minOccurs="0" maxOccurs="unbounded">
				<xs:group ref="note.cnt" minOccurs="0"/>
			</xs:choice>
		</xs:sequence>
	</xs:group>
	<xs:attributeGroup name="note.attributes">
		<xs:attribute name="type" type="type-note-atts.class"/>
		<xs:attribute name="spectitle" type="xs:string"/>
		<xs:attribute name="othertype" type="xs:string"/>
		<xs:attribute name="outputclass" type="xs:string"/>
		<xs:attributeGroup ref="univ-atts"/>
		<xs:attributeGroup ref="global-atts"/>
	</xs:attributeGroup>
	<xs:simpleType name="type-note-atts.class">
		<xs:restriction base="xs:string">
			<xs:enumeration value="attention"/>
			<xs:enumeration value="caution"/>
			<xs:enumeration value="danger"/>
			<xs:enumeration value="fastpath"/>
			<xs:enumeration value="important"/>
			<xs:enumeration value="note"/>
			<xs:enumeration value="notice"/>
			<xs:enumeration value="other"/>
			<xs:enumeration value="remember"/>
			<xs:enumeration value="restriction"/>
			<xs:enumeration value="tip"/>
			<xs:enumeration value="warning"/>
			<xs:enumeration value="-dita-use-conref-target"/>
		</xs:restriction>
	</xs:simpleType>
	<!-- Base form: Quoted text -->
	<xs:element name="q">
		<xs:annotation>
			<xs:documentation> A quotation element (&lt;q>) indicates content quoted from another
        source. This element is used for short quotes which are displayed inline.
        Use the long quote element (&lt;lq>) for quotations that should be set off
        from the surrounding text.
      </xs:documentation>
		</xs:annotation>
		<xs:complexType mixed="true">
			<xs:complexContent>
				<xs:extension base="q.class">
					<xs:attribute ref="class" default="- topic/q "/>
				</xs:extension>
			</xs:complexContent>
		</xs:complexType>
	</xs:element>
	<xs:complexType name="q.class" mixed="true">
		<xs:sequence>
			<xs:group ref="q.content"/>
		</xs:sequence>
		<xs:attributeGroup ref="q.attributes"/>
	</xs:complexType>
	<xs:group name="q.content">
		<xs:sequence>
			<xs:choice minOccurs="0" maxOccurs="unbounded">
				<xs:group ref="shortquote.cnt" minOccurs="0"/>
			</xs:choice>
		</xs:sequence>
	</xs:group>
	<xs:attributeGroup name="q.attributes">
		<xs:attribute name="outputclass" type="xs:string"/>
		<xs:attributeGroup ref="univ-atts"/>
		<xs:attributeGroup ref="global-atts"/>
	</xs:attributeGroup>
	<!-- Base form: Unordered list -->
	<xs:element name="ul">
		<xs:annotation>
			<xs:documentation>In an unordered list (&lt;ul>), the order of the list items is
        not significant. List items are typically styled on output with a "bullet"
        character, depending on nesting level.
      </xs:documentation>
		</xs:annotation>
		<xs:complexType>
			<xs:complexContent>
				<xs:extension base="ul.class">
					<xs:attribute ref="class" default="- topic/ul "/>
				</xs:extension>
			</xs:complexContent>
		</xs:complexType>
	</xs:element>
	<xs:complexType name="ul.class">
		<xs:sequence>
			<xs:group ref="ul.content"/>
		</xs:sequence>
		<xs:attributeGroup ref="ul.attributes"/>
	</xs:complexType>
	<xs:group name="ul.content">
		<xs:sequence>
			<xs:choice>
				<xs:group ref="li" maxOccurs="unbounded"/>
			</xs:choice>
		</xs:sequence>
	</xs:group>
	<xs:attributeGroup name="ul.attributes">
		<xs:attribute name="spectitle" type="xs:string"/>
		<xs:attribute name="compact" type="yesno-att.class"/>
		<xs:attribute name="outputclass" type="xs:string"/>
		<xs:attributeGroup ref="univ-atts"/>
		<xs:attributeGroup ref="global-atts"/>
	</xs:attributeGroup>
	<!-- Base form: Ordered list -->
	<xs:element name="ol">
		<xs:annotation>
			<xs:documentation>An ordered list (&lt;ol>) is a list of items sorted by sequence
        or order of importance.
      </xs:documentation>
		</xs:annotation>
		<xs:complexType>
			<xs:complexContent>
				<xs:extension base="ol.class">
					<xs:attribute ref="class" default="- topic/ol "/>
				</xs:extension>
			</xs:complexContent>
		</xs:complexType>
	</xs:element>
	<xs:complexType name="ol.class">
		<xs:sequence>
			<xs:group ref="ol.content"/>
		</xs:sequence>
		<xs:attributeGroup ref="ol.attributes"/>
	</xs:complexType>
	<xs:group name="ol.content">
		<xs:sequence>
			<xs:choice>
				<xs:group ref="li" maxOccurs="unbounded"/>
			</xs:choice>
		</xs:sequence>
	</xs:group>
	<xs:attributeGroup name="ol.attributes">
		<xs:attribute name="spectitle" type="xs:string"/>
		<xs:attribute name="compact" type="yesno-att.class"/>
		<xs:attribute name="outputclass" type="xs:string"/>
		<xs:attributeGroup ref="univ-atts"/>
		<xs:attributeGroup ref="global-atts"/>
	</xs:attributeGroup>
	<!-- Base form: Simple list -->
	<xs:element name="sl">
		<xs:annotation>
			<xs:documentation>The &lt;<keyword>sl</keyword>> element contains a simple list of
        items of short, phrase-like content, such as in documenting the materials
        in a kit or package.
      </xs:documentation>
		</xs:annotation>
		<xs:complexType>
			<xs:complexContent>
				<xs:extension base="sl.class">
					<xs:attribute ref="class" default="- topic/sl "/>
				</xs:extension>
			</xs:complexContent>
		</xs:complexType>
	</xs:element>
	<xs:complexType name="sl.class">
		<xs:sequence>
			<xs:group ref="sl.content"/>
		</xs:sequence>
		<xs:attributeGroup ref="sl.attributes"/>
	</xs:complexType>
	<xs:group name="sl.content">
		<xs:sequence>
			<xs:choice>
				<xs:group ref="sli" maxOccurs="unbounded"/>
			</xs:choice>
		</xs:sequence>
	</xs:group>
	<xs:attributeGroup name="sl.attributes">
		<xs:attribute name="spectitle" type="xs:string"/>
		<xs:attribute name="compact" type="yesno-att.class"/>
		<xs:attribute name="outputclass" type="xs:string"/>
		<xs:attributeGroup ref="univ-atts"/>
		<xs:attributeGroup ref="global-atts"/>
	</xs:attributeGroup>
	<!-- Base form: Simple List Item -->
	<xs:element name="sli">
		<xs:annotation>
			<xs:documentation>
        A simple list item (&lt;sli>) is a single item in a simple list&lt;sl>.
        Simple list items have phrase or text content, adequate for describing package
        contents, for example. When a DITA topic is formatted for output, the items
        of a simple list are placed each on its own line, with no other prefix such
        as a number (as in an ordered list) or bullet (as in an unordered list)..
      </xs:documentation>
		</xs:annotation>
		<xs:complexType mixed="true">
			<xs:complexContent>
				<xs:extension base="sli.class">
					<xs:attribute ref="class" default="- topic/sli "/>
				</xs:extension>
			</xs:complexContent>
		</xs:complexType>
	</xs:element>
	<xs:complexType name="sli.class" mixed="true">
		<xs:sequence>
			<xs:group ref="sli.content"/>
		</xs:sequence>
		<xs:attributeGroup ref="sli.attributes"/>
	</xs:complexType>
	<xs:group name="sli.content">
		<xs:sequence>
			<xs:choice minOccurs="0" maxOccurs="unbounded">
				<xs:group ref="ph.cnt" minOccurs="0"/>
			</xs:choice>
		</xs:sequence>
	</xs:group>
	<xs:attributeGroup name="sli.attributes">
		<xs:attribute name="outputclass" type="xs:string"/>
		<xs:attributeGroup ref="univ-atts"/>
		<xs:attributeGroup ref="global-atts"/>
	</xs:attributeGroup>
	<!-- Base form: List Item -->
	<xs:element name="li">
		<xs:annotation>
			<xs:documentation>A list (&lt;li>) item is a single item in an ordered &lt;ol> or
        unordered &lt;ul> list. When a DITA topic is formatted for output, numbers
        and alpha characters are usually output with list items in ordered lists,
        while bullets and dashes are usually output with list items in unordered lists.
      </xs:documentation>
		</xs:annotation>
		<xs:complexType mixed="true">
			<xs:complexContent>
				<xs:extension base="li.class">
					<xs:attribute ref="class" default="- topic/li "/>
				</xs:extension>
			</xs:complexContent>
		</xs:complexType>
	</xs:element>
	<xs:complexType name="li.class" mixed="true">
		<xs:sequence>
			<xs:group ref="li.content"/>
		</xs:sequence>
		<xs:attributeGroup ref="li.attributes"/>
	</xs:complexType>
	<xs:group name="li.content">
		<xs:sequence>
			<xs:choice minOccurs="0" maxOccurs="unbounded">
				<xs:group ref="listitem.cnt" minOccurs="0"/>
			</xs:choice>
		</xs:sequence>
	</xs:group>
	<xs:attributeGroup name="li.attributes">
		<xs:attribute name="outputclass" type="xs:string"/>
		<xs:attributeGroup ref="univ-atts"/>
		<xs:attributeGroup ref="global-atts"/>
	</xs:attributeGroup>
	<!-- Base form: List Item Section-->
	<xs:element name="itemgroup">
		<xs:annotation>
			<xs:documentation>The &lt;<keyword>itemgroup</keyword>> element is reserved for specialization
        of DITA. As a container element, it can be used to sub-divide or organize
        elements that occur inside a list item, definition, or parameter definition.</xs:documentation>
		</xs:annotation>
		<xs:complexType mixed="true">
			<xs:complexContent>
				<xs:extension base="itemgroup.class">
					<xs:attribute ref="class" default="- topic/itemgroup "/>
				</xs:extension>
			</xs:complexContent>
		</xs:complexType>
	</xs:element>
	<xs:complexType name="itemgroup.class" mixed="true">
		<xs:sequence>
			<xs:group ref="itemgroup.content"/>
		</xs:sequence>
		<xs:attributeGroup ref="itemgroup.attributes"/>
	</xs:complexType>
	<xs:group name="itemgroup.content">
		<xs:sequence>
			<xs:choice minOccurs="0" maxOccurs="unbounded">
				<xs:group ref="itemgroup.cnt" minOccurs="0"/>
			</xs:choice>
		</xs:sequence>
	</xs:group>
	<xs:attributeGroup name="itemgroup.attributes">
		<xs:attribute name="outputclass" type="xs:string"/>
		<xs:attributeGroup ref="univ-atts"/>
		<xs:attributeGroup ref="global-atts"/>
	</xs:attributeGroup>
	<!-- Base form: Definition List -->
	<xs:element name="dl">
		<xs:annotation>
			<xs:documentation>A definition list (&lt;<keyword>dl</keyword>>) is a list of terms
        and corresponding definitions.  The term (&lt;<keyword>dt</keyword>>) is usually
        flush left.  The description or definition (&lt;<keyword>dt</keyword>>) is
        usually either indented and on the next line, or on the same line to the right
        of the term.
      </xs:documentation>
		</xs:annotation>
		<xs:complexType>
			<xs:complexContent>
				<xs:extension base="dl.class">
					<xs:attribute ref="class" default="- topic/dl "/>
				</xs:extension>
			</xs:complexContent>
		</xs:complexType>
	</xs:element>
	<xs:complexType name="dl.class">
		<xs:sequence>
			<xs:group ref="dl.content"/>
		</xs:sequence>
		<xs:attributeGroup ref="dl.attributes"/>
	</xs:complexType>
	<xs:group name="dl.content">
		<xs:sequence>
			<xs:sequence>
				<xs:group ref="dlhead" minOccurs="0"/>
				<xs:group ref="dlentry" maxOccurs="unbounded"/>
			</xs:sequence>
		</xs:sequence>
	</xs:group>
	<xs:attributeGroup name="dl.attributes">
		<xs:attribute name="compact" type="yesno-att.class"/>
		<xs:attribute name="spectitle" type="xs:string"/>
		<xs:attribute name="outputclass" type="xs:string"/>
		<xs:attributeGroup ref="univ-atts"/>
		<xs:attributeGroup ref="global-atts"/>
	</xs:attributeGroup>
	<xs:element name="dlhead">
		<xs:annotation>
			<xs:documentation>The &lt;<keyword>dlhead</keyword>> element contains optional headings
        for the term and description columns in a definition list. The definition
        list heading contains a heading &lt;<keyword>dthd</keyword>> for the column
        of terms and an optional heading &lt;<keyword>ddhd</keyword>>for the column
        of descriptions.
      </xs:documentation>
		</xs:annotation>
		<xs:complexType>
			<xs:complexContent>
				<xs:extension base="dlhead.class">
					<xs:attribute ref="class" default="- topic/dlhead "/>
				</xs:extension>
			</xs:complexContent>
		</xs:complexType>
	</xs:element>
	<xs:complexType name="dlhead.class">
		<xs:sequence>
			<xs:group ref="dlhead.content"/>
		</xs:sequence>
		<xs:attributeGroup ref="dlhead.attributes"/>
	</xs:complexType>
	<xs:group name="dlhead.content">
		<xs:sequence>
			<xs:sequence>
				<xs:group ref="dthd" minOccurs="0"/>
				<xs:group ref="ddhd" minOccurs="0"/>
			</xs:sequence>
		</xs:sequence>
	</xs:group>
	<xs:attributeGroup name="dlhead.attributes">
		<xs:attribute name="outputclass" type="xs:string"/>
		<xs:attributeGroup ref="univ-atts"/>
		<xs:attributeGroup ref="global-atts"/>
	</xs:attributeGroup>
	<xs:element name="ddhd">
		<xs:annotation>
			<xs:documentation>The definition descriptions heading (&lt;ddhd>) element contains
        an optional heading or title for a column of descriptions or definitions in
        a definition list
      </xs:documentation>
		</xs:annotation>
		<xs:complexType mixed="true">
			<xs:complexContent>
				<xs:extension base="ddhd.class">
					<xs:attribute ref="class" default="- topic/ddhd "/>
				</xs:extension>
			</xs:complexContent>
		</xs:complexType>
	</xs:element>
	<xs:complexType name="ddhd.class" mixed="true">
		<xs:sequence>
			<xs:group ref="ddhd.content"/>
		</xs:sequence>
		<xs:attributeGroup ref="ddhd.attributes"/>
	</xs:complexType>
	<xs:group name="ddhd.content">
		<xs:sequence>
			<xs:choice minOccurs="0" maxOccurs="unbounded">
				<xs:group ref="title.cnt" minOccurs="0"/>
			</xs:choice>
		</xs:sequence>
	</xs:group>
	<xs:attributeGroup name="ddhd.attributes">
		<xs:attribute name="outputclass" type="xs:string"/>
		<xs:attributeGroup ref="univ-atts"/>
		<xs:attributeGroup ref="global-atts"/>
	</xs:attributeGroup>
	<xs:element name="dthd">
		<xs:annotation>
			<xs:documentation>The definition term heading (&lt;dthd>) element is contained in
        a definition list head (&lt;dlhead>) and provides an optional heading for
        the column of terms in a description list.</xs:documentation>
		</xs:annotation>
		<xs:complexType mixed="true">
			<xs:complexContent>
				<xs:extension base="dthd.class">
					<xs:attribute ref="class" default="- topic/dthd "/>
				</xs:extension>
			</xs:complexContent>
		</xs:complexType>
	</xs:element>
	<xs:complexType name="dthd.class" mixed="true">
		<xs:sequence>
			<xs:group ref="dthd.content"/>
		</xs:sequence>
		<xs:attributeGroup ref="dthd.attributes"/>
	</xs:complexType>
	<xs:group name="dthd.content">
		<xs:sequence>
			<xs:choice minOccurs="0" maxOccurs="unbounded">
				<xs:group ref="title.cnt" minOccurs="0"/>
			</xs:choice>
		</xs:sequence>
	</xs:group>
	<xs:attributeGroup name="dthd.attributes">
		<xs:attribute name="outputclass" type="xs:string"/>
		<xs:attributeGroup ref="univ-atts"/>
		<xs:attributeGroup ref="global-atts"/>
	</xs:attributeGroup>
	<xs:element name="dlentry">
		<xs:annotation>
			<xs:documentation>In a definition list, each list item is defined by the definition
        list entry (&lt;dlentry>) element. The definition list entry element includes
        a term &lt;dt> and one or more definitions or descriptions &lt;dd> of that
        term.
      </xs:documentation>
		</xs:annotation>
		<xs:complexType>
			<xs:complexContent>
				<xs:extension base="dlentry.class">
					<xs:attribute ref="class" default="- topic/dlentry "/>
				</xs:extension>
			</xs:complexContent>
		</xs:complexType>
	</xs:element>
	<xs:complexType name="dlentry.class">
		<xs:sequence>
			<xs:group ref="dlentry.content"/>
		</xs:sequence>
		<xs:attributeGroup ref="dlentry.attributes"/>
	</xs:complexType>
	<xs:group name="dlentry.content">
		<xs:sequence>
			<xs:sequence>
				<xs:group ref="dt" maxOccurs="unbounded"/>
				<xs:group ref="dd" maxOccurs="unbounded"/>
			</xs:sequence>
		</xs:sequence>
	</xs:group>
	<xs:attributeGroup name="dlentry.attributes">
		<xs:attribute name="outputclass" type="xs:string"/>
		<xs:attributeGroup ref="univ-atts"/>
		<xs:attributeGroup ref="global-atts"/>
	</xs:attributeGroup>
	<xs:element name="dt">
		<xs:annotation>
			<xs:documentation>The definition term &lt;<keyword>dt</keyword>> element contains
        a term in a definition list entry.
      </xs:documentation>
		</xs:annotation>
		<xs:complexType mixed="true">
			<xs:complexContent>
				<xs:extension base="dt.class">
					<xs:attribute ref="class" default="- topic/dt "/>
				</xs:extension>
			</xs:complexContent>
		</xs:complexType>
	</xs:element>
	<xs:complexType name="dt.class" mixed="true">
		<xs:sequence>
			<xs:group ref="dt.content"/>
		</xs:sequence>
		<xs:attributeGroup ref="dt.attributes"/>
	</xs:complexType>
	<xs:group name="dt.content">
		<xs:sequence>
			<xs:choice minOccurs="0" maxOccurs="unbounded">
				<xs:group ref="term.cnt" minOccurs="0"/>
			</xs:choice>
		</xs:sequence>
	</xs:group>
	<xs:attributeGroup name="dt.attributes">
		<xs:attribute name="keyref" type="xs:string"/>
		<xs:attribute name="outputclass" type="xs:string"/>
		<xs:attributeGroup ref="univ-atts"/>
		<xs:attributeGroup ref="global-atts"/>
	</xs:attributeGroup>
	<xs:element name="dd">
		<xs:annotation>
			<xs:documentation>The definition description (&lt;<keyword>dd</keyword>>) element
        contains the description of a term in a definition list entry.
      </xs:documentation>
		</xs:annotation>
		<xs:complexType mixed="true">
			<xs:complexContent>
				<xs:extension base="dd.class">
					<xs:attribute ref="class" default="- topic/dd "/>
				</xs:extension>
			</xs:complexContent>
		</xs:complexType>
	</xs:element>
	<xs:complexType name="dd.class" mixed="true">
		<xs:sequence>
			<xs:group ref="dd.content"/>
		</xs:sequence>
		<xs:attributeGroup ref="dd.attributes"/>
	</xs:complexType>
	<xs:group name="dd.content">
		<xs:sequence>
			<xs:choice minOccurs="0" maxOccurs="unbounded">
				<xs:group ref="defn.cnt" minOccurs="0"/>
			</xs:choice>
		</xs:sequence>
	</xs:group>
	<xs:attributeGroup name="dd.attributes">
		<xs:attribute name="outputclass" type="xs:string"/>
		<xs:attributeGroup ref="univ-atts"/>
		<xs:attributeGroup ref="global-atts"/>
	</xs:attributeGroup>
	<!-- Base form: Figure -->
	<xs:element name="fig">
		<xs:annotation>
			<xs:documentation>The figure (&lt;<keyword>fig</keyword>>) element is a display context
        (sometimes called an <q>exhibit</q>) with an optional title for a wide variety
        of content. Most commonly, the figure element contains an image element (a
        graphic or artwork), but it can contain several kinds of text objects as well.
        A title is placed inside the figure element to provide a caption to describe
        the content.
      </xs:documentation>
		</xs:annotation>
		<xs:complexType>
			<xs:complexContent>
				<xs:extension base="fig.class">
					<xs:attribute ref="class" default="- topic/fig "/>
				</xs:extension>
			</xs:complexContent>
		</xs:complexType>
	</xs:element>
	<xs:complexType name="fig.class">
		<xs:sequence>
			<xs:group ref="fig.content"/>
		</xs:sequence>
		<xs:attributeGroup ref="fig.attributes"/>
	</xs:complexType>
	<xs:group name="fig.content">
		<xs:sequence>
			<xs:sequence>
				<xs:group ref="title" minOccurs="0"/>
				<xs:group ref="desc" minOccurs="0"/>
				<xs:choice minOccurs="0" maxOccurs="unbounded">
					<xs:group ref="figgroup"/>
					<xs:group ref="fig.cnt"/>
				</xs:choice>
			</xs:sequence>
		</xs:sequence>
	</xs:group>
	<xs:attributeGroup name="fig.attributes">
		<xs:attributeGroup ref="display-atts"/>
		<xs:attribute name="outputclass" type="xs:string"/>
		<xs:attribute name="spectitle" type="xs:string"/>
		<xs:attributeGroup ref="univ-atts"/>
		<xs:attributeGroup ref="global-atts"/>
	</xs:attributeGroup>
	<xs:element name="figgroup">
		<xs:annotation>
			<xs:documentation>The &lt;<keyword>figgroup</keyword>> element is used only for specialization
        at this time. Figure groups can be used to contain multiple cross-references,
        footnotes or keywords, but not multipart images. Multipart images in DITA
        should be represented by a suitable media type displayed by the &lt;<keyword>object</keyword>>
        element.
      </xs:documentation>
		</xs:annotation>
		<xs:complexType>
			<xs:complexContent>
				<xs:extension base="figgroup.class">
					<xs:attribute ref="class" default="- topic/figgroup "/>
				</xs:extension>
			</xs:complexContent>
		</xs:complexType>
	</xs:element>
	<!--  New  content model for figgroup as per item 12046
    title?, (figgroup | %basic.ph; | %basic.block.notbnofg; | %data.elements.incl; | %foreign.unknown.incl;)*
  -->
	<xs:complexType name="figgroup.class">
		<xs:sequence>
			<xs:group ref="figgroup.content"/>
		</xs:sequence>
		<xs:attributeGroup ref="figgroup.attributes"/>
	</xs:complexType>
	<xs:group name="figgroup.content">
		<xs:sequence>
			<xs:sequence>
				<xs:group ref="title" minOccurs="0"/>
				<xs:choice minOccurs="0" maxOccurs="unbounded">
					<xs:group ref="figgroup"/>
					<xs:group ref="basic.ph"/>
					<xs:group ref="basic.block.notbnofg"/>
					<xs:group ref="fn"/>
					<xs:group ref="data.elements.incl"/>
					<xs:group ref="foreign.unknown.incl"/>
				</xs:choice>
			</xs:sequence>
		</xs:sequence>
	</xs:group>
	<xs:attributeGroup name="figgroup.attributes">
		<xs:attribute name="outputclass" type="xs:string"/>
		<xs:attributeGroup ref="univ-atts"/>
		<xs:attributeGroup ref="global-atts"/>
	</xs:attributeGroup>
	<!-- Base form: Preformatted Text -->
	<xs:element name="pre">
		<xs:annotation>
			<xs:documentation>The preformatted element (&lt;<keyword>pre</keyword>>) preserves
        line breaks and spaces entered manually by the author in the content of the
        element, and also presents the content in a monospaced type font (depending
        on your output formatting processor).
      </xs:documentation>
		</xs:annotation>
		<xs:complexType mixed="true">
			<xs:complexContent>
				<xs:extension base="pre.class">
					<xs:attribute ref="class" default="- topic/pre "/>
				</xs:extension>
			</xs:complexContent>
		</xs:complexType>
	</xs:element>
	<xs:complexType name="pre.class" mixed="true">
		<xs:sequence>
			<xs:group ref="pre.content"/>
		</xs:sequence>
		<xs:attributeGroup ref="pre.attributes"/>
	</xs:complexType>
	<xs:group name="pre.content">
		<xs:sequence>
			<xs:choice minOccurs="0" maxOccurs="unbounded">
				<xs:group ref="pre.cnt"/>
			</xs:choice>
		</xs:sequence>
	</xs:group>
	<xs:attributeGroup name="pre.attributes">
		<xs:attribute name="outputclass" type="xs:string"/>
		<xs:attribute name="spectitle" type="xs:string"/>
		<xs:attributeGroup ref="display-atts"/>
		<xs:attributeGroup ref="univ-atts"/>
		<xs:attribute ref="xml:space" fixed="preserve"/>
		<xs:attributeGroup ref="global-atts"/>
	</xs:attributeGroup>
	<!-- Base form: Lines Respecting Text -->
	<xs:element name="lines">
		<xs:annotation>
			<xs:documentation>The &lt;<keyword>lines</keyword>> element may be used to represent
        dialogs, lists, text fragments, and so forth. The &lt;<keyword>lines</keyword>>
        element is similar to &lt;<keyword>pre</keyword>> in that hard line breaks
        are preserved, but the font style is not set to monospace, and extra spaces
        inside the lines are not preserved. 
      </xs:documentation>
		</xs:annotation>
		<xs:complexType mixed="true">
			<xs:complexContent>
				<xs:extension base="lines.class">
					<xs:attribute ref="class" default="- topic/lines "/>
				</xs:extension>
			</xs:complexContent>
		</xs:complexType>
	</xs:element>
	<xs:complexType name="lines.class" mixed="true">
		<xs:sequence>
			<xs:group ref="lines.content"/>
		</xs:sequence>
		<xs:attributeGroup ref="lines.attributes"/>
	</xs:complexType>
	<xs:group name="lines.content">
		<xs:sequence>
			<xs:choice minOccurs="0" maxOccurs="unbounded">
				<xs:group ref="pre.cnt" minOccurs="0"/>
			</xs:choice>
		</xs:sequence>
	</xs:group>
	<xs:attributeGroup name="lines.attributes">
		<xs:attribute name="spectitle" type="xs:string"/>
		<xs:attributeGroup ref="display-atts"/>
		<xs:attribute name="outputclass" type="xs:string"/>
		<xs:attributeGroup ref="univ-atts"/>
		<xs:attribute ref="xml:space" fixed="preserve"/>
		<xs:attributeGroup ref="global-atts"/>
	</xs:attributeGroup>
	<xs:element name="image">
		<xs:annotation>
			<xs:documentation>Include artwork or images in a DITA topic by using the &lt;<keyword>image</keyword>&gt;
        element. The &lt;<keyword>image</keyword>&gt; element has optional attributes
        that indicate whether the placement of the included graphic or artwork should
        be inline (like a button or icon), or on a separate line for a larger image.
        An <keyword>href</keyword> attribute is required on the image element,
        as this attribute creates a pointer to the image, and allows the output formatting
        processor to bring the image into the text flow. To make the intent of the
        image more accessible for users using screen readers or text-only readers,
        always include a description of the image's content in the <keyword>alt </keyword>attribute.
      </xs:documentation>
		</xs:annotation>
		<xs:complexType>
			<xs:complexContent>
				<xs:extension base="image.class">
					<xs:attribute ref="class" default="- topic/image "/>
				</xs:extension>
			</xs:complexContent>
		</xs:complexType>
	</xs:element>
	<xs:complexType name="image.class">
		<xs:sequence>
			<xs:group ref="image.content"/>
		</xs:sequence>
		<xs:attributeGroup ref="image.attributes"/>
	</xs:complexType>
	<xs:group name="image.content">
		<xs:sequence>
			<xs:sequence>
				<xs:group ref="alt" minOccurs="0"/>
				<xs:group ref="longdescref" minOccurs="0"/>
			</xs:sequence>
		</xs:sequence>
	</xs:group>
	<xs:attributeGroup name="image.attributes">
		<xs:attribute name="href" type="xs:string"/>
		<xs:attribute name="keyref" type="xs:string"/>
		<xs:attribute name="alt" type="xs:string"/>
		<xs:attribute name="longdescref" type="xs:string"/>
		<xs:attribute name="height" type="xs:NMTOKEN"/>
		<xs:attribute name="width" type="xs:NMTOKEN"/>
		<xs:attribute name="scale" type="xs:NMTOKEN"/>
		<xs:attribute name="scalefit" type="yesno-att.class"/>
		<xs:attribute name="scope" type="scope-att.class"/>
		<xs:attribute name="align" type="xs:string"/>
		<xs:attribute name="placement" type="image-placement-att.class" default="inline"/>
		<xs:attribute name="outputclass" type="xs:string"/>
		<xs:attributeGroup ref="univ-atts"/>
		<xs:attributeGroup ref="global-atts"/>
	</xs:attributeGroup>
	<xs:simpleType name="image-placement-att.class">
		<xs:restriction base="xs:string">
			<xs:enumeration value="inline"/>
			<xs:enumeration value="break"/>
			<xs:enumeration value="-dita-use-conref-target"/>
		</xs:restriction>
	</xs:simpleType>
	<!--<xs:simpleType name="image-align-att.class">
    <xs:restriction base="xs:string">
      <xs:enumeration value="left"/>
      <xs:enumeration value="center"/>
      <xs:enumeration value="right"/>
      <xs:enumeration value="-dita-use-conref-target"/>
    </xs:restriction>
  </xs:simpleType>-->
	<xs:element name="alt">
		<xs:annotation>
			<xs:documentation>The alt element provides an element equivalent of the <apiname>alt</apiname> attribute
        on the image element. As an element, it provides direct text entry within
        an XML editor and is more easily accessed than an attribute for translation.
      </xs:documentation>
		</xs:annotation>
		<xs:complexType mixed="true">
			<xs:complexContent>
				<xs:extension base="alt.class">
					<xs:attribute ref="class" default="- topic/alt "/>
				</xs:extension>
			</xs:complexContent>
		</xs:complexType>
	</xs:element>
	<xs:complexType name="alt.class" mixed="true">
		<xs:sequence>
			<xs:group ref="alt.content"/>
		</xs:sequence>
		<xs:attributeGroup ref="alt.attributes"/>
	</xs:complexType>
	<xs:group name="alt.content">
		<xs:sequence>
			<xs:choice minOccurs="0" maxOccurs="unbounded">
				<xs:group ref="words.cnt" minOccurs="0"/>
				<xs:group ref="ph" minOccurs="0"/>
			</xs:choice>
		</xs:sequence>
	</xs:group>
	<xs:attributeGroup name="alt.attributes">
		<xs:attribute name="outputclass" type="xs:string"/>
		<xs:attributeGroup ref="univ-atts"/>
		<xs:attributeGroup ref="global-atts"/>
	</xs:attributeGroup>
	<xs:element name="object">
		<xs:annotation>
			<xs:documentation>DITA's &lt;<keyword>object</keyword>> element corresponds to the
        HTML &lt;<keyword>object</keyword>> element. The &lt;<keyword>object</keyword>>
        element allows authors to include animated images, applets, plug-ins, ActiveX
        controls, video clips, and other multimedia objects in a topic for rendering
        after transformation to HTML.
      </xs:documentation>
		</xs:annotation>
		<xs:complexType>
			<xs:complexContent>
				<xs:extension base="object.class">
					<xs:attribute ref="class" default="- topic/object "/>
				</xs:extension>
			</xs:complexContent>
		</xs:complexType>
	</xs:element>
	<xs:complexType name="object.class">
		<xs:sequence>
			<xs:group ref="object.content"/>
		</xs:sequence>
		<xs:attributeGroup ref="object.attributes"/>
	</xs:complexType>
	<xs:group name="object.content">
		<xs:sequence>
			<xs:sequence>
				<xs:group ref="desc" minOccurs="0"/>
				<xs:group ref="longdescref" minOccurs="0"/>
				<xs:group ref="param" minOccurs="0" maxOccurs="unbounded"/>
				<xs:group ref="foreign.unknown.incl" minOccurs="0" maxOccurs="unbounded"/>
			</xs:sequence>
		</xs:sequence>
	</xs:group>
	<xs:attributeGroup name="object.attributes">
		<xs:attribute name="declare">
			<xs:simpleType>
				<xs:restriction base="xs:string">
					<xs:enumeration value="declare"/>
				</xs:restriction>
			</xs:simpleType>
		</xs:attribute>
		<xs:attribute name="classid" type="xs:string"/>
		<xs:attribute name="codebase" type="xs:string"/>
		<xs:attribute name="data" type="xs:string"/>
		<xs:attribute name="type" type="xs:string"/>
		<xs:attribute name="codetype" type="xs:string"/>
		<xs:attribute name="archive" type="xs:string"/>
		<xs:attribute name="standby" type="xs:string"/>
		<xs:attribute name="height" type="xs:NMTOKEN"/>
		<xs:attribute name="width" type="xs:NMTOKEN"/>
		<xs:attribute name="usemap" type="xs:string"/>
		<xs:attribute name="name" type="xs:string"/>
		<xs:attribute name="tabindex" type="xs:NMTOKEN"/>
		<xs:attribute name="longdescref" type="xs:string"/>
		<xs:attribute name="outputclass" type="xs:string"/>
		<xs:attributeGroup ref="univ-atts"/>
		<xs:attributeGroup ref="global-atts"/>
	</xs:attributeGroup>
	<xs:element name="param">
		<xs:annotation>
			<xs:documentation>The parameter (&lt;<keyword>param</keyword>>)element specifies
        a set of values that may be required by an &lt;<keyword>object</keyword>>
        at runtime. Any number of &lt;<keyword>param</keyword>> elements may appear
        in the content of an object in any order, but must be placed at the start
        of the content of the enclosing object. This element is comparable to the
        XHMTL &lt;<keyword>param</keyword>> element.
      </xs:documentation>
		</xs:annotation>
		<xs:complexType>
			<xs:complexContent>
				<xs:extension base="param.class">
					<xs:attribute ref="class" default="- topic/param "/>
				</xs:extension>
			</xs:complexContent>
		</xs:complexType>
	</xs:element>
	<xs:complexType name="param.class">
		<xs:attributeGroup ref="param.attributes"/>
	</xs:complexType>
	<xs:attributeGroup name="param.attributes">
		<xs:attribute name="name" type="xs:string" use="required"/>
		<xs:attribute name="value" type="xs:string"/>
		<xs:attribute name="valuetype" type="valuetype-att.class"/>
		<xs:attribute name="type" type="xs:string"/>
		<xs:attributeGroup ref="univ-atts"/>
		<xs:attributeGroup ref="global-atts"/>
	</xs:attributeGroup>
	<!-- Base form: Simple Table -->
	<xs:element name="simpletable">
		<xs:annotation>
			<xs:documentation>The &lt;<keyword>simpletable</keyword>> element is used for tables
        that are regular in structure and do not need a caption. Choose the simple
        table element when you want to show information in regular rows and columns.
        For example, multi-column tabular data such as phone directory listings or
        parts lists are good candidates for simpletable. Another good use of simpletable
        is for information that seems to beg for a "three-part definition list"—just
        use the keycol attribute to indicate which column represents the "key" or
        term-like column of your structure. 
      </xs:documentation>
		</xs:annotation>
		<xs:complexType>
			<xs:complexContent>
				<xs:extension base="simpletable.class">
					<xs:attribute ref="class" default="- topic/simpletable "/>
				</xs:extension>
			</xs:complexContent>
		</xs:complexType>
	</xs:element>
	<xs:complexType name="simpletable.class">
		<xs:sequence>
			<xs:group ref="simpletable.content"/>
		</xs:sequence>
		<xs:attributeGroup ref="simpletable.attributes"/>
	</xs:complexType>
	<xs:group name="simpletable.content">
		<xs:sequence>
			<xs:sequence>
				<xs:group ref="sthead" minOccurs="0"/>
				<xs:group ref="strow" maxOccurs="unbounded"/>
			</xs:sequence>
		</xs:sequence>
	</xs:group>
	<xs:attributeGroup name="simpletable.attributes">
		<xs:attribute name="relcolwidth" type="xs:string"/>
		<xs:attribute name="keycol" type="xs:NMTOKEN"/>
		<xs:attribute name="refcols" type="xs:NMTOKENS"/>
		<xs:attributeGroup ref="display-atts"/>
		<xs:attribute name="outputclass" type="xs:string"/>
		<xs:attribute name="spectitle" type="xs:string"/>
		<xs:attributeGroup ref="univ-atts"/>
		<xs:attributeGroup ref="global-atts"/>
	</xs:attributeGroup>
	<xs:element name="sthead">
		<xs:annotation>
			<xs:documentation>The simpletable header (&lt;sthead>) element contains the table's
        header row. The header row is optional in a simple table.
      </xs:documentation>
		</xs:annotation>
		<xs:complexType>
			<xs:complexContent>
				<xs:extension base="sthead.class">
					<xs:attribute ref="class" default="- topic/sthead "/>
				</xs:extension>
			</xs:complexContent>
		</xs:complexType>
	</xs:element>
	<xs:complexType name="sthead.class">
		<xs:sequence>
			<xs:group ref="sthead.content"/>
		</xs:sequence>
		<xs:attributeGroup ref="sthead.attributes"/>
	</xs:complexType>
	<xs:group name="sthead.content">
		<xs:sequence>
			<xs:choice>
				<xs:group ref="stentry" minOccurs="0" maxOccurs="unbounded"/>
			</xs:choice>
		</xs:sequence>
	</xs:group>
	<xs:attributeGroup name="sthead.attributes">
		<xs:attribute name="outputclass" type="xs:string"/>
		<xs:attributeGroup ref="univ-atts"/>
		<xs:attributeGroup ref="global-atts"/>
	</xs:attributeGroup>
	<xs:element name="strow">
		<xs:annotation>
			<xs:documentation>The &lt;<keyword>simpletable</keyword>> row (&lt;<keyword>strow</keyword>>)
        element specifies a row in a simple table, like row in a conventional <xref href="table.xml">table</xref>.
      </xs:documentation>
		</xs:annotation>
		<xs:complexType>
			<xs:complexContent>
				<xs:extension base="strow.class">
					<xs:attribute ref="class" default="- topic/strow "/>
				</xs:extension>
			</xs:complexContent>
		</xs:complexType>
	</xs:element>
	<xs:complexType name="strow.class">
		<xs:sequence>
			<xs:group ref="strow.content"/>
		</xs:sequence>
		<xs:attributeGroup ref="strow.attributes"/>
	</xs:complexType>
	<xs:group name="strow.content">
		<xs:sequence>
			<xs:choice>
				<xs:group ref="stentry" minOccurs="0" maxOccurs="unbounded"/>
			</xs:choice>
		</xs:sequence>
	</xs:group>
	<xs:attributeGroup name="strow.attributes">
		<xs:attribute name="outputclass" type="xs:string"/>
		<xs:attributeGroup ref="univ-atts"/>
		<xs:attributeGroup ref="global-atts"/>
	</xs:attributeGroup>
	<xs:element name="stentry">
		<xs:annotation>
			<xs:documentation>The simpletable entry (&lt;stentry>) element represents a single
        table cell, like &lt;entry> in &lt;table>. You can place any number of stentry
        cells in either an <xref href="sthead.xml">sthead</xref> element
        (for headings) or <xref href="strow.xml">strow</xref> element (for
        rows of data).
      </xs:documentation>
		</xs:annotation>
		<xs:complexType mixed="true">
			<xs:complexContent>
				<xs:extension base="stentry.class">
					<xs:attribute ref="class" default="- topic/stentry "/>
				</xs:extension>
			</xs:complexContent>
		</xs:complexType>
	</xs:element>
	<xs:complexType name="stentry.class" mixed="true">
		<xs:sequence>
			<xs:group ref="stentry.content"/>
		</xs:sequence>
		<xs:attributeGroup ref="stentry.attributes"/>
	</xs:complexType>
	<xs:group name="stentry.content">
		<xs:sequence>
			<xs:choice minOccurs="0" maxOccurs="unbounded">
				<xs:group ref="tblcell.cnt" minOccurs="0"/>
			</xs:choice>
		</xs:sequence>
	</xs:group>
	<xs:attributeGroup name="stentry.attributes">
		<xs:attribute name="outputclass" type="xs:string"/>
		<xs:attribute name="specentry" type="xs:string"/>
		<xs:attributeGroup ref="univ-atts"/>
		<xs:attributeGroup ref="global-atts"/>
	</xs:attributeGroup>
	<!-- Base form: Required Cleanup Block -->
	<!-- ===============================
        CLEAN UP "ANY" CONTENT MODEL
        ================================ -->
	<xs:element name="draft-comment">
		<xs:annotation>
			<xs:documentation>The &lt;<keyword>draft-comment</keyword>> element allows simple
                review and discussion of topic contents within the marked-up content. Use
                the &lt;draft-comment> element to ask a question or make a comment that you
                would like others to review. To indicate the source of the draft comment or
                the status of the comment, use the author, time or disposition attributes.
            </xs:documentation>
		</xs:annotation>
		<xs:complexType mixed="true">
			<xs:complexContent>
				<xs:extension base="draft-comment.class">
					<xs:attribute ref="class" default="- topic/draft-comment "/>
				</xs:extension>
			</xs:complexContent>
		</xs:complexType>
	</xs:element>
	<xs:complexType name="draft-comment.class" mixed="true">
		<xs:sequence>
			<xs:group ref="draft-comment.content"/>
		</xs:sequence>
		<xs:attributeGroup ref="draft-comment.attributes"/>
	</xs:complexType>
	<xs:group name="draft-comment.content">
		<xs:sequence>
			<xs:choice minOccurs="0" maxOccurs="unbounded">
				<xs:group ref="basic.phandblock" minOccurs="0"/>
				<xs:group ref="data.elements.incl" minOccurs="0"/>
				<xs:group ref="foreign.unknown.incl" minOccurs="0"/>
			</xs:choice>
		</xs:sequence>
	</xs:group>
	<xs:attributeGroup name="draft-comment.attributes">
		<xs:attribute name="disposition" type="xs:string"/>
		<xs:attribute name="author" type="xs:string"/>
		<xs:attribute name="time" type="xs:string"/>
		<xs:attribute name="outputclass" type="xs:string"/>
		<xs:attributeGroup ref="univ-atts-translate-no"/>
		<xs:attributeGroup ref="global-atts"/>
	</xs:attributeGroup>
	<xs:element name="required-cleanup">
		<xs:annotation>
			<xs:documentation>A &lt;<keyword>required-cleanup</keyword>> element is used as a
                placeholder for migrated elements that cannot be appropriately tagged without
                manual intervention. As the element name implies, the intent for authors is
                to clean up the contained material and eventually get rid of the &lt;<keyword>required-cleanup</keyword>>
                element. Authors should not insert this element into documents. 
            </xs:documentation>
		</xs:annotation>
		<xs:complexType mixed="true">
			<xs:complexContent>
				<xs:extension base="required-cleanup.class">
					<xs:attribute ref="class" default="- topic/required-cleanup "/>
				</xs:extension>
			</xs:complexContent>
		</xs:complexType>
	</xs:element>
	<xs:complexType name="required-cleanup.class" mixed="true">
		<xs:sequence>
			<xs:group ref="required-cleanup.content"/>
		</xs:sequence>
		<xs:attributeGroup ref="required-cleanup.attributes"/>
	</xs:complexType>
	<xs:group name="required-cleanup.content">
		<xs:sequence>
			<xs:choice minOccurs="0" maxOccurs="unbounded">
				<xs:any processContents="skip" minOccurs="0" maxOccurs="unbounded"/>
			</xs:choice>
		</xs:sequence>
	</xs:group>
	<xs:attributeGroup name="required-cleanup.attributes">
		<xs:attribute name="remap" type="xs:string"/>
		<xs:attribute name="outputclass" type="xs:string"/>
		<xs:attributeGroup ref="univ-atts-translate-no"/>
		<xs:attributeGroup ref="global-atts"/>
	</xs:attributeGroup>
	<!-- Base form: Footnote -->
	<xs:element name="fn">
		<xs:annotation>
			<xs:documentation>Use footnote (&lt;<keyword>fn</keyword>>) to annotate text with
                notes that are not appropriate for inclusion in line or to indicate the source
                for facts or other material used in the text.
            </xs:documentation>
		</xs:annotation>
		<xs:complexType mixed="true">
			<xs:complexContent>
				<xs:extension base="fn.class">
					<xs:attribute ref="class" default="- topic/fn "/>
				</xs:extension>
			</xs:complexContent>
		</xs:complexType>
	</xs:element>
	<xs:complexType name="fn.class" mixed="true">
		<xs:sequence>
			<xs:group ref="fn.content"/>
		</xs:sequence>
		<xs:attributeGroup ref="fn.attributes"/>
	</xs:complexType>
	<xs:group name="fn.content">
		<xs:sequence>
			<xs:choice minOccurs="0" maxOccurs="unbounded">
				<xs:group ref="fn.cnt"/>
			</xs:choice>
		</xs:sequence>
	</xs:group>
	<xs:attributeGroup name="fn.attributes">
		<xs:attribute name="callout" type="xs:string"/>
		<xs:attribute name="outputclass" type="xs:string"/>
		<xs:attributeGroup ref="univ-atts"/>
		<xs:attributeGroup ref="global-atts"/>
	</xs:attributeGroup>
	<xs:element name="indextermref">
		<xs:annotation>
			<xs:documentation>An &lt;<keyword>indextermref</keyword>> is a reference to an index
                entry in a lookup table used by the indexing process. If you want to create
                index markers pointing to referenced items, but only want page numbers instead
                of separate index entries to be generated, use the index term reference &lt;indextermref>
                element. This adds the page number of the reference to the index without creating
                a separate index entry. 
            </xs:documentation>
		</xs:annotation>
		<xs:complexType>
			<xs:complexContent>
				<xs:extension base="indextermref.class">
					<xs:attribute ref="class" default="- topic/indextermref "/>
				</xs:extension>
			</xs:complexContent>
		</xs:complexType>
	</xs:element>
	<xs:complexType name="indextermref.class">
		<xs:attributeGroup ref="indextermref.attributes"/>
	</xs:complexType>
	<xs:attributeGroup name="indextermref.attributes">
		<xs:attribute name="keyref" type="xs:string" use="required"/>
		<xs:attributeGroup ref="univ-atts"/>
		<xs:attributeGroup ref="global-atts"/>
	</xs:attributeGroup>
	<!-- Base form: Citation (from a bibliographic source) -->
	<xs:element name="cite">
		<xs:annotation>
			<xs:documentation>The &lt;<keyword>cite</keyword>&gt; element is used when you need
                a bibliographic citation that refers to a book or article. It specifically
                identifies the title of the resource. Its <keyword>keyref</keyword> attribute
                allows the citation to be associated to other possible bibliographic processing
                (not supported yet). 
            </xs:documentation>
		</xs:annotation>
		<xs:complexType mixed="true">
			<xs:complexContent>
				<xs:extension base="cite.class">
					<xs:attribute ref="class" default="- topic/cite "/>
				</xs:extension>
			</xs:complexContent>
		</xs:complexType>
	</xs:element>
	<xs:complexType name="cite.class" mixed="true">
		<xs:sequence>
			<xs:group ref="cite.content"/>
		</xs:sequence>
		<xs:attributeGroup ref="cite.attributes"/>
	</xs:complexType>
	<xs:group name="cite.content">
		<xs:sequence>
			<xs:choice minOccurs="0" maxOccurs="unbounded">
				<xs:group ref="xrefph.cnt" minOccurs="0"/>
			</xs:choice>
		</xs:sequence>
	</xs:group>
	<xs:attributeGroup name="cite.attributes">
		<xs:attribute name="keyref" type="xs:string"/>
		<xs:attribute name="outputclass" type="xs:string"/>
		<xs:attributeGroup ref="univ-atts"/>
		<xs:attributeGroup ref="global-atts"/>
	</xs:attributeGroup>
	<xs:element name="xref">
		<xs:annotation>
			<xs:documentation>Use the cross-reference (&lt;<keyword>xref</keyword>&gt;) element
                to link to a different location within the current topic, or a different topic
                within the same help system or DITA document. You can also point to external
            sources, such as Web pages, or to a location in another topic as well. The <keyword>href</keyword> attribute
              on the &lt;<keyword>xref</keyword>&gt; element is used to create the link pointer,
                or URL.
            </xs:documentation>
		</xs:annotation>
		<xs:complexType mixed="true">
			<xs:complexContent>
				<xs:extension base="xref.class">
					<xs:attribute ref="class" default="- topic/xref "/>
				</xs:extension>
			</xs:complexContent>
		</xs:complexType>
	</xs:element>
	<xs:complexType name="xref.class" mixed="true">
		<xs:sequence>
			<xs:group ref="xref.content"/>
		</xs:sequence>
		<xs:attributeGroup ref="xref.attributes"/>
	</xs:complexType>
	<xs:group name="xref.content">
		<xs:sequence>
			<xs:choice minOccurs="0" maxOccurs="unbounded">
				<xs:group ref="xreftext.cnt" minOccurs="0"/>
				<xs:group ref="desc" minOccurs="0"/>
			</xs:choice>
		</xs:sequence>
	</xs:group>
	<xs:attributeGroup name="xref.attributes">
		<xs:attribute name="href" type="xs:string"/>
		<xs:attribute name="keyref" type="xs:string"/>
		<xs:attribute name="type" type="xs:string"/>
		<xs:attribute name="format" type="xs:string"/>
		<xs:attribute name="scope" type="scope-att.class"/>
		<xs:attribute name="outputclass" type="xs:string"/>
		<xs:attributeGroup ref="univ-atts"/>
		<xs:attributeGroup ref="global-atts"/>
	</xs:attributeGroup>
	<xs:element name="longdescref">
		<xs:complexType>
			<xs:complexContent>
				<xs:extension base="longdescref.class">
					<xs:attribute ref="class" default="- topic/longdescref "/>
				</xs:extension>
			</xs:complexContent>
		</xs:complexType>
	</xs:element>
	<xs:complexType name="longdescref.class">
		<xs:sequence>
			<xs:group ref="longdescref.content"/>
		</xs:sequence>
		<xs:attributeGroup ref="longdescref.attributes"/>
	</xs:complexType>
	<xs:group name="longdescref.content">
		<xs:sequence/>
	</xs:group>
	<xs:attributeGroup name="longdescref.attributes">
		<xs:attribute name="href" type="xs:string"/>
		<xs:attribute name="keyref" type="xs:string"/>
		<xs:attribute name="type" type="xs:string"/>
		<xs:attribute name="format" type="xs:string"/>
		<xs:attribute name="scope" type="scope-att.class"/>
		<xs:attribute name="outputclass" type="xs:string"/>
		<xs:attributeGroup ref="univ-atts"/>
		<xs:attributeGroup ref="global-atts"/>
	</xs:attributeGroup>
	<!-- <xs:simpleType name="xref-type-att.class">
        <xs:union memberTypes="xref-type-attlist.class topicreftypes-att.class"/>
    </xs:simpleType> -->
	<xs:simpleType name="scope-att.class">
		<xs:restriction base="xs:string">
			<xs:enumeration value="local"/>
			<xs:enumeration value="peer"/>
			<xs:enumeration value="external"/>
			<xs:enumeration value="-dita-use-conref-target"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="processing-role-att.class">
		<xs:restriction base="xs:string">
			<xs:enumeration value="normal"/>
			<xs:enumeration value="resource-only"/>
			<xs:enumeration value="-dita-use-conref-target"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="valuetype-att.class">
		<xs:restriction base="xs:string">
			<xs:enumeration value="data"/>
			<xs:enumeration value="ref"/>
			<xs:enumeration value="object"/>
			<xs:enumeration value="-dita-use-conref-target"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:attribute name="class" type="xs:string">
		<xs:annotation>
			<xs:documentation>
                The class attribute supports specialization. Its predefined values help 
                the output transforms work correctly with ranges of related content. 
            </xs:documentation>
		</xs:annotation>
	</xs:attribute>
	<xs:element name="data">
		<xs:annotation>
			<xs:documentation>The &lt;<keyword>data</keyword>> element represents a property
          within a DITA topic or map. While the &lt;<keyword>data</keyword>> element
          can be used directly to capture properties, it is particularly useful as a
          basis for specialization. Default processing treats the property values as
          an unknown kind of metadata, but custom processing can match the <keyword>name</keyword> attribute
          or specialized element to format properties as sidebars or other adornments
          or to harvest properties for automated processing. </xs:documentation>
		</xs:annotation>
		<xs:complexType mixed="true">
			<xs:complexContent>
				<xs:extension base="data.class">
					<xs:attribute ref="class" default="- topic/data "/>
				</xs:extension>
			</xs:complexContent>
		</xs:complexType>
	</xs:element>
	<xs:complexType name="data.class" mixed="true">
		<xs:sequence>
			<xs:group ref="data.content"/>
		</xs:sequence>
		<xs:attributeGroup ref="data.attributes"/>
	</xs:complexType>
	<xs:group name="data.content">
		<xs:sequence>
			<xs:choice minOccurs="0" maxOccurs="unbounded">
				<xs:group ref="data.cnt" minOccurs="0"/>
			</xs:choice>
		</xs:sequence>
	</xs:group>
	<xs:attributeGroup name="data.attributes">
		<xs:attributeGroup ref="data-element-atts.class"/>
		<xs:attributeGroup ref="global-atts"/>
	</xs:attributeGroup>
	<xs:element name="data-about">
		<xs:annotation>
			<xs:documentation>
				<p>The &lt;<keyword>data-about</keyword>> element identifies the subject
          of a property when the subject isn't associated with the context in which
          the property is specified. The property itself is expressed by the &lt;<keyword>data</keyword>>
          element. The &lt;<keyword>data-about</keyword>> element handles exception
          cases where a property must be expressed somewhere other than inside the actual
          subject of the property. The &lt;<keyword>data-about</keyword>> element is
          particularly useful as a basis for specialization in combination with the &lt;<keyword>data</keyword>>
          element.</p>
				<p>
					<note type="important">Don't use the &lt;<keyword>data-about</keyword>>
            element to identify the object of a property. The <keyword>href</keyword> attribute
            of the &lt;<keyword>data</keyword>> element serves that purpose.</note>
				</p>
			</xs:documentation>
		</xs:annotation>
		<xs:complexType>
			<xs:complexContent>
				<xs:extension base="data-about.class">
					<xs:attribute ref="class" default="- topic/data-about "/>
				</xs:extension>
			</xs:complexContent>
		</xs:complexType>
	</xs:element>
	<xs:complexType name="data-about.class">
		<xs:sequence>
			<xs:group ref="data-about.content"/>
		</xs:sequence>
		<xs:attributeGroup ref="data-about.attributes"/>
	</xs:complexType>
	<xs:group name="data-about.content">
		<xs:sequence>
			<xs:sequence>
				<xs:group ref="data"/>
				<xs:choice minOccurs="0" maxOccurs="unbounded">
					<xs:group ref="data"/>
					<xs:group ref="data-about"/>
				</xs:choice>
			</xs:sequence>
		</xs:sequence>
	</xs:group>
	<xs:attributeGroup name="data-about.attributes">
		<xs:attributeGroup ref="univ-atts"/>
		<xs:attribute name="href" type="xs:string"/>
		<xs:attribute name="keyref" type="xs:string"/>
		<xs:attribute name="format" type="xs:string"/>
		<xs:attribute name="type" type="xs:string"/>
		<xs:attribute name="scope" type="scope-att.class"/>
		<xs:attribute name="outputclass" type="xs:string"/>
		<xs:attributeGroup ref="global-atts"/>
	</xs:attributeGroup>
	<xs:element name="foreign">
		<xs:annotation>
			<xs:documentation>The &lt;foreign&gt; element is an open extension that allows information architects 
            to incorporate existing standard vocabularies for non-textual content. like MathML and SVG, as inline 
            objects. If &lt;foreign&gt; contains more than one alternative content element, they will all be processed. 
            Specialization of &lt;foreign&gt; should be implemented as a domain, but for those looking for more 
            control over the content can implement foreign vocabulary as an element specialization.</xs:documentation>
		</xs:annotation>
		<xs:complexType>
			<xs:complexContent>
				<xs:extension base="foreign.class">
					<xs:attribute ref="class" default="- topic/foreign "/>
				</xs:extension>
			</xs:complexContent>
		</xs:complexType>
	</xs:element>
	<xs:complexType name="foreign.class">
		<xs:sequence>
			<xs:group ref="foreign.content"/>
		</xs:sequence>
		<xs:attributeGroup ref="foreign.attributes"/>
	</xs:complexType>
	<xs:group name="foreign.content">
		<xs:sequence>
			<xs:sequence>
				<xs:choice minOccurs="0" maxOccurs="unbounded">
					<xs:any processContents="skip"/>
				</xs:choice>
			</xs:sequence>
		</xs:sequence>
	</xs:group>
	<xs:attributeGroup name="foreign.attributes">
		<xs:attribute name="outputclass" type="xs:string"/>
		<xs:attributeGroup ref="univ-atts"/>
		<xs:attributeGroup ref="global-atts"/>
	</xs:attributeGroup>
	<!-- Base form: Index entry  -->
	<xs:element name="indexterm">
		<xs:annotation>
			<xs:documentation>An &lt;<keyword>indexterm</keyword>> is an index entry. You can
        nest entries to create multi-level indexes. The content is not output as part
        of topic content, only as part of the index.
      </xs:documentation>
		</xs:annotation>
		<xs:complexType mixed="true">
			<xs:complexContent>
				<xs:extension base="indexterm.class">
					<xs:attribute ref="class" default="- topic/indexterm "/>
				</xs:extension>
			</xs:complexContent>
		</xs:complexType>
	</xs:element>
	<xs:complexType name="indexterm.class" mixed="true">
		<xs:sequence>
			<xs:group ref="indexterm.content"/>
		</xs:sequence>
		<xs:attributeGroup ref="indexterm.attributes"/>
	</xs:complexType>
	<xs:group name="indexterm.content">
		<xs:sequence>
			<xs:choice minOccurs="0" maxOccurs="unbounded">
				<xs:group ref="words.cnt" minOccurs="0"/>
				<xs:group ref="indexterm" minOccurs="0"/>
				<xs:group ref="index-base" minOccurs="0"/>
			</xs:choice>
		</xs:sequence>
	</xs:group>
	<xs:attributeGroup name="indexterm.attributes">
		<xs:attribute name="start" type="xs:string"/>
		<xs:attribute name="end" type="xs:string"/>
		<xs:attribute name="keyref" type="xs:string"/>
		<xs:attributeGroup ref="univ-atts"/>
		<xs:attributeGroup ref="global-atts"/>
	</xs:attributeGroup>
	<xs:element name="index-base">
		<xs:annotation>
			<xs:documentation>The &lt;index-base&gt; element allows indexing extensions to be added by specializing off this
        element. It does not in itself have any meaning and should be ignored in processing.</xs:documentation>
		</xs:annotation>
		<xs:complexType mixed="true">
			<xs:complexContent>
				<xs:extension base="index-base.class">
					<xs:attribute ref="class" default="- topic/index-base "/>
				</xs:extension>
			</xs:complexContent>
		</xs:complexType>
	</xs:element>
	<xs:complexType name="index-base.class" mixed="true">
		<xs:sequence>
			<xs:group ref="index-base.content"/>
		</xs:sequence>
		<xs:attributeGroup ref="index-base.attributes"/>
	</xs:complexType>
	<xs:group name="index-base.content">
		<xs:sequence>
			<xs:choice minOccurs="0" maxOccurs="unbounded">
				<xs:group ref="words.cnt" minOccurs="0"/>
				<xs:group ref="indexterm" minOccurs="0"/>
			</xs:choice>
		</xs:sequence>
	</xs:group>
	<xs:attributeGroup name="index-base.attributes">
		<xs:attribute name="keyref" type="xs:string"/>
		<xs:attributeGroup ref="univ-atts"/>
		<xs:attributeGroup ref="global-atts"/>
	</xs:attributeGroup>
	<xs:element name="unknown">
		<xs:annotation>
			<xs:documentation>
              The &lt;unknown&gt; element is an open extension that allows information architects to
                incorporate xml fragments that does not necessarily fit into an exisitng DITA use case.
              The base processing for &lt;unknown&gt; is to supress unless otherwise instructed.
            </xs:documentation>
		</xs:annotation>
		<xs:complexType>
			<xs:complexContent>
				<xs:extension base="unknown.class">
					<xs:attribute ref="class" default="- topic/unknown "/>
				</xs:extension>
			</xs:complexContent>
		</xs:complexType>
	</xs:element>
	<xs:complexType name="unknown.class">
		<xs:sequence>
			<xs:group ref="unknown.content"/>
		</xs:sequence>
		<xs:attributeGroup ref="unknown.attributes"/>
	</xs:complexType>
	<xs:group name="unknown.content">
		<xs:sequence>
			<xs:sequence>
				<xs:any processContents="skip"/>
			</xs:sequence>
		</xs:sequence>
	</xs:group>
	<xs:attributeGroup name="unknown.attributes">
		<xs:attribute name="outputclass" type="xs:string"/>
		<xs:attributeGroup ref="univ-atts"/>
		<xs:attributeGroup ref="global-atts"/>
	</xs:attributeGroup>
	<xs:attributeGroup name="localization-atts">
		<xs:attribute name="translate" type="yesno-att.class"/>
		<xs:attribute ref="xml:lang"/>
		<xs:attribute name="dir" type="dir-atts.class"/>
	</xs:attributeGroup>
	<xs:simpleType name="dir-atts.class">
		<xs:restriction base="xs:string">
			<xs:enumeration value="ltr"/>
			<xs:enumeration value="rtl"/>
			<xs:enumeration value="lro"/>
			<xs:enumeration value="rlo"/>
			<xs:enumeration value="-dita-use-conref-target"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:attributeGroup name="localization-atts-translate-no">
		<xs:attribute name="translate" type="yesno-att.class" default="no"/>
		<xs:attribute ref="xml:lang"/>
		<xs:attribute name="dir" type="dir-atts.class"/>
	</xs:attributeGroup>
	<!-- <!ENTITY % filter-atts
  'props      CDATA                              #IMPLIED
  base       CDATA                              #IMPLIED
  platform   CDATA                              #IMPLIED
  product    CDATA                              #IMPLIED
  audience   CDATA                              #IMPLIED
  otherprops CDATA                              #IMPLIED
  %props-attribute-extensions;
    %base-attribute-extensions;                           ' >  -->
	<xs:attributeGroup name="filter-atts">
		<xs:attribute name="props" type="xs:string"/>
		<xs:attribute name="platform" type="xs:string"/>
		<xs:attribute name="product" type="xs:string"/>
		<xs:attribute name="audience" type="xs:string"/>
		<xs:attribute name="otherprops" type="xs:string"/>
		<xs:attributeGroup ref="props-attribute-extensions"/>
	</xs:attributeGroup>
	<xs:complexType name="shortdesc.class" mixed="true">
		<xs:sequence>
			<xs:group ref="shortdesc.content"/>
		</xs:sequence>
		<xs:attributeGroup ref="shortdesc.attributes"/>
	</xs:complexType>
	<xs:group name="shortdesc.content">
		<xs:sequence>
			<xs:choice minOccurs="0" maxOccurs="unbounded">
				<xs:group ref="title.cnt" minOccurs="0"/>
				<xs:group ref="draft-comment" minOccurs="0"/>
			</xs:choice>
		</xs:sequence>
	</xs:group>
	<xs:attributeGroup name="shortdesc.attributes">
		<xs:attribute name="outputclass" type="xs:string"/>
		<xs:attributeGroup ref="univ-atts"/>
		<xs:attributeGroup ref="global-atts"/>
	</xs:attributeGroup>
	<xs:element name="navtitle">
		<xs:annotation>
			<xs:documentation>The navigation title (&lt;<keyword>navtitle</keyword>>) element
        is one of a set of alternate titles that can be included inside the &lt;<keyword>titlealts</keyword>>
        element. This navigation title may differ from the first level heading that
        shows in the main browser window. Use &lt;<keyword>navtitle</keyword>> when
        the actual title of the topic isn't appropriate for use in navigation panes
        or online contents (for example, because the actual title is too long or needs
        stated in terse, imperative voice in the navigation).
      </xs:documentation>
		</xs:annotation>
		<xs:complexType mixed="true">
			<xs:complexContent>
				<xs:extension base="navtitle.class">
					<xs:attribute ref="class" default="- topic/navtitle "/>
				</xs:extension>
			</xs:complexContent>
		</xs:complexType>
	</xs:element>
	<xs:complexType name="navtitle.class" mixed="true">
		<xs:sequence>
			<xs:group ref="navtitle.content"/>
		</xs:sequence>
		<xs:attributeGroup ref="navtitle.attributes"/>
	</xs:complexType>
	<xs:group name="navtitle.content">
		<xs:sequence>
			<xs:choice minOccurs="0" maxOccurs="unbounded">
				<xs:group ref="words.cnt" minOccurs="0"/>
				<xs:group ref="ph" minOccurs="0"/>
			</xs:choice>
		</xs:sequence>
	</xs:group>
	<xs:attributeGroup name="navtitle.attributes">
		<xs:attributeGroup ref="univ-atts"/>
		<xs:attributeGroup ref="global-atts"/>
	</xs:attributeGroup>
	<xs:element name="table">
		<xs:annotation>
			<xs:documentation>
        The &lt;<keyword>table</keyword>> element organizes arbitrarily
        complex relationships of tabular information. This standard table markup allows
        column or row spanning and table captions or descriptions. A optional title
        allowed inside the table element provides a caption to describe the table.
        See <xref href="simpletable.xml">simpletable</xref> for a simplified
        table model that can be specialized to represent more regular relationships
        of data.
      </xs:documentation>
		</xs:annotation>
		<xs:complexType>
			<xs:complexContent>
				<xs:extension base="table.class">
					<xs:attribute ref="class" default="- topic/table "/>
				</xs:extension>
			</xs:complexContent>
		</xs:complexType>
	</xs:element>
	<xs:complexType name="table.class">
		<xs:sequence>
			<xs:group ref="table.content"/>
		</xs:sequence>
		<xs:attributeGroup ref="table.attributes"/>
	</xs:complexType>
	<xs:group name="table.content">
		<xs:sequence>
			<xs:sequence>
				<xs:sequence minOccurs="0">
					<xs:group ref="title" minOccurs="0"/>
					<xs:group ref="desc" minOccurs="0"/>
				</xs:sequence>
				<xs:group ref="tgroup" maxOccurs="unbounded"/>
			</xs:sequence>
		</xs:sequence>
	</xs:group>
	<xs:attributeGroup name="table.attributes">
		<xs:attributeGroup ref="colrowsep-atts"/>
		<xs:attribute name="pgwide" type="xs:NMTOKEN" form="unqualified"/>
		<xs:attribute name="scale" type="scale-atts.class" form="unqualified"/>
		<xs:attribute name="frame" type="frame-att.class" form="unqualified"/>
		<xs:attribute name="rowheader" type="rowheader-att.class" form="unqualified"/>
		<xs:attribute name="outputclass" type="xs:string" form="unqualified"/>
		<xs:attributeGroup ref="univ-atts"/>
		<xs:attributeGroup ref="global-atts"/>
	</xs:attributeGroup>
	<xs:simpleType name="rowheader-att.class">
		<xs:restriction base="xs:string">
			<xs:enumeration value="firstcol"/>
			<xs:enumeration value="norowheader"/>
			<xs:enumeration value="-dita-use-conref-target"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:element name="tgroup">
		<xs:annotation>
			<xs:documentation>
        The &lt;<keyword>tgroup</keyword>> element in a table contains
        column, row, spanning, header and footer specifications, and the body (&lt;<keyword>tbody</keyword>>)
        of the table.
      </xs:documentation>
		</xs:annotation>
		<xs:complexType>
			<xs:complexContent>
				<xs:extension base="tgroup.class">
					<xs:attribute ref="class" default="- topic/tgroup "/>
				</xs:extension>
			</xs:complexContent>
		</xs:complexType>
	</xs:element>
	<xs:complexType name="tgroup.class">
		<xs:sequence>
			<xs:group ref="tgroup.content"/>
		</xs:sequence>
		<xs:attributeGroup ref="tgroup.attributes"/>
	</xs:complexType>
	<xs:group name="tgroup.content">
		<xs:sequence>
			<xs:sequence>
				<xs:group ref="colspec" minOccurs="0" maxOccurs="unbounded"/>
				<xs:group ref="thead" minOccurs="0"/>
				<xs:group ref="tbody"/>
			</xs:sequence>
		</xs:sequence>
	</xs:group>
	<xs:attributeGroup name="tgroup.attributes">
		<xs:attribute name="cols" type="xs:NMTOKEN" use="required" form="unqualified"/>
		<xs:attributeGroup ref="colrowsep-atts"/>
		<xs:attribute name="align" type="align-att.class" form="unqualified"/>
		<xs:attribute name="outputclass" type="xs:string" form="unqualified"/>
		<xs:attributeGroup ref="univ-atts"/>
		<xs:attributeGroup ref="global-atts"/>
	</xs:attributeGroup>
	<xs:attributeGroup name="colrowsep-atts">
		<xs:attribute name="colsep" type="xs:NMTOKEN" form="unqualified"/>
		<xs:attribute name="rowsep" type="xs:NMTOKEN" form="unqualified"/>
	</xs:attributeGroup>
	<xs:element name="colspec">
		<xs:annotation>
			<xs:documentation>
        The &lt;<keyword>colspec</keyword>> element contains a column specification
        for a table, including assigning a column name and number, cell content alignment,
        and column width.
      </xs:documentation>
		</xs:annotation>
		<xs:complexType>
			<xs:complexContent>
				<xs:extension base="colspec.class">
					<xs:attribute ref="class" default="- topic/colspec "/>
				</xs:extension>
			</xs:complexContent>
		</xs:complexType>
	</xs:element>
	<xs:complexType name="colspec.class">
		<xs:attributeGroup ref="colspec.attributes"/>
	</xs:complexType>
	<xs:attributeGroup name="colspec.attributes">
		<xs:attribute name="colnum" type="xs:NMTOKEN" form="unqualified"/>
		<xs:attribute name="colname" type="xs:NMTOKEN" form="unqualified"/>
		<xs:attribute name="align" type="align-att.class" form="unqualified"/>
		<xs:attribute name="colwidth" type="xs:string" form="unqualified"/>
		<xs:attributeGroup ref="colrowsep-atts"/>
		<xs:attribute name="char" type="xs:string" form="unqualified"/>
		<xs:attribute name="charoff" type="xs:NMTOKEN" form="unqualified"/>
		<xs:attribute name="base" type="xs:string" form="unqualified"/>
		<xs:attributeGroup ref="base-attribute-extensions"/>
		<xs:attributeGroup ref="id-atts"/>
		<xs:attributeGroup ref="localization-atts"/>
		<xs:attributeGroup ref="global-atts"/>
	</xs:attributeGroup>
	<xs:element name="thead">
		<xs:annotation>
			<xs:documentation>
        The table header (&lt;<keyword>thead</keyword>>) element precedes
        the table body (&lt;<keyword>tbody</keyword>>) element in a complex table.
      </xs:documentation>
		</xs:annotation>
		<xs:complexType>
			<xs:complexContent>
				<xs:extension base="thead.class">
					<xs:attribute ref="class" default="- topic/thead "/>
				</xs:extension>
			</xs:complexContent>
		</xs:complexType>
	</xs:element>
	<xs:complexType name="thead.class">
		<xs:sequence>
			<xs:group ref="thead.content"/>
		</xs:sequence>
		<xs:attributeGroup ref="thead.attributes"/>
	</xs:complexType>
	<xs:group name="thead.content">
		<xs:sequence>
			<xs:sequence>
				<xs:group ref="row" maxOccurs="unbounded"/>
			</xs:sequence>
		</xs:sequence>
	</xs:group>
	<xs:attributeGroup name="thead.attributes">
		<xs:attribute name="valign" type="valign-att.class" form="unqualified"/>
		<xs:attribute name="outputclass" type="xs:string" form="unqualified"/>
		<xs:attributeGroup ref="univ-atts"/>
		<xs:attributeGroup ref="global-atts"/>
	</xs:attributeGroup>
	<xs:element name="tbody">
		<xs:annotation>
			<xs:documentation>
        The &lt;<keyword>tbody</keyword>> element contains the rows in
        a table.
      </xs:documentation>
		</xs:annotation>
		<xs:complexType>
			<xs:complexContent>
				<xs:extension base="tbody.class">
					<xs:attribute ref="class" default="- topic/tbody "/>
				</xs:extension>
			</xs:complexContent>
		</xs:complexType>
	</xs:element>
	<xs:complexType name="tbody.class">
		<xs:sequence>
			<xs:group ref="tbody.content"/>
		</xs:sequence>
		<xs:attributeGroup ref="tbody.attributes"/>
	</xs:complexType>
	<xs:group name="tbody.content">
		<xs:sequence>
			<xs:choice>
				<xs:group ref="row" maxOccurs="unbounded"/>
			</xs:choice>
		</xs:sequence>
	</xs:group>
	<xs:attributeGroup name="tbody.attributes">
		<xs:attribute name="valign" type="valign-att.class" form="unqualified"/>
		<xs:attribute name="outputclass" type="xs:string" form="unqualified"/>
		<xs:attributeGroup ref="univ-atts"/>
		<xs:attributeGroup ref="global-atts"/>
	</xs:attributeGroup>
	<xs:element name="row">
		<xs:annotation>
			<xs:documentation>The &lt;<keyword>row</keyword>> element contains a single row in
        a table &lt;<keyword>tgroup</keyword>>.
      </xs:documentation>
		</xs:annotation>
		<xs:complexType>
			<xs:complexContent>
				<xs:extension base="row.class">
					<xs:attribute ref="class" default="- topic/row "/>
				</xs:extension>
			</xs:complexContent>
		</xs:complexType>
	</xs:element>
	<xs:complexType name="row.class">
		<xs:sequence>
			<xs:group ref="row.content"/>
		</xs:sequence>
		<xs:attributeGroup ref="row.attributes"/>
	</xs:complexType>
	<xs:group name="row.content">
		<xs:sequence>
			<xs:choice>
				<xs:group ref="entry" maxOccurs="unbounded"/>
			</xs:choice>
		</xs:sequence>
	</xs:group>
	<xs:attributeGroup name="row.attributes">
		<xs:attribute name="rowsep" type="xs:string" form="unqualified"/>
		<xs:attribute name="valign" type="valign-att.class" form="unqualified"/>
		<xs:attribute name="outputclass" type="xs:string" form="unqualified"/>
		<xs:attributeGroup ref="univ-atts"/>
		<xs:attributeGroup ref="global-atts"/>
	</xs:attributeGroup>
	<xs:element name="entry">
		<xs:annotation>
			<xs:documentation>The &lt;<keyword>entry</keyword>> element defines a single cell
        in a table.        
      </xs:documentation>
		</xs:annotation>
		<xs:complexType mixed="true">
			<xs:complexContent>
				<xs:extension base="entry.class">
					<xs:attribute ref="class" default="- topic/entry "/>
				</xs:extension>
			</xs:complexContent>
		</xs:complexType>
	</xs:element>
	<xs:complexType name="entry.class" mixed="true">
		<xs:sequence>
			<xs:group ref="entry.content"/>
		</xs:sequence>
		<xs:attributeGroup ref="entry.attributes"/>
		<!-- added DITA attributes -->
	</xs:complexType>
	<xs:group name="entry.content">
		<xs:sequence>
			<xs:choice minOccurs="0" maxOccurs="unbounded">
				<xs:group ref="tblcell.cnt"/>
			</xs:choice>
		</xs:sequence>
	</xs:group>
	<xs:attributeGroup name="entry.attributes">
		<xs:attribute name="namest" type="xs:NMTOKEN" form="unqualified"/>
		<xs:attribute name="nameend" type="xs:NMTOKEN" form="unqualified"/>
		<xs:attribute name="colname" type="xs:NMTOKEN" form="unqualified"/>
		<xs:attribute name="morerows" type="xs:NMTOKEN" form="unqualified"/>
		<xs:attribute name="char" type="xs:string" form="unqualified"/>
		<xs:attribute name="charoff" type="xs:NMTOKEN" form="unqualified"/>
		<xs:attributeGroup ref="colrowsep-atts"/>
		<xs:attribute name="align" type="align-att.class" form="unqualified"/>
		<xs:attribute name="valign" type="valign-att.class" form="unqualified"/>
		<xs:attribute name="rev" type="xs:string" form="unqualified"/>
		<xs:attribute name="outputclass" type="xs:string" form="unqualified"/>
		<xs:attribute name="base" type="xs:string" form="unqualified"/>
		<xs:attributeGroup ref="base-attribute-extensions"/>
		<xs:attributeGroup ref="id-atts"/>
		<xs:attributeGroup ref="localization-atts"/>
		<xs:attributeGroup ref="global-atts"/>
	</xs:attributeGroup>
	<xs:simpleType name="align-att.class">
		<xs:restriction base="xs:string">
			<xs:enumeration value="left"/>
			<xs:enumeration value="right"/>
			<xs:enumeration value="center"/>
			<xs:enumeration value="justify"/>
			<xs:enumeration value="-dita-use-conref-target"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="valign-att.class">
		<xs:restriction base="xs:string">
			<xs:enumeration value="top"/>
			<xs:enumeration value="middle"/>
			<xs:enumeration value="bottom"/>
			<xs:enumeration value="-dita-use-conref-target"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:element name="metadata">
		<xs:annotation>
			<xs:documentation>The &lt;<keyword>metadata</keyword>> section of the prolog contains
        information about a topic such as audience and product information. Metadata
        can be used by computational processes to select particular topics or to prepare
        search indexes or to customize navigation.
      </xs:documentation>
		</xs:annotation>
		<xs:complexType>
			<xs:complexContent>
				<xs:extension base="metadata.class">
					<xs:attribute ref="class" default="- topic/metadata "/>
				</xs:extension>
			</xs:complexContent>
		</xs:complexType>
	</xs:element>
	<xs:complexType name="metadata.class">
		<xs:sequence>
			<xs:group ref="metadata.content"/>
		</xs:sequence>
		<xs:attributeGroup ref="metadata.attributes"/>
	</xs:complexType>
	<xs:group name="metadata.content">
		<xs:sequence>
			<xs:sequence>
				<xs:group ref="audience" minOccurs="0" maxOccurs="unbounded"/>
				<xs:group ref="category" minOccurs="0" maxOccurs="unbounded"/>
				<xs:group ref="keywords" minOccurs="0" maxOccurs="unbounded"/>
				<xs:group ref="prodinfo" minOccurs="0" maxOccurs="unbounded"/>
				<xs:group ref="othermeta" minOccurs="0" maxOccurs="unbounded"/>
				<xs:choice minOccurs="0" maxOccurs="unbounded">
					<xs:group ref="data.elements.incl"/>
					<xs:group ref="foreign.unknown.incl"/>
				</xs:choice>
			</xs:sequence>
		</xs:sequence>
	</xs:group>
	<xs:attributeGroup name="metadata.attributes">
		<xs:attribute name="mapkeyref" type="xs:string" form="unqualified"/>
		<xs:attributeGroup ref="univ-atts"/>
		<xs:attributeGroup ref="global-atts"/>
	</xs:attributeGroup>
	<xs:element name="author">
		<xs:annotation>
			<xs:documentation>The &lt;<keyword>author</keyword>> metadata element contains the
        name of the topic's author. The currently unsupported keyref attribute can
        point to another location where the author information is defined.
      </xs:documentation>
		</xs:annotation>
		<xs:complexType mixed="true">
			<xs:complexContent>
				<xs:extension base="author.class">
					<xs:attribute ref="class" default="- topic/author "/>
				</xs:extension>
			</xs:complexContent>
		</xs:complexType>
	</xs:element>
	<xs:complexType name="author.class" mixed="true">
		<xs:sequence>
			<xs:group ref="author.content"/>
		</xs:sequence>
		<xs:attributeGroup ref="author.attributes"/>
	</xs:complexType>
	<xs:group name="author.content">
		<xs:sequence>
			<xs:choice minOccurs="0" maxOccurs="unbounded">
				<xs:group ref="words.cnt" minOccurs="0"/>
			</xs:choice>
		</xs:sequence>
	</xs:group>
	<xs:attributeGroup name="author.attributes">
		<xs:attribute name="href" type="xs:string" form="unqualified"/>
		<xs:attribute name="format" type="xs:string" form="unqualified"/>
		<xs:attribute name="scope" type="scope-att.class" form="unqualified"/>
		<xs:attribute name="keyref" type="xs:string" form="unqualified"/>
		<xs:attribute name="type" type="xs:string" form="unqualified"/>
		<xs:attributeGroup ref="univ-atts"/>
		<xs:attributeGroup ref="global-atts"/>
	</xs:attributeGroup>
	<!--Remove as per DITA Feature 12022
    <xs:simpleType name="author-type-atts.class">
    <xs:restriction base="xs:string">
      <xs:enumeration value="creator"/>
      <xs:enumeration value="contributor"/>
      <xs:enumeration value="-dita-use-conref-target"/>
    </xs:restriction>
  </xs:simpleType>-->
	<xs:element name="source">
		<xs:annotation>
			<xs:documentation>The &lt;<keyword>source</keyword>> element contains a reference
        to a resource from which the present topic is derived, either completely or
        in part. The element can contain a description of the resource; the <keyword>href</keyword> reference
        can be a string or a URL that points to it.
      </xs:documentation>
		</xs:annotation>
		<xs:complexType mixed="true">
			<xs:complexContent>
				<xs:extension base="source.class">
					<xs:attribute ref="class" default="- topic/source "/>
				</xs:extension>
			</xs:complexContent>
		</xs:complexType>
	</xs:element>
	<xs:complexType name="source.class" mixed="true">
		<xs:sequence>
			<xs:group ref="source.content"/>
		</xs:sequence>
		<xs:attributeGroup ref="source.attributes"/>
	</xs:complexType>
	<xs:group name="source.content">
		<xs:sequence>
			<xs:choice minOccurs="0" maxOccurs="unbounded">
				<xs:group ref="words.cnt" minOccurs="0"/>
				<xs:group ref="ph" minOccurs="0"/>
			</xs:choice>
		</xs:sequence>
	</xs:group>
	<xs:attributeGroup name="source.attributes">
		<xs:attribute name="href" type="xs:string" form="unqualified"/>
		<xs:attribute name="format" type="xs:string" form="unqualified"/>
		<xs:attribute name="scope" type="scope-att.class" form="unqualified"/>
		<xs:attribute name="keyref" type="xs:string" form="unqualified"/>
		<xs:attribute name="type" type="xs:string" form="unqualified"/>
		<xs:attributeGroup ref="univ-atts"/>
		<xs:attributeGroup ref="global-atts"/>
	</xs:attributeGroup>
	<xs:element name="publisher">
		<xs:annotation>
			<xs:documentation>The &lt;<keyword>publisher</keyword>> metadata element contains
        the name of the person, company, or organization responsible for making the
        content or subject of the topic available.
      </xs:documentation>
		</xs:annotation>
		<xs:complexType mixed="true">
			<xs:complexContent>
				<xs:extension base="publisher.class">
					<xs:attribute ref="class" default="- topic/publisher "/>
				</xs:extension>
			</xs:complexContent>
		</xs:complexType>
	</xs:element>
	<xs:complexType name="publisher.class" mixed="true">
		<xs:sequence>
			<xs:group ref="publisher.content"/>
		</xs:sequence>
		<xs:attributeGroup ref="publisher.attributes"/>
	</xs:complexType>
	<xs:group name="publisher.content">
		<xs:sequence>
			<xs:choice minOccurs="0" maxOccurs="unbounded">
				<xs:group ref="words.cnt"/>
			</xs:choice>
		</xs:sequence>
	</xs:group>
	<xs:attributeGroup name="publisher.attributes">
		<xs:attribute name="href" type="xs:string" form="unqualified"/>
		<xs:attribute name="format" type="xs:string" form="unqualified"/>
		<xs:attribute name="scope" type="scope-att.class" form="unqualified"/>
		<xs:attribute name="keyref" type="xs:string" form="unqualified"/>
		<xs:attribute name="type" type="xs:string" form="unqualified"/>
		<xs:attributeGroup ref="univ-atts"/>
		<xs:attributeGroup ref="global-atts"/>
	</xs:attributeGroup>
	<xs:element name="copyright">
		<xs:annotation>
			<xs:documentation>The &lt;<keyword>copyright</keyword>> element is used for a single
        copyright entry. It includes the copyright years and the copyright holder.
        Multiple &lt;<keyword>copyright</keyword>> statements are allowed.
      </xs:documentation>
		</xs:annotation>
		<xs:complexType>
			<xs:complexContent>
				<xs:extension base="copyright.class">
					<xs:attribute ref="class" default="- topic/copyright "/>
				</xs:extension>
			</xs:complexContent>
		</xs:complexType>
	</xs:element>
	<xs:complexType name="copyright.class">
		<xs:sequence>
			<xs:group ref="copyright.content"/>
		</xs:sequence>
		<xs:attributeGroup ref="copyright.attributes"/>
	</xs:complexType>
	<xs:group name="copyright.content">
		<xs:sequence>
			<xs:sequence>
				<xs:group ref="copyryear" maxOccurs="unbounded"/>
				<xs:group ref="copyrholder"/>
			</xs:sequence>
		</xs:sequence>
	</xs:group>
	<xs:attributeGroup name="copyright.attributes">
		<xs:attribute name="type" type="xs:NMTOKEN" form="unqualified"/>
		<xs:attributeGroup ref="univ-atts"/>
		<xs:attributeGroup ref="global-atts"/>
	</xs:attributeGroup>
	<!-- Remove as per DITA Feature 12022 
   <xs:simpleType name="copyright-type-att.class">
    <xs:restriction base="xs:string">
      <xs:enumeration value="primary"/>
      <xs:enumeration value="secondary"/>
      <xs:enumeration value="-dita-use-conref-target"/>
    </xs:restriction>
  </xs:simpleType>-->
	<xs:element name="copyryear">
		<xs:annotation>
			<xs:documentation>The &lt;<keyword>copyryear</keyword>> element contains the copyright
        year as specified by the <keyword>year</keyword> attribute.   
      </xs:documentation>
		</xs:annotation>
		<xs:complexType>
			<xs:complexContent>
				<xs:extension base="copyryear.class">
					<xs:attribute ref="class" default="- topic/copyryear "/>
				</xs:extension>
			</xs:complexContent>
		</xs:complexType>
	</xs:element>
	<xs:complexType name="copyryear.class">
		<xs:attributeGroup ref="copyryear.attributes"/>
	</xs:complexType>
	<xs:attributeGroup name="copyryear.attributes">
		<xs:attribute name="year" type="xs:gYear" use="required" form="unqualified"/>
		<xs:attributeGroup ref="univ-atts"/>
		<xs:attributeGroup ref="global-atts"/>
	</xs:attributeGroup>
	<xs:element name="copyrholder">
		<xs:annotation>
			<xs:documentation>The copyright holder (&lt;<keyword>copyrholder</keyword>>) element
        names the entity that holds legal rights to the material contained in the
        topic.
      </xs:documentation>
		</xs:annotation>
		<xs:complexType mixed="true">
			<xs:complexContent>
				<xs:extension base="copyrholder.class">
					<xs:attribute ref="class" default="- topic/copyrholder "/>
				</xs:extension>
			</xs:complexContent>
		</xs:complexType>
	</xs:element>
	<xs:complexType name="copyrholder.class" mixed="true">
		<xs:sequence>
			<xs:group ref="copyrholder.content"/>
		</xs:sequence>
		<xs:attributeGroup ref="copyrholder.attributes"/>
	</xs:complexType>
	<xs:group name="copyrholder.content">
		<xs:sequence>
			<xs:choice minOccurs="0" maxOccurs="unbounded">
				<xs:group ref="words.cnt" minOccurs="0"/>
			</xs:choice>
		</xs:sequence>
	</xs:group>
	<xs:attributeGroup name="copyrholder.attributes">
		<xs:attributeGroup ref="univ-atts"/>
		<xs:attributeGroup ref="global-atts"/>
	</xs:attributeGroup>
	<xs:element name="critdates">
		<xs:annotation>
			<xs:documentation>The &lt;<keyword>critdates</keyword>> element contains the critical
        dates in a document life cycle, such as the creation date and multiple revision
        dates.
      </xs:documentation>
		</xs:annotation>
		<xs:complexType>
			<xs:complexContent>
				<xs:extension base="critdates.class">
					<xs:attribute ref="class" default="- topic/critdates "/>
				</xs:extension>
			</xs:complexContent>
		</xs:complexType>
	</xs:element>
	<xs:complexType name="critdates.class">
		<xs:sequence>
			<xs:group ref="critdates.content"/>
		</xs:sequence>
		<xs:attributeGroup ref="critdates.attributes"/>
	</xs:complexType>
	<xs:group name="critdates.content">
		<xs:sequence>
			<xs:sequence>
				<xs:group ref="created" minOccurs="0"/>
				<xs:group ref="revised" minOccurs="0" maxOccurs="unbounded"/>
			</xs:sequence>
		</xs:sequence>
	</xs:group>
	<xs:attributeGroup name="critdates.attributes">
		<xs:attributeGroup ref="univ-atts"/>
		<xs:attributeGroup ref="global-atts"/>
	</xs:attributeGroup>
	<xs:element name="revised">
		<xs:annotation>
			<xs:documentation>The &lt;<keyword>revised</keyword>> element in the prolog is used
        to maintain tracking dates that are important in a topic development cycle,
        such as the last modification date, the original availability date, and the
        expiration date.
      </xs:documentation>
		</xs:annotation>
		<xs:complexType>
			<xs:complexContent>
				<xs:extension base="revised.class">
					<xs:attribute ref="class" default="- topic/revised "/>
				</xs:extension>
			</xs:complexContent>
		</xs:complexType>
	</xs:element>
	<xs:complexType name="revised.class">
		<xs:attributeGroup ref="revised.attributes"/>
	</xs:complexType>
	<xs:attributeGroup name="revised.attributes">
		<xs:attribute name="modified" type="xs:string" use="required" form="unqualified"/>
		<xs:attribute name="golive" type="xs:string" form="unqualified"/>
		<xs:attribute name="expiry" type="xs:string" form="unqualified"/>
		<xs:attributeGroup ref="univ-atts"/>
		<xs:attributeGroup ref="global-atts"/>
	</xs:attributeGroup>
	<xs:element name="created">
		<xs:annotation>
			<xs:documentation>The &lt;<keyword>created</keyword>> element specifies the document
        creation date using the <keyword>date</keyword> attribute.
      </xs:documentation>
		</xs:annotation>
		<xs:complexType>
			<xs:complexContent>
				<xs:extension base="created.class">
					<xs:attribute ref="class" default="- topic/created "/>
				</xs:extension>
			</xs:complexContent>
		</xs:complexType>
	</xs:element>
	<xs:complexType name="created.class">
		<xs:attributeGroup ref="created.attributes"/>
	</xs:complexType>
	<xs:attributeGroup name="created.attributes">
		<xs:attribute name="date" type="xs:string" use="required" form="unqualified"/>
		<xs:attribute name="golive" type="xs:string" form="unqualified"/>
		<xs:attribute name="expiry" type="xs:string" form="unqualified"/>
		<xs:attributeGroup ref="univ-atts"/>
		<xs:attributeGroup ref="global-atts"/>
	</xs:attributeGroup>
	<xs:element name="resourceid">
		<xs:annotation>
			<xs:documentation> The &lt;<keyword>resourceid</keyword>> element provides an identifier
        for applications that require them in a particular format, when the normal
        id attribute of the topic can't be used. Each resourceid entry should be unique.
        It is one of the metadata elements that can be included within the prolog
        of a topic, along with document tracking and product information, etc. The
        element has no content, but takes an <keyword>id</keyword> attribute
        or an <keyword>appname</keyword> attribute.
      </xs:documentation>
		</xs:annotation>
		<xs:complexType>
			<xs:complexContent>
				<xs:extension base="resourceid.class">
					<xs:attribute ref="class" default="- topic/resourceid "/>
				</xs:extension>
			</xs:complexContent>
		</xs:complexType>
	</xs:element>
	<xs:complexType name="resourceid.class">
		<xs:attributeGroup ref="resourceid.attributes"/>
	</xs:complexType>
	<xs:attributeGroup name="resourceid.attributes">
		<xs:attribute name="id" type="xs:string" use="required" form="unqualified"/>
		<xs:attribute name="appname" type="xs:string" form="unqualified"/>
		<xs:attributeGroup ref="conref-atts"/>
		<xs:attributeGroup ref="select-atts"/>
		<xs:attributeGroup ref="localization-atts"/>
		<xs:attributeGroup ref="global-atts"/>
	</xs:attributeGroup>
	<xs:element name="audience">
		<xs:annotation>
			<xs:documentation>The &lt;<keyword>audience</keyword>&gt; metadata element indicates,
        through the value of its type attribute, the intended audience for a topic.
        Since a topic can have multiple audiences, you can include multiple audience
        elements. For each audience you specify, you can identify the high-level task
        (<keyword>job</keyword>) they are trying to accomplish and the level
        of experience (<keyword>experiencelevel</keyword>) expected.
      </xs:documentation>
		</xs:annotation>
		<xs:complexType>
			<xs:complexContent>
				<xs:extension base="audience.class">
					<xs:attribute ref="class" default="- topic/audience "/>
				</xs:extension>
			</xs:complexContent>
		</xs:complexType>
	</xs:element>
	<xs:complexType name="audience.class">
		<xs:attributeGroup ref="audience.attributes"/>
	</xs:complexType>
	<xs:attributeGroup name="audience.attributes">
		<xs:attribute name="type" type="xs:string" form="unqualified"/>
		<xs:attribute name="othertype" type="xs:string" form="unqualified"/>
		<xs:attribute name="job" type="xs:NMTOKEN" form="unqualified"/>
		<xs:attribute name="otherjob" type="xs:string" form="unqualified"/>
		<xs:attribute name="experiencelevel" type="xs:NMTOKEN" form="unqualified"/>
		<xs:attribute name="name" type="xs:NMTOKEN" form="unqualified"/>
		<xs:attributeGroup ref="univ-atts"/>
		<xs:attributeGroup ref="global-atts"/>
	</xs:attributeGroup>
	<xs:element name="category">
		<xs:annotation>
			<xs:documentation>The &lt;<keyword>category</keyword>> element can represent any
        category by which a topic might be classified for retrieval or navigation;
        for example, the categories could be used to group topics in a generated navigation
        bar. Topics can belong to multiple categories.
      </xs:documentation>
		</xs:annotation>
		<xs:complexType mixed="true">
			<xs:complexContent>
				<xs:extension base="category.class">
					<xs:attribute ref="class" default="- topic/category "/>
				</xs:extension>
			</xs:complexContent>
		</xs:complexType>
	</xs:element>
	<xs:complexType name="category.class" mixed="true">
		<xs:sequence>
			<xs:group ref="category.content"/>
		</xs:sequence>
		<xs:attributeGroup ref="category.attributes"/>
	</xs:complexType>
	<xs:group name="category.content">
		<xs:sequence>
			<xs:choice minOccurs="0" maxOccurs="unbounded">
				<xs:group ref="words.cnt" minOccurs="0"/>
			</xs:choice>
		</xs:sequence>
	</xs:group>
	<xs:attributeGroup name="category.attributes">
		<xs:attributeGroup ref="univ-atts"/>
		<xs:attributeGroup ref="global-atts"/>
	</xs:attributeGroup>
	<xs:element name="keywords">
		<xs:annotation>
			<xs:documentation>The &lt;<keyword>keywords</keyword>> element contains a list of
        keyword entries (using        <xref href="indexterm.xml">indexterm</xref>  or 
        <xref href="keyword.xml">keyword</xref> markup) that can be used by a search
        engine. 
      </xs:documentation>
		</xs:annotation>
		<xs:complexType>
			<xs:complexContent>
				<xs:extension base="keywords.class">
					<xs:attribute ref="class" default="- topic/keywords "/>
				</xs:extension>
			</xs:complexContent>
		</xs:complexType>
	</xs:element>
	<xs:complexType name="keywords.class">
		<xs:sequence>
			<xs:group ref="keywords.content"/>
		</xs:sequence>
		<xs:attributeGroup ref="keywords.attributes"/>
	</xs:complexType>
	<xs:group name="keywords.content">
		<xs:sequence>
			<xs:choice minOccurs="0" maxOccurs="unbounded">
				<xs:group ref="indexterm" minOccurs="0"/>
				<xs:group ref="keyword" minOccurs="0"/>
			</xs:choice>
		</xs:sequence>
	</xs:group>
	<xs:attributeGroup name="keywords.attributes">
		<xs:attributeGroup ref="univ-atts"/>
		<xs:attributeGroup ref="global-atts"/>
	</xs:attributeGroup>
	<xs:element name="othermeta">
		<xs:annotation>
			<xs:documentation>The &lt;<keyword>othermeta</keyword>> element can be used to identify
        properties not otherwise included in &lt;<keyword>metadata</keyword>> and
        assign  name/content values to those properties. The name attribute identifies
        the property and the content attribute specifies the property's value. The
        values in this attribute are output as HTML metadata elements, and have no
        defined meaning for other possible outputs such as PDF.
      </xs:documentation>
		</xs:annotation>
		<xs:complexType>
			<xs:complexContent>
				<xs:extension base="othermeta.class">
					<xs:attribute ref="class" default="- topic/othermeta "/>
				</xs:extension>
			</xs:complexContent>
		</xs:complexType>
	</xs:element>
	<xs:complexType name="othermeta.class">
		<xs:attributeGroup ref="othermeta.attributes"/>
	</xs:complexType>
	<xs:attributeGroup name="othermeta.attributes">
		<xs:attribute name="name" type="xs:string" use="required" form="unqualified"/>
		<xs:attribute name="content" type="xs:string" use="required" form="unqualified"/>
		<xs:attribute name="translate-content" type="yesno-att.class" form="unqualified"/>
		<xs:attributeGroup ref="univ-atts"/>
		<xs:attributeGroup ref="global-atts"/>
	</xs:attributeGroup>
	<xs:element name="permissions">
		<xs:annotation>
			<xs:documentation>The &lt;<keyword>permissions</keyword>> empty prolog element can
        indicate any preferred controls for access to a topic. Topics can be filtered
        based on the permissions element. This capability depends on your output formatting
        process.
      </xs:documentation>
		</xs:annotation>
		<xs:complexType>
			<xs:complexContent>
				<xs:extension base="permissions.class">
					<xs:attribute ref="class" default="- topic/permissions "/>
				</xs:extension>
			</xs:complexContent>
		</xs:complexType>
	</xs:element>
	<xs:complexType name="permissions.class">
		<xs:attributeGroup ref="permissions.attributes"/>
	</xs:complexType>
	<xs:attributeGroup name="permissions.attributes">
		<xs:attribute name="view" type="xs:NMTOKEN" use="required" form="unqualified"/>
		<xs:attributeGroup ref="global-atts"/>
		<xs:attributeGroup ref="univ-atts"/>
	</xs:attributeGroup>
	<xs:element name="prodinfo">
		<xs:annotation>
			<xs:documentation>The &lt;<keyword>prodinfo</keyword>> metadata element in the prolog
        contains information about the product or products that are the subject matter
        of the current topic.
      </xs:documentation>
		</xs:annotation>
		<xs:complexType>
			<xs:complexContent>
				<xs:extension base="prodinfo.class">
					<xs:attribute ref="class" default="- topic/prodinfo "/>
				</xs:extension>
			</xs:complexContent>
		</xs:complexType>
	</xs:element>
	<xs:complexType name="prodinfo.class">
		<xs:sequence>
			<xs:group ref="prodinfo.content"/>
		</xs:sequence>
		<xs:attributeGroup ref="prodinfo.attributes"/>
	</xs:complexType>
	<xs:group name="prodinfo.content">
		<xs:sequence>
			<xs:sequence>
				<xs:group ref="prodname"/>
				<xs:group ref="vrmlist"/>
				<xs:choice minOccurs="0" maxOccurs="unbounded">
					<xs:group ref="prodinfo.cnt"/>
				</xs:choice>
			</xs:sequence>
		</xs:sequence>
	</xs:group>
	<xs:attributeGroup name="prodinfo.attributes">
		<xs:attributeGroup ref="univ-atts"/>
		<xs:attributeGroup ref="global-atts"/>
	</xs:attributeGroup>
	<xs:element name="brand">
		<xs:annotation>
			<xs:documentation>The &lt;<keyword>brand</keyword>> element indicates the manufacturer
        or brand associated with the product described by the parent  <xref href="prodinfo.xml">&lt;prodinfo</xref>
         element.
      </xs:documentation>
		</xs:annotation>
		<xs:complexType mixed="true">
			<xs:complexContent>
				<xs:extension base="brand.class">
					<xs:attribute ref="class" default="- topic/brand "/>
				</xs:extension>
			</xs:complexContent>
		</xs:complexType>
	</xs:element>
	<xs:complexType name="brand.class" mixed="true">
		<xs:sequence>
			<xs:group ref="brand.content"/>
		</xs:sequence>
		<xs:attributeGroup ref="brand.attributes"/>
	</xs:complexType>
	<xs:group name="brand.content">
		<xs:sequence>
			<xs:choice minOccurs="0" maxOccurs="unbounded">
				<xs:group ref="words.cnt" minOccurs="0"/>
			</xs:choice>
		</xs:sequence>
	</xs:group>
	<xs:attributeGroup name="brand.attributes">
		<xs:attributeGroup ref="univ-atts"/>
		<xs:attributeGroup ref="global-atts"/>
	</xs:attributeGroup>
	<xs:element name="series">
		<xs:annotation>
			<xs:documentation>The &lt;<keyword>series</keyword>> metadata element contains information
        about the product series that the topic supports.
      </xs:documentation>
		</xs:annotation>
		<xs:complexType mixed="true">
			<xs:complexContent>
				<xs:extension base="series.class">
					<xs:attribute ref="class" default="- topic/series "/>
				</xs:extension>
			</xs:complexContent>
		</xs:complexType>
	</xs:element>
	<xs:complexType name="series.class" mixed="true">
		<xs:sequence>
			<xs:group ref="series.content"/>
		</xs:sequence>
		<xs:attributeGroup ref="series.attributes"/>
	</xs:complexType>
	<xs:group name="series.content">
		<xs:sequence>
			<xs:choice minOccurs="0" maxOccurs="unbounded">
				<xs:group ref="words.cnt" minOccurs="0"/>
			</xs:choice>
		</xs:sequence>
	</xs:group>
	<xs:attributeGroup name="series.attributes">
		<xs:attributeGroup ref="univ-atts"/>
		<xs:attributeGroup ref="global-atts"/>
	</xs:attributeGroup>
	<xs:element name="platform">
		<xs:annotation>
			<xs:documentation>The &lt;<keyword>platform</keyword>> metadata element contains
        a description of the operating system and/or hardware related to the product
        being described by the &lt;<keyword>prodinfo</keyword>> element.
      </xs:documentation>
		</xs:annotation>
		<xs:complexType mixed="true">
			<xs:complexContent>
				<xs:extension base="platform.class">
					<xs:attribute ref="class" default="- topic/platform "/>
				</xs:extension>
			</xs:complexContent>
		</xs:complexType>
	</xs:element>
	<xs:complexType name="platform.class" mixed="true">
		<xs:sequence>
			<xs:group ref="platform.content"/>
		</xs:sequence>
		<xs:attributeGroup ref="platform.attributes"/>
	</xs:complexType>
	<xs:group name="platform.content">
		<xs:sequence>
			<xs:choice minOccurs="0" maxOccurs="unbounded">
				<xs:group ref="words.cnt" minOccurs="0"/>
			</xs:choice>
		</xs:sequence>
	</xs:group>
	<xs:attributeGroup name="platform.attributes">
		<xs:attributeGroup ref="univ-atts"/>
		<xs:attributeGroup ref="global-atts"/>
	</xs:attributeGroup>
	<xs:element name="prognum">
		<xs:annotation>
			<xs:documentation>The &lt;<keyword>prognum</keyword>> metadata element identifies
        the program number of the associated program product.  This is typically an
        order number or a product tracking code that could be replaced by an order
        number when a product completes development.
      </xs:documentation>
		</xs:annotation>
		<xs:complexType mixed="true">
			<xs:complexContent>
				<xs:extension base="prognum.class">
					<xs:attribute ref="class" default="- topic/prognum "/>
				</xs:extension>
			</xs:complexContent>
		</xs:complexType>
	</xs:element>
	<xs:complexType name="prognum.class" mixed="true">
		<xs:sequence>
			<xs:group ref="prognum.content"/>
		</xs:sequence>
		<xs:attributeGroup ref="prognum.attributes"/>
	</xs:complexType>
	<xs:group name="prognum.content">
		<xs:sequence>
			<xs:choice minOccurs="0" maxOccurs="unbounded">
				<xs:group ref="words.cnt" minOccurs="0"/>
			</xs:choice>
		</xs:sequence>
	</xs:group>
	<xs:attributeGroup name="prognum.attributes">
		<xs:attributeGroup ref="univ-atts"/>
		<xs:attributeGroup ref="global-atts"/>
	</xs:attributeGroup>
	<xs:element name="featnum">
		<xs:annotation>
			<xs:documentation>The &lt;<keyword>featnum</keyword>> element contains the feature
        number of a product in the document metadata.
      </xs:documentation>
		</xs:annotation>
		<xs:complexType mixed="true">
			<xs:complexContent>
				<xs:extension base="featnum.class">
					<xs:attribute ref="class" default="- topic/featnum "/>
				</xs:extension>
			</xs:complexContent>
		</xs:complexType>
	</xs:element>
	<xs:complexType name="featnum.class" mixed="true">
		<xs:sequence>
			<xs:group ref="featnum.content"/>
		</xs:sequence>
		<xs:attributeGroup ref="featnum.attributes"/>
	</xs:complexType>
	<xs:group name="featnum.content">
		<xs:sequence>
			<xs:choice minOccurs="0" maxOccurs="unbounded">
				<xs:group ref="words.cnt" minOccurs="0"/>
			</xs:choice>
		</xs:sequence>
	</xs:group>
	<xs:attributeGroup name="featnum.attributes">
		<xs:attributeGroup ref="univ-atts"/>
		<xs:attributeGroup ref="global-atts"/>
	</xs:attributeGroup>
	<xs:element name="component">
		<xs:annotation>
			<xs:documentation>The &lt;<keyword>component</keyword>> element describes the component
        of the product that this topic is concerned with. For example, a product might
        be made up of many components, each of which is installable separately. Components
        might also be shared by several products so that the same component is available
        for installation with many products. This identification can be used to check
        cross-component dependencies when some components are installed, but not others.
        It could also be used to make sure that topics are hidden, removed, or flagged
        in some way when the component they describe isn't installed. Such process-control
        logic is not currently supported in DITA processing.
      </xs:documentation>
		</xs:annotation>
		<xs:complexType mixed="true">
			<xs:complexContent>
				<xs:extension base="component.class">
					<xs:attribute ref="class" default="- topic/component "/>
				</xs:extension>
			</xs:complexContent>
		</xs:complexType>
	</xs:element>
	<xs:complexType name="component.class" mixed="true">
		<xs:sequence>
			<xs:group ref="component.content"/>
		</xs:sequence>
		<xs:attributeGroup ref="component.attributes"/>
	</xs:complexType>
	<xs:group name="component.content">
		<xs:sequence>
			<xs:choice minOccurs="0" maxOccurs="unbounded">
				<xs:group ref="words.cnt" minOccurs="0"/>
			</xs:choice>
		</xs:sequence>
	</xs:group>
	<xs:attributeGroup name="component.attributes">
		<xs:attributeGroup ref="univ-atts"/>
		<xs:attributeGroup ref="global-atts"/>
	</xs:attributeGroup>
	<xs:element name="prodname">
		<xs:annotation>
			<xs:documentation>The &lt;<keyword>prodname</keyword>> metadata element contains
        the name of the product that is supported by the information in this topic.
      </xs:documentation>
		</xs:annotation>
		<xs:complexType mixed="true">
			<xs:complexContent>
				<xs:extension base="prodname.class">
					<xs:attribute ref="class" default="- topic/prodname "/>
				</xs:extension>
			</xs:complexContent>
		</xs:complexType>
	</xs:element>
	<xs:complexType name="prodname.class" mixed="true">
		<xs:sequence>
			<xs:group ref="prodname.content"/>
		</xs:sequence>
		<xs:attributeGroup ref="prodname.attributes"/>
	</xs:complexType>
	<xs:group name="prodname.content">
		<xs:sequence>
			<xs:choice minOccurs="0" maxOccurs="unbounded">
				<xs:group ref="words.cnt" minOccurs="0"/>
			</xs:choice>
		</xs:sequence>
	</xs:group>
	<xs:attributeGroup name="prodname.attributes">
		<xs:attributeGroup ref="univ-atts"/>
		<xs:attributeGroup ref="global-atts"/>
	</xs:attributeGroup>
	<xs:group name="prodinfo.cnt">
		<xs:choice>
			<xs:group ref="brand"/>
			<xs:group ref="series"/>
			<xs:group ref="platform"/>
			<xs:group ref="prognum"/>
			<xs:group ref="featnum"/>
			<xs:group ref="component"/>
		</xs:choice>
	</xs:group>
	<xs:element name="vrmlist">
		<xs:annotation>
			<xs:documentation>The &lt;<keyword>vrmlist</keyword>> element contains a set of &lt;<keyword>vrm</keyword>>
        elements for logging the version, release, and modification information for
        multiple products or versions of products to which the topic applies.
      </xs:documentation>
		</xs:annotation>
		<xs:complexType>
			<xs:complexContent>
				<xs:extension base="vrmlist.class">
					<xs:attribute ref="class" default="- topic/vrmlist "/>
				</xs:extension>
			</xs:complexContent>
		</xs:complexType>
	</xs:element>
	<xs:complexType name="vrmlist.class">
		<xs:sequence>
			<xs:group ref="vrmlist.content"/>
		</xs:sequence>
		<xs:attributeGroup ref="vrmlist.attributes"/>
	</xs:complexType>
	<xs:group name="vrmlist.content">
		<xs:sequence>
			<xs:choice maxOccurs="unbounded">
				<xs:group ref="vrm"/>
			</xs:choice>
		</xs:sequence>
	</xs:group>
	<xs:attributeGroup name="vrmlist.attributes">
		<xs:attributeGroup ref="univ-atts"/>
		<xs:attributeGroup ref="global-atts"/>
	</xs:attributeGroup>
	<xs:element name="vrm">
		<xs:annotation>
			<xs:documentation>The empty &lt;<keyword>vrm</keyword>>  element contains information about a single product's
        version, modification, and release, to which the current topic applies.
      </xs:documentation>
		</xs:annotation>
		<xs:complexType>
			<xs:complexContent>
				<xs:extension base="vrm.class">
					<xs:attribute ref="class" default="- topic/vrm "/>
				</xs:extension>
			</xs:complexContent>
		</xs:complexType>
	</xs:element>
	<xs:complexType name="vrm.class">
		<xs:attributeGroup ref="vrm.attributes"/>
	</xs:complexType>
	<xs:attributeGroup name="vrm.attributes">
		<xs:attribute name="version" type="xs:string" use="required" form="unqualified"/>
		<xs:attribute name="release" type="xs:string" form="unqualified"/>
		<xs:attribute name="modification" type="xs:string" form="unqualified"/>
		<xs:attributeGroup ref="univ-atts"/>
		<xs:attributeGroup ref="global-atts"/>
	</xs:attributeGroup>
	<!--
    Remove as per DITA Feature 12022
    <xs:simpleType name="audience-type-att.class">
    <xs:restriction base="xs:string">
      <xs:enumeration value="user"/>
      <xs:enumeration value="purchaser"/>
      <xs:enumeration value="administrator"/>
      <xs:enumeration value="programmer"/>
      <xs:enumeration value="executive"/>
      <xs:enumeration value="services"/>
      <xs:enumeration value="other"/>
      <xs:enumeration value="-dita-use-conref-target"/>
    </xs:restriction>
  </xs:simpleType> -->
	<xs:group name="map">
		<xs:sequence>
			<xs:choice>
				<xs:element ref="map"/>
			</xs:choice>
		</xs:sequence>
	</xs:group>
	<xs:group name="navref">
		<xs:sequence>
			<xs:choice>
				<xs:element ref="navref"/>
			</xs:choice>
		</xs:sequence>
	</xs:group>
	<xs:group name="reltable">
		<xs:sequence>
			<xs:choice>
				<xs:element ref="reltable"/>
			</xs:choice>
		</xs:sequence>
	</xs:group>
	<xs:group name="relheader">
		<xs:sequence>
			<xs:choice>
				<xs:element ref="relheader"/>
			</xs:choice>
		</xs:sequence>
	</xs:group>
	<xs:group name="relcolspec">
		<xs:sequence>
			<xs:choice>
				<xs:element ref="relcolspec"/>
			</xs:choice>
		</xs:sequence>
	</xs:group>
	<xs:group name="relrow">
		<xs:sequence>
			<xs:choice>
				<xs:element ref="relrow"/>
			</xs:choice>
		</xs:sequence>
	</xs:group>
	<xs:group name="relcell">
		<xs:sequence>
			<xs:choice>
				<xs:element ref="relcell"/>
			</xs:choice>
		</xs:sequence>
	</xs:group>
	<xs:group name="anchor">
		<xs:sequence>
			<xs:choice>
				<xs:element ref="anchor"/>
			</xs:choice>
		</xs:sequence>
	</xs:group>
	<xs:group name="topicmeta">
		<xs:sequence>
			<xs:choice>
				<xs:element ref="topicmeta"/>
			</xs:choice>
		</xs:sequence>
	</xs:group>
	<xs:group name="linktext">
		<xs:sequence>
			<xs:choice>
				<xs:element ref="linktext"/>
			</xs:choice>
		</xs:sequence>
	</xs:group>
	<xs:group name="searchtitle">
		<xs:sequence>
			<xs:choice>
				<xs:element ref="searchtitle"/>
			</xs:choice>
		</xs:sequence>
	</xs:group>
	<xs:group name="title">
		<xs:sequence>
			<xs:choice>
				<xs:element ref="title"/>
			</xs:choice>
		</xs:sequence>
	</xs:group>
	<xs:group name="desc">
		<xs:sequence>
			<xs:choice>
				<xs:element ref="desc"/>
			</xs:choice>
		</xs:sequence>
	</xs:group>
	<xs:group name="term">
		<xs:sequence>
			<xs:choice>
				<xs:element ref="term"/>
			</xs:choice>
		</xs:sequence>
	</xs:group>
	<xs:group name="text">
		<xs:sequence>
			<xs:choice>
				<xs:element ref="text"/>
			</xs:choice>
		</xs:sequence>
	</xs:group>
	<xs:group name="tm">
		<xs:sequence>
			<xs:choice>
				<xs:element ref="tm"/>
			</xs:choice>
		</xs:sequence>
	</xs:group>
	<xs:group name="boolean">
		<xs:sequence>
			<xs:choice>
				<xs:element ref="boolean"/>
			</xs:choice>
		</xs:sequence>
	</xs:group>
	<xs:group name="state">
		<xs:sequence>
			<xs:choice>
				<xs:element ref="state"/>
			</xs:choice>
		</xs:sequence>
	</xs:group>
	<xs:group name="p">
		<xs:sequence>
			<xs:choice>
				<xs:element ref="p"/>
			</xs:choice>
		</xs:sequence>
	</xs:group>
	<xs:group name="longquoteref">
		<xs:sequence>
			<xs:choice>
				<xs:element ref="longquoteref"/>
			</xs:choice>
		</xs:sequence>
	</xs:group>
	<xs:group name="lq">
		<xs:sequence>
			<xs:choice>
				<xs:element ref="lq"/>
			</xs:choice>
		</xs:sequence>
	</xs:group>
	<xs:group name="longdescref">
		<xs:sequence>
			<xs:choice>
				<xs:element ref="longdescref"/>
			</xs:choice>
		</xs:sequence>
	</xs:group>
	<xs:group name="q">
		<xs:sequence>
			<xs:choice>
				<xs:element ref="q"/>
			</xs:choice>
		</xs:sequence>
	</xs:group>
	<xs:group name="ul">
		<xs:sequence>
			<xs:choice>
				<xs:element ref="ul"/>
			</xs:choice>
		</xs:sequence>
	</xs:group>
	<xs:group name="ol">
		<xs:sequence>
			<xs:choice>
				<xs:element ref="ol"/>
			</xs:choice>
		</xs:sequence>
	</xs:group>
	<xs:group name="sl">
		<xs:sequence>
			<xs:choice>
				<xs:element ref="sl"/>
			</xs:choice>
		</xs:sequence>
	</xs:group>
	<xs:group name="sli">
		<xs:sequence>
			<xs:choice>
				<xs:element ref="sli"/>
			</xs:choice>
		</xs:sequence>
	</xs:group>
	<xs:group name="li">
		<xs:sequence>
			<xs:choice>
				<xs:element ref="li"/>
			</xs:choice>
		</xs:sequence>
	</xs:group>
	<xs:group name="itemgroup">
		<xs:sequence>
			<xs:choice>
				<xs:element ref="itemgroup"/>
			</xs:choice>
		</xs:sequence>
	</xs:group>
	<xs:group name="dlhead">
		<xs:sequence>
			<xs:choice>
				<xs:element ref="dlhead"/>
			</xs:choice>
		</xs:sequence>
	</xs:group>
	<xs:group name="ddhd">
		<xs:sequence>
			<xs:choice>
				<xs:element ref="ddhd"/>
			</xs:choice>
		</xs:sequence>
	</xs:group>
	<xs:group name="dthd">
		<xs:sequence>
			<xs:choice>
				<xs:element ref="dthd"/>
			</xs:choice>
		</xs:sequence>
	</xs:group>
	<xs:group name="dlentry">
		<xs:sequence>
			<xs:choice>
				<xs:element ref="dlentry"/>
			</xs:choice>
		</xs:sequence>
	</xs:group>
	<xs:group name="dt">
		<xs:sequence>
			<xs:choice>
				<xs:element ref="dt"/>
			</xs:choice>
		</xs:sequence>
	</xs:group>
	<xs:group name="dd">
		<xs:sequence>
			<xs:choice>
				<xs:element ref="dd"/>
			</xs:choice>
		</xs:sequence>
	</xs:group>
	<xs:group name="figgroup">
		<xs:sequence>
			<xs:choice>
				<xs:element ref="figgroup"/>
			</xs:choice>
		</xs:sequence>
	</xs:group>
	<xs:group name="lines">
		<xs:sequence>
			<xs:choice>
				<xs:element ref="lines"/>
			</xs:choice>
		</xs:sequence>
	</xs:group>
	<xs:group name="image">
		<xs:sequence>
			<xs:choice>
				<xs:element ref="image"/>
			</xs:choice>
		</xs:sequence>
	</xs:group>
	<xs:group name="alt">
		<xs:sequence>
			<xs:choice>
				<xs:element ref="alt"/>
			</xs:choice>
		</xs:sequence>
	</xs:group>
	<xs:group name="object">
		<xs:sequence>
			<xs:choice>
				<xs:element ref="object"/>
			</xs:choice>
		</xs:sequence>
	</xs:group>
	<xs:group name="param">
		<xs:sequence>
			<xs:choice>
				<xs:element ref="param"/>
			</xs:choice>
		</xs:sequence>
	</xs:group>
	<xs:group name="simpletable">
		<xs:sequence>
			<xs:choice>
				<xs:element ref="simpletable"/>
			</xs:choice>
		</xs:sequence>
	</xs:group>
	<xs:group name="sthead">
		<xs:sequence>
			<xs:choice>
				<xs:element ref="sthead"/>
			</xs:choice>
		</xs:sequence>
	</xs:group>
	<xs:group name="strow">
		<xs:sequence>
			<xs:choice>
				<xs:element ref="strow"/>
			</xs:choice>
		</xs:sequence>
	</xs:group>
	<xs:group name="stentry">
		<xs:sequence>
			<xs:choice>
				<xs:element ref="stentry"/>
			</xs:choice>
		</xs:sequence>
	</xs:group>
	<xs:group name="draft-comment">
		<xs:sequence>
			<xs:choice>
				<xs:element ref="draft-comment"/>
			</xs:choice>
		</xs:sequence>
	</xs:group>
	<xs:group name="required-cleanup">
		<xs:sequence>
			<xs:choice>
				<xs:element ref="required-cleanup"/>
			</xs:choice>
		</xs:sequence>
	</xs:group>
	<xs:group name="fn">
		<xs:sequence>
			<xs:choice>
				<xs:element ref="fn"/>
			</xs:choice>
		</xs:sequence>
	</xs:group>
	<xs:group name="indextermref">
		<xs:sequence>
			<xs:choice>
				<xs:element ref="indextermref"/>
			</xs:choice>
		</xs:sequence>
	</xs:group>
	<xs:group name="cite">
		<xs:sequence>
			<xs:choice>
				<xs:element ref="cite"/>
			</xs:choice>
		</xs:sequence>
	</xs:group>
	<xs:group name="xref">
		<xs:sequence>
			<xs:choice>
				<xs:element ref="xref"/>
			</xs:choice>
		</xs:sequence>
	</xs:group>
	<xs:group name="data">
		<xs:sequence>
			<xs:choice>
				<xs:element ref="data"/>
			</xs:choice>
		</xs:sequence>
	</xs:group>
	<xs:group name="data-about">
		<xs:sequence>
			<xs:choice>
				<xs:element ref="data-about"/>
			</xs:choice>
		</xs:sequence>
	</xs:group>
	<xs:group name="foreign">
		<xs:sequence>
			<xs:choice>
				<xs:element ref="foreign"/>
			</xs:choice>
		</xs:sequence>
	</xs:group>
	<xs:group name="indexterm">
		<xs:sequence>
			<xs:choice>
				<xs:element ref="indexterm"/>
			</xs:choice>
		</xs:sequence>
	</xs:group>
	<xs:group name="unknown">
		<xs:sequence>
			<xs:choice>
				<xs:element ref="unknown"/>
			</xs:choice>
		</xs:sequence>
	</xs:group>
	<xs:group name="navtitle">
		<xs:sequence>
			<xs:choice>
				<xs:element ref="navtitle"/>
			</xs:choice>
		</xs:sequence>
	</xs:group>
	<xs:group name="shortdesc">
		<xs:sequence>
			<xs:choice>
				<xs:element ref="shortdesc"/>
			</xs:choice>
		</xs:sequence>
	</xs:group>
	<xs:attributeGroup name="props-attribute-extensions"/>
	<xs:attributeGroup name="base-attribute-extensions"/>
	<xs:group name="metadata">
		<xs:sequence>
			<xs:choice>
				<xs:element ref="metadata"/>
			</xs:choice>
		</xs:sequence>
	</xs:group>
	<xs:group name="source">
		<xs:sequence>
			<xs:choice>
				<xs:element ref="source"/>
			</xs:choice>
		</xs:sequence>
	</xs:group>
	<xs:group name="publisher">
		<xs:sequence>
			<xs:choice>
				<xs:element ref="publisher"/>
			</xs:choice>
		</xs:sequence>
	</xs:group>
	<xs:group name="copyright">
		<xs:sequence>
			<xs:choice>
				<xs:element ref="copyright"/>
			</xs:choice>
		</xs:sequence>
	</xs:group>
	<xs:group name="copyryear">
		<xs:sequence>
			<xs:choice>
				<xs:element ref="copyryear"/>
			</xs:choice>
		</xs:sequence>
	</xs:group>
	<xs:group name="copyrholder">
		<xs:sequence>
			<xs:choice>
				<xs:element ref="copyrholder"/>
			</xs:choice>
		</xs:sequence>
	</xs:group>
	<xs:group name="critdates">
		<xs:sequence>
			<xs:choice>
				<xs:element ref="critdates"/>
			</xs:choice>
		</xs:sequence>
	</xs:group>
	<xs:group name="revised">
		<xs:sequence>
			<xs:choice>
				<xs:element ref="revised"/>
			</xs:choice>
		</xs:sequence>
	</xs:group>
	<xs:group name="created">
		<xs:sequence>
			<xs:choice>
				<xs:element ref="created"/>
			</xs:choice>
		</xs:sequence>
	</xs:group>
	<xs:group name="resourceid">
		<xs:sequence>
			<xs:choice>
				<xs:element ref="resourceid"/>
			</xs:choice>
		</xs:sequence>
	</xs:group>
	<xs:group name="audience">
		<xs:sequence>
			<xs:choice>
				<xs:element ref="audience"/>
			</xs:choice>
		</xs:sequence>
	</xs:group>
	<xs:group name="category">
		<xs:sequence>
			<xs:choice>
				<xs:element ref="category"/>
			</xs:choice>
		</xs:sequence>
	</xs:group>
	<xs:group name="othermeta">
		<xs:sequence>
			<xs:choice>
				<xs:element ref="othermeta"/>
			</xs:choice>
		</xs:sequence>
	</xs:group>
	<xs:group name="permissions">
		<xs:sequence>
			<xs:choice>
				<xs:element ref="permissions"/>
			</xs:choice>
		</xs:sequence>
	</xs:group>
	<xs:group name="prodinfo">
		<xs:sequence>
			<xs:choice>
				<xs:element ref="prodinfo"/>
			</xs:choice>
		</xs:sequence>
	</xs:group>
	<xs:group name="brand">
		<xs:sequence>
			<xs:choice>
				<xs:element ref="brand"/>
			</xs:choice>
		</xs:sequence>
	</xs:group>
	<xs:group name="series">
		<xs:sequence>
			<xs:choice>
				<xs:element ref="series"/>
			</xs:choice>
		</xs:sequence>
	</xs:group>
	<xs:group name="platform">
		<xs:sequence>
			<xs:choice>
				<xs:element ref="platform"/>
			</xs:choice>
		</xs:sequence>
	</xs:group>
	<xs:group name="prognum">
		<xs:sequence>
			<xs:choice>
				<xs:element ref="prognum"/>
			</xs:choice>
		</xs:sequence>
	</xs:group>
	<xs:group name="featnum">
		<xs:sequence>
			<xs:choice>
				<xs:element ref="featnum"/>
			</xs:choice>
		</xs:sequence>
	</xs:group>
	<xs:group name="component">
		<xs:sequence>
			<xs:choice>
				<xs:element ref="component"/>
			</xs:choice>
		</xs:sequence>
	</xs:group>
	<xs:group name="prodname">
		<xs:sequence>
			<xs:choice>
				<xs:element ref="prodname"/>
			</xs:choice>
		</xs:sequence>
	</xs:group>
	<xs:group name="vrmlist">
		<xs:sequence>
			<xs:choice>
				<xs:element ref="vrmlist"/>
			</xs:choice>
		</xs:sequence>
	</xs:group>
	<xs:group name="vrm">
		<xs:sequence>
			<xs:choice>
				<xs:element ref="vrm"/>
			</xs:choice>
		</xs:sequence>
	</xs:group>
	<!-- 20021227 EAS: Use xml:space (preserve) for pre derivs: codeblock, msgblock, screen -->
	<xs:annotation>
		<xs:appinfo>
			<dita:domainsModule xmlns:dita="http://dita.oasis-open.org/architecture/2005/">(topic sw-d)</dita:domainsModule>
		</xs:appinfo>
		<xs:documentation> 
    
    </xs:documentation>
	</xs:annotation>
	<xs:group name="sw-d-ph">
		<xs:choice>
			<xs:element ref="msgph"/>
			<xs:element ref="filepath"/>
			<xs:element ref="userinput"/>
			<xs:element ref="systemoutput"/>
		</xs:choice>
	</xs:group>
	<xs:group name="sw-d-keyword">
		<xs:choice>
			<xs:element ref="msgnum"/>
			<xs:element ref="varname"/>
			<xs:element ref="cmdname"/>
		</xs:choice>
	</xs:group>
	<xs:group name="sw-d-pre">
		<xs:choice>
			<xs:element ref="msgblock"/>
		</xs:choice>
	</xs:group>
	<xs:group name="msgph">
		<xs:sequence>
			<xs:choice>
				<xs:element ref="msgph"/>
			</xs:choice>
		</xs:sequence>
	</xs:group>
	<xs:group name="msgnum">
		<xs:sequence>
			<xs:choice>
				<xs:element ref="msgnum"/>
			</xs:choice>
		</xs:sequence>
	</xs:group>
	<xs:group name="varname">
		<xs:sequence>
			<xs:choice>
				<xs:element ref="varname"/>
			</xs:choice>
		</xs:sequence>
	</xs:group>
	<xs:group name="msgblock">
		<xs:sequence>
			<xs:choice>
				<xs:element ref="msgblock"/>
			</xs:choice>
		</xs:sequence>
	</xs:group>
	<xs:group name="cmdname">
		<xs:sequence>
			<xs:choice>
				<xs:element ref="cmdname"/>
			</xs:choice>
		</xs:sequence>
	</xs:group>
	<xs:group name="filepath">
		<xs:sequence>
			<xs:choice>
				<xs:element ref="filepath"/>
			</xs:choice>
		</xs:sequence>
	</xs:group>
	<xs:group name="userinput">
		<xs:sequence>
			<xs:choice>
				<xs:element ref="userinput"/>
			</xs:choice>
		</xs:sequence>
	</xs:group>
	<xs:group name="systemoutput">
		<xs:sequence>
			<xs:choice>
				<xs:element ref="systemoutput"/>
			</xs:choice>
		</xs:sequence>
	</xs:group>
	<xs:element name="msgph">
		<xs:annotation>
			<xs:documentation>
        The message phrase (&lt;msgph&gt;) element contains the text content
        of a message produced by an application or program. It can also contain the
        variable name (varname) element to illustrate where variable text content
        can occur in the message. This element is part of the DITA software domain,
        a special set of DITA elements designed to document software tasks, concepts
        and reference information.
      </xs:documentation>
		</xs:annotation>
		<xs:complexType mixed="true">
			<xs:complexContent>
				<xs:extension base="msgph.class">
					<xs:attribute ref="class" default="+ topic/ph sw-d/msgph "/>
				</xs:extension>
			</xs:complexContent>
		</xs:complexType>
	</xs:element>
	<xs:complexType name="msgph.class" mixed="true">
		<xs:sequence>
			<xs:group ref="msgph.content"/>
		</xs:sequence>
		<xs:attributeGroup ref="msgph.attributes"/>
	</xs:complexType>
	<xs:group name="msgph.content">
		<xs:sequence>
			<xs:choice minOccurs="0" maxOccurs="unbounded">
				<xs:group ref="words.cnt" minOccurs="0"/>
			</xs:choice>
		</xs:sequence>
	</xs:group>
	<xs:attributeGroup name="msgph.attributes">
		<xs:attribute name="outputclass" type="xs:string" form="unqualified"/>
		<xs:attributeGroup ref="univ-atts"/>
		<xs:attributeGroup ref="global-atts"/>
	</xs:attributeGroup>
	<xs:element name="msgnum">
		<xs:annotation>
			<xs:documentation>
        The message number (&lt;<keyword>msgnum</keyword>&gt;) element contains the number
        of a message produced by an application or program. This element is part of
        the DITA software domain, a special set of DITA elements designed to document
        software tasks, concepts and reference information.
      </xs:documentation>
		</xs:annotation>
		<xs:complexType mixed="true">
			<xs:complexContent>
				<xs:extension base="msgnum.class">
					<xs:attribute ref="class" default="+ topic/keyword sw-d/msgnum "/>
				</xs:extension>
			</xs:complexContent>
		</xs:complexType>
	</xs:element>
	<xs:complexType name="msgnum.class" mixed="true">
		<xs:sequence>
			<xs:group ref="msgnum.content"/>
		</xs:sequence>
		<xs:attributeGroup ref="msgnum.attributes"/>
	</xs:complexType>
	<xs:group name="msgnum.content">
		<xs:sequence>
			<xs:choice minOccurs="0" maxOccurs="unbounded">
				<xs:group ref="text" minOccurs="0"/>
			</xs:choice>
		</xs:sequence>
	</xs:group>
	<xs:attributeGroup name="msgnum.attributes">
		<xs:attribute name="keyref" type="xs:string" form="unqualified"/>
		<xs:attribute name="outputclass" type="xs:string" form="unqualified"/>
		<xs:attributeGroup ref="univ-atts"/>
		<xs:attributeGroup ref="global-atts"/>
	</xs:attributeGroup>
	<xs:element name="varname">
		<xs:annotation>
			<xs:documentation>
        The variable name (&lt;<keyword>varname</keyword>&gt;) element defines a variable
        that must be supplied to a software application. The variable name element
        is very similar to the variable (var) element, but variable name is used outside
        of syntax diagrams, possibly within a message or API description to describe
        a system variable or environment variable. This element is part of the DITA
        software domain, a special set of DITA elements designed to document software
        tasks, concepts and reference information.
      </xs:documentation>
		</xs:annotation>
		<xs:complexType mixed="true">
			<xs:complexContent>
				<xs:extension base="varname.class">
					<xs:attribute ref="class" default="+ topic/keyword sw-d/varname "/>
				</xs:extension>
			</xs:complexContent>
		</xs:complexType>
	</xs:element>
	<xs:complexType name="varname.class" mixed="true">
		<xs:sequence>
			<xs:group ref="varname.content"/>
		</xs:sequence>
		<xs:attributeGroup ref="varname.attributes"/>
	</xs:complexType>
	<xs:group name="varname.content">
		<xs:sequence>
			<xs:choice minOccurs="0" maxOccurs="unbounded">
				<xs:group ref="text" minOccurs="0"/>
			</xs:choice>
		</xs:sequence>
	</xs:group>
	<xs:attributeGroup name="varname.attributes">
		<xs:attribute name="keyref" type="xs:string" form="unqualified"/>
		<xs:attribute name="outputclass" type="xs:string" form="unqualified"/>
		<xs:attributeGroup ref="univ-atts"/>
		<xs:attributeGroup ref="global-atts"/>
	</xs:attributeGroup>
	<xs:element name="msgblock">
		<xs:annotation>
			<xs:documentation>
        The message block (&lt;<keyword>msgblock</keyword>&gt;) element contains a multi-line
        message or set of messages. The message block can contain multiple message
        numbers and message descriptions, each enclosed in a &lt;<keyword>msgnum</keyword>&gt; and &lt;<keyword>msgph</keyword>&gt; element.
        It can also contain the message content directly. This element is part of
        the DITA software domain, a special set of DITA elements designed to document
        software tasks, concepts and reference information.
      </xs:documentation>
		</xs:annotation>
		<xs:complexType mixed="true">
			<xs:complexContent>
				<xs:extension base="msgblock.class">
					<xs:attribute ref="class" default="+ topic/pre sw-d/msgblock "/>
				</xs:extension>
			</xs:complexContent>
		</xs:complexType>
	</xs:element>
	<xs:complexType name="msgblock.class" mixed="true">
		<xs:sequence>
			<xs:group ref="msgblock.content"/>
		</xs:sequence>
		<xs:attributeGroup ref="msgblock.attributes"/>
	</xs:complexType>
	<xs:group name="msgblock.content">
		<xs:sequence>
			<xs:choice minOccurs="0" maxOccurs="unbounded">
				<xs:group ref="words.cnt"/>
			</xs:choice>
		</xs:sequence>
	</xs:group>
	<xs:attributeGroup name="msgblock.attributes">
		<xs:attribute name="outputclass" type="xs:string" form="unqualified"/>
		<xs:attribute name="spectitle" type="xs:string" form="unqualified"/>
		<xs:attribute ref="xml:space" fixed="preserve"/>
		<xs:attributeGroup ref="display-atts"/>
		<xs:attributeGroup ref="univ-atts"/>
		<xs:attributeGroup ref="global-atts"/>
	</xs:attributeGroup>
	<xs:element name="cmdname">
		<xs:annotation>
			<xs:documentation>
        The command name (&lt;cmdname&gt;) element specifies the name of a command
        when it is part of a software discussion.  This element is part of the DITA
        software domain, a special set of DITA elements designed to document software
        tasks, concepts and reference information.
      </xs:documentation>
		</xs:annotation>
		<xs:complexType mixed="true">
			<xs:complexContent>
				<xs:extension base="cmdname.class">
					<xs:attribute ref="class" default="+ topic/keyword sw-d/cmdname "/>
				</xs:extension>
			</xs:complexContent>
		</xs:complexType>
	</xs:element>
	<xs:complexType name="cmdname.class" mixed="true">
		<xs:sequence>
			<xs:group ref="cmdname.content"/>
		</xs:sequence>
		<xs:attributeGroup ref="cmdname.attributes"/>
	</xs:complexType>
	<xs:group name="cmdname.content">
		<xs:sequence>
			<xs:choice minOccurs="0" maxOccurs="unbounded">
				<xs:group ref="text" minOccurs="0"/>
			</xs:choice>
		</xs:sequence>
	</xs:group>
	<xs:attributeGroup name="cmdname.attributes">
		<xs:attribute name="keyref" type="xs:string" form="unqualified"/>
		<xs:attribute name="outputclass" type="xs:string" form="unqualified"/>
		<xs:attributeGroup ref="univ-atts"/>
		<xs:attributeGroup ref="global-atts"/>
	</xs:attributeGroup>
	<xs:element name="filepath">
		<xs:annotation>
			<xs:documentation>
        The &lt;<keyword>filepath</keyword>&gt; element indicates
        the name and optionally the location of a referenced file by specifying the
        directory containing the file, and other directories that may precede it in
        the system hierarchy. This element is part of the DITA software domain, a
        special set of DITA elements designed to document software tasks, concepts
        and reference information.
      </xs:documentation>
		</xs:annotation>
		<xs:complexType mixed="true">
			<xs:complexContent>
				<xs:extension base="filepath.class">
					<xs:attribute ref="class" default="+ topic/ph sw-d/filepath "/>
				</xs:extension>
			</xs:complexContent>
		</xs:complexType>
	</xs:element>
	<xs:complexType name="filepath.class" mixed="true">
		<xs:sequence>
			<xs:group ref="filepath.content"/>
		</xs:sequence>
		<xs:attributeGroup ref="filepath.attributes"/>
	</xs:complexType>
	<xs:group name="filepath.content">
		<xs:sequence>
			<xs:choice minOccurs="0" maxOccurs="unbounded">
				<xs:group ref="words.cnt" minOccurs="0"/>
			</xs:choice>
		</xs:sequence>
	</xs:group>
	<xs:attributeGroup name="filepath.attributes">
		<xs:attribute name="outputclass" type="xs:string" form="unqualified"/>
		<xs:attributeGroup ref="univ-atts"/>
		<xs:attributeGroup ref="global-atts"/>
	</xs:attributeGroup>
	<xs:element name="userinput">
		<xs:annotation>
			<xs:documentation>
        The user input (&lt;<keyword>userinput</keyword>&gt;) element represens the text
        a user should input in response to a program or system prompt.
        This element is part of the DITA software domain, a special set of DITA elements
        designed to document software tasks, concepts and reference information.
      </xs:documentation>
		</xs:annotation>
		<xs:complexType mixed="true">
			<xs:complexContent>
				<xs:extension base="userinput.class">
					<xs:attribute ref="class" default="+ topic/ph sw-d/userinput "/>
				</xs:extension>
			</xs:complexContent>
		</xs:complexType>
	</xs:element>
	<xs:complexType name="userinput.class" mixed="true">
		<xs:sequence>
			<xs:group ref="userinput.content"/>
		</xs:sequence>
		<xs:attributeGroup ref="userinput.attributes"/>
	</xs:complexType>
	<xs:group name="userinput.content">
		<xs:sequence>
			<xs:choice minOccurs="0" maxOccurs="unbounded">
				<xs:group ref="words.cnt" minOccurs="0"/>
			</xs:choice>
		</xs:sequence>
	</xs:group>
	<xs:attributeGroup name="userinput.attributes">
		<xs:attribute name="outputclass" type="xs:string" form="unqualified"/>
		<xs:attributeGroup ref="univ-atts"/>
		<xs:attributeGroup ref="global-atts"/>
	</xs:attributeGroup>
	<xs:element name="systemoutput">
		<xs:annotation>
			<xs:documentation>
        The system output (&lt;<keyword>systemoutput</keyword>&gt;) element
        represents computer output or responses to a command or situation.
        A generalized element, it represents any kind of output from the computer,
        so the author may wish to choose more specific markup, such as msgph, for
        messages from the application. The system output element is part of the DITA
        software domain, a special set of DITA elements designed to document software
        tasks, concepts and reference information.
      </xs:documentation>
		</xs:annotation>
		<xs:complexType mixed="true">
			<xs:complexContent>
				<xs:extension base="systemoutput.class">
					<xs:attribute ref="class" default="+ topic/ph sw-d/systemoutput "/>
				</xs:extension>
			</xs:complexContent>
		</xs:complexType>
	</xs:element>
	<xs:complexType name="systemoutput.class" mixed="true">
		<xs:sequence>
			<xs:group ref="systemoutput.content"/>
		</xs:sequence>
		<xs:attributeGroup ref="systemoutput.attributes"/>
	</xs:complexType>
	<xs:group name="systemoutput.content">
		<xs:sequence>
			<xs:choice minOccurs="0" maxOccurs="unbounded">
				<xs:group ref="words.cnt" minOccurs="0"/>
			</xs:choice>
		</xs:sequence>
	</xs:group>
	<xs:attributeGroup name="systemoutput.attributes">
		<xs:attribute name="outputclass" type="xs:string" form="unqualified"/>
		<xs:attributeGroup ref="univ-atts"/>
		<xs:attributeGroup ref="global-atts"/>
	</xs:attributeGroup>
	<!-- Import namespace for xml:space attribute for element screen -->
	<xs:annotation>
		<xs:appinfo>
			<dita:domainsModule xmlns:dita="http://dita.oasis-open.org/architecture/2005/">(topic ui-d)</dita:domainsModule>
		</xs:appinfo>
		<xs:documentation> 
    
    </xs:documentation>
	</xs:annotation>
	<xs:group name="ui-d-ph">
		<xs:choice>
			<xs:element ref="uicontrol"/>
			<xs:element ref="menucascade"/>
		</xs:choice>
	</xs:group>
	<xs:group name="ui-d-keyword">
		<xs:choice>
			<xs:element ref="wintitle"/>
		</xs:choice>
	</xs:group>
	<xs:group name="ui-d-pre">
		<xs:choice>
			<xs:element ref="screen"/>
		</xs:choice>
	</xs:group>
	<xs:group name="uicontrol">
		<xs:sequence>
			<xs:choice>
				<xs:element ref="uicontrol"/>
			</xs:choice>
		</xs:sequence>
	</xs:group>
	<xs:group name="shortcut">
		<xs:sequence>
			<xs:choice>
				<xs:element ref="shortcut"/>
			</xs:choice>
		</xs:sequence>
	</xs:group>
	<xs:group name="wintitle">
		<xs:sequence>
			<xs:choice>
				<xs:element ref="wintitle"/>
			</xs:choice>
		</xs:sequence>
	</xs:group>
	<xs:group name="menucascade">
		<xs:sequence>
			<xs:choice>
				<xs:element ref="menucascade"/>
			</xs:choice>
		</xs:sequence>
	</xs:group>
	<xs:group name="screen">
		<xs:sequence>
			<xs:choice>
				<xs:element ref="screen"/>
			</xs:choice>
		</xs:sequence>
	</xs:group>
	<xs:element name="uicontrol">
		<xs:annotation>
			<xs:documentation>
        The user interface control (&lt;<keyword>uicontrol</keyword>&gt;) element represents
        a button, entry field, menu item, or other object that allows the user to
        control the interface. This could also include a menu or dialog. For example,
        use the &lt;<keyword>uicontrol</keyword>&gt; element inside a &lt;<keyword>menucascade</keyword>&gt; element
        when the menu item is nested, such as <menucascade>
					<uicontrol>File</uicontrol>
					<uicontrol>New</uicontrol>
				</menucascade>. This element is part
        of the DITA user interface domain, a special set of DITA elements designed
        to document user interface tasks, concepts and reference information.
      </xs:documentation>
		</xs:annotation>
		<xs:complexType mixed="true">
			<xs:complexContent>
				<xs:extension base="uicontrol.class">
					<xs:attribute ref="class" default="+ topic/ph ui-d/uicontrol "/>
				</xs:extension>
			</xs:complexContent>
		</xs:complexType>
	</xs:element>
	<xs:complexType name="uicontrol.class" mixed="true">
		<xs:sequence>
			<xs:group ref="uicontrol.content"/>
		</xs:sequence>
		<xs:attributeGroup ref="uicontrol.attributes"/>
	</xs:complexType>
	<xs:group name="uicontrol.content">
		<xs:sequence>
			<xs:choice minOccurs="0" maxOccurs="unbounded">
				<xs:group ref="image" minOccurs="0"/>
				<xs:group ref="shortcut" minOccurs="0"/>
				<xs:group ref="words.cnt" minOccurs="0"/>
			</xs:choice>
		</xs:sequence>
	</xs:group>
	<xs:attributeGroup name="uicontrol.attributes">
		<xs:attribute name="keyref" type="xs:string" form="unqualified"/>
		<xs:attribute name="outputclass" type="xs:string" form="unqualified"/>
		<xs:attributeGroup ref="global-atts"/>
		<xs:attributeGroup ref="univ-atts"/>
	</xs:attributeGroup>
	<xs:element name="shortcut">
		<xs:annotation>
			<xs:documentation>
        The &lt;<keyword>shortcut</keyword>&gt; element identifies
        a keyboard shortcut for a menu or window action. This element is part of the
        DITA user interface domain, a special set of DITA elements designed to document
        user interface tasks, concepts and reference information.
      </xs:documentation>
		</xs:annotation>
		<xs:complexType mixed="true">
			<xs:complexContent>
				<xs:extension base="shortcut.class">
					<xs:attribute ref="class" default="+ topic/keyword ui-d/shortcut "/>
				</xs:extension>
			</xs:complexContent>
		</xs:complexType>
	</xs:element>
	<xs:complexType name="shortcut.class" mixed="true">
		<xs:sequence>
			<xs:group ref="shortcut.content"/>
		</xs:sequence>
		<xs:attributeGroup ref="shortcut.attributes"/>
	</xs:complexType>
	<xs:group name="shortcut.content">
		<xs:sequence>
			<xs:choice minOccurs="0" maxOccurs="unbounded">
				<xs:group ref="text" minOccurs="0"/>
			</xs:choice>
		</xs:sequence>
	</xs:group>
	<xs:attributeGroup name="shortcut.attributes">
		<xs:attribute name="keyref" type="xs:string" form="unqualified"/>
		<xs:attribute name="outputclass" type="xs:string" form="unqualified"/>
		<xs:attributeGroup ref="global-atts"/>
		<xs:attributeGroup ref="univ-atts"/>
	</xs:attributeGroup>
	<xs:element name="wintitle">
		<xs:annotation>
			<xs:documentation>
          The window title &lt;<keyword>wintitle</keyword>&gt; element represents the title
          text that appears at the top of a window or dialog, and applies to wizard
          titles, wizard page titles, and pane titles. This element is part of the DITA
          user interface domain, a special set of DITA elements designed to document
          user interface tasks, concepts and reference information.
        </xs:documentation>
		</xs:annotation>
		<xs:complexType mixed="true">
			<xs:complexContent>
				<xs:extension base="wintitle.class">
					<xs:attribute ref="class" default="+ topic/keyword ui-d/wintitle "/>
				</xs:extension>
			</xs:complexContent>
		</xs:complexType>
	</xs:element>
	<xs:complexType name="wintitle.class" mixed="true">
		<xs:sequence>
			<xs:group ref="wintitle.content"/>
		</xs:sequence>
		<xs:attributeGroup ref="wintitle.attributes"/>
	</xs:complexType>
	<xs:group name="wintitle.content">
		<xs:sequence>
			<xs:choice minOccurs="0" maxOccurs="unbounded">
				<xs:group ref="text" minOccurs="0"/>
			</xs:choice>
		</xs:sequence>
	</xs:group>
	<xs:attributeGroup name="wintitle.attributes">
		<xs:attribute name="keyref" type="xs:string" form="unqualified"/>
		<xs:attribute name="outputclass" type="xs:string" form="unqualified"/>
		<xs:attributeGroup ref="global-atts"/>
		<xs:attributeGroup ref="univ-atts"/>
	</xs:attributeGroup>
	<xs:element name="menucascade">
		<xs:annotation>
			<xs:documentation>
        The &lt;<keyword>menucascade</keyword>&gt; element is used to document
        a series of menu choices, or to show any choice on a menu from which the user
        needs to choose. The &lt;<keyword>menucascade</keyword>&gt; element contains
        one or more user interface control (&lt;<keyword>uicontrol</keyword>&gt;) elements,
        for example: <codeph>Start &gt; Programs &gt; Accessories &gt; Notepad</codeph>. If
        there is more than one &lt;<keyword>uicontrol</keyword>&gt; element, the formatter
        may show connecting characters between the menu items to represent the menu
        cascade. This element is part of the DITA user interface domain, a special
        set of DITA elements designed to document user interface tasks, concepts and
        reference information.
      </xs:documentation>
		</xs:annotation>
		<xs:complexType>
			<xs:complexContent>
				<xs:extension base="menucascade.class">
					<xs:attribute ref="class" default="+ topic/ph ui-d/menucascade "/>
				</xs:extension>
			</xs:complexContent>
		</xs:complexType>
	</xs:element>
	<xs:complexType name="menucascade.class">
		<xs:sequence>
			<xs:group ref="menucascade.content"/>
		</xs:sequence>
		<xs:attributeGroup ref="menucascade.attributes"/>
	</xs:complexType>
	<xs:group name="menucascade.content">
		<xs:sequence>
			<xs:choice maxOccurs="unbounded">
				<xs:group ref="uicontrol"/>
			</xs:choice>
		</xs:sequence>
	</xs:group>
	<xs:attributeGroup name="menucascade.attributes">
		<xs:attribute name="keyref" type="xs:string" form="unqualified"/>
		<xs:attribute name="outputclass" type="xs:string" form="unqualified"/>
		<xs:attributeGroup ref="global-atts"/>
		<xs:attributeGroup ref="univ-atts"/>
	</xs:attributeGroup>
	<xs:element name="screen">
		<xs:annotation>
			<xs:documentation>
        The &lt;<keyword>screen</keyword>&gt; element contains or refers to a textual representation
        of a computer screen or user interface panel (window).
      </xs:documentation>
		</xs:annotation>
		<xs:complexType mixed="true">
			<xs:complexContent>
				<xs:extension base="screen.class">
					<xs:attribute ref="class" default="+ topic/pre ui-d/screen "/>
				</xs:extension>
			</xs:complexContent>
		</xs:complexType>
	</xs:element>
	<xs:complexType name="screen.class" mixed="true">
		<xs:sequence>
			<xs:group ref="screen.content"/>
		</xs:sequence>
		<xs:attributeGroup ref="screen.attributes"/>
	</xs:complexType>
	<xs:group name="screen.content">
		<xs:sequence>
			<xs:choice minOccurs="0" maxOccurs="unbounded">
				<xs:group ref="basic.ph.notm" minOccurs="0"/>
				<xs:group ref="txt.incl" minOccurs="0"/>
				<xs:choice minOccurs="0" maxOccurs="unbounded">
					<xs:group ref="data.elements.incl" minOccurs="0"/>
					<xs:group ref="foreign.unknown.incl" minOccurs="0"/>
				</xs:choice>
			</xs:choice>
		</xs:sequence>
	</xs:group>
	<xs:attributeGroup name="screen.attributes">
		<xs:attribute name="spectitle" type="xs:string" form="unqualified"/>
		<xs:attribute name="outputclass" type="xs:string" form="unqualified"/>
		<xs:attributeGroup ref="global-atts"/>
		<xs:attributeGroup ref="univ-atts"/>
		<xs:attributeGroup ref="display-atts"/>
		<xs:attribute ref="xml:space" fixed="preserve"/>
	</xs:attributeGroup>
	<xs:annotation>
		<xs:appinfo>
			<dita:domainsModule xmlns:dita="http://dita.oasis-open.org/architecture/2005/">(topic abbrev-d)</dita:domainsModule>
		</xs:appinfo>
		<xs:documentation>
      
    </xs:documentation>
	</xs:annotation>
	<xs:group name="abbrev-d-term">
		<xs:choice>
			<xs:element ref="abbreviated-form"/>
		</xs:choice>
	</xs:group>
	<xs:group name="abbreviated-form">
		<xs:sequence>
			<xs:choice>
				<xs:element ref="abbreviated-form"/>
			</xs:choice>
		</xs:sequence>
	</xs:group>
	<xs:element name="abbreviated-form">
		<xs:complexType>
			<xs:complexContent>
				<xs:extension base="abbreviated-form.class">
					<xs:attribute ref="class" default="+ topic/term abbrev-d/abbreviated-form "/>
				</xs:extension>
			</xs:complexContent>
		</xs:complexType>
	</xs:element>
	<xs:complexType name="abbreviated-form.class">
		<xs:sequence>
			<xs:group ref="abbreviated-form.content"/>
		</xs:sequence>
		<xs:attributeGroup ref="abbreviated-form.attributes"/>
	</xs:complexType>
	<xs:group name="abbreviated-form.content">
		<xs:sequence/>
	</xs:group>
	<xs:attributeGroup name="abbreviated-form.attributes">
		<xs:attribute name="keyref" type="xs:string"/>
		<xs:attribute name="outputclass" type="xs:string"/>
		<xs:attributeGroup ref="univ-atts"/>
		<xs:attributeGroup ref="global-atts"/>
	</xs:attributeGroup>
	<xs:annotation>
		<xs:appinfo>
			<dita:domainsModule xmlns:dita="http://dita.oasis-open.org/architecture/2005/">(topic hi-d)</dita:domainsModule>
		</xs:appinfo>
		<xs:documentation>
      
      </xs:documentation>
	</xs:annotation>
	<xs:group name="hi-d-ph">
		<xs:choice>
			<xs:element ref="sup"/>
			<xs:element ref="sub"/>
			<xs:element ref="tt"/>
			<xs:element ref="b"/>
			<xs:element ref="u"/>
			<xs:element ref="i"/>
		</xs:choice>
	</xs:group>
	<xs:group name="sup">
		<xs:sequence>
			<xs:choice>
				<xs:element ref="sup"/>
			</xs:choice>
		</xs:sequence>
	</xs:group>
	<xs:group name="sub">
		<xs:sequence>
			<xs:choice>
				<xs:element ref="sub"/>
			</xs:choice>
		</xs:sequence>
	</xs:group>
	<xs:group name="tt">
		<xs:sequence>
			<xs:choice>
				<xs:element ref="tt"/>
			</xs:choice>
		</xs:sequence>
	</xs:group>
	<xs:group name="b">
		<xs:sequence>
			<xs:choice>
				<xs:element ref="b"/>
			</xs:choice>
		</xs:sequence>
	</xs:group>
	<xs:group name="u">
		<xs:sequence>
			<xs:choice>
				<xs:element ref="u"/>
			</xs:choice>
		</xs:sequence>
	</xs:group>
	<xs:group name="i">
		<xs:sequence>
			<xs:choice>
				<xs:element ref="i"/>
			</xs:choice>
		</xs:sequence>
	</xs:group>
	<!-- Basic form: Single Effect Formatting Phrases -->
	<xs:element name="sup">
		<xs:annotation>
			<xs:documentation>
        The superscript (&lt;<keyword>sup</keyword>&gt;) element indicates that text should
        be superscripted, or vertically raised in relationship to the surrounding
        text.  Superscripts are usually a smaller font than the surrounding text.
        Use this element only when there is not some other more proper tag. For example,
        for specific items such as GUI controls, use the
          <xref href="uicontrol.xml">uicontrol</xref> tag. This element is part of the DITA highlighting
        domain.
      </xs:documentation>
		</xs:annotation>
		<xs:complexType mixed="true">
			<xs:complexContent>
				<xs:extension base="sup.class">
					<xs:attribute ref="class" default="+ topic/ph hi-d/sup "/>
				</xs:extension>
			</xs:complexContent>
		</xs:complexType>
	</xs:element>
	<xs:complexType name="sup.class" mixed="true">
		<xs:sequence>
			<xs:group ref="sup.content"/>
		</xs:sequence>
		<xs:attributeGroup ref="sup.attributes"/>
	</xs:complexType>
	<xs:group name="sup.content">
		<xs:sequence>
			<xs:choice minOccurs="0" maxOccurs="unbounded">
				<xs:group ref="basic.ph"/>
				<xs:group ref="data.elements.incl"/>
				<xs:group ref="foreign.unknown.incl"/>
			</xs:choice>
		</xs:sequence>
	</xs:group>
	<xs:attributeGroup name="sup.attributes">
		<xs:attributeGroup ref="global-atts"/>
		<xs:attributeGroup ref="univ-atts"/>
		<xs:attribute name="outputclass" type="xs:string" form="unqualified"/>
	</xs:attributeGroup>
	<xs:element name="sub">
		<xs:annotation>
			<xs:documentation>
        A subscript (&lt;<keyword>sub</keyword>&gt;) indicates that text should be subscripted,
        or placed lower in relationship to the surrounding text.  Subscripted text
        is often a smaller font than the surrounding text. Formatting may vary depending
        on your output process. This element is part of the DITA highlighting domain.
      </xs:documentation>
		</xs:annotation>
		<xs:complexType mixed="true">
			<xs:complexContent>
				<xs:extension base="sub.class">
					<xs:attribute ref="class" default="+ topic/ph hi-d/sub "/>
				</xs:extension>
			</xs:complexContent>
		</xs:complexType>
	</xs:element>
	<xs:complexType name="sub.class" mixed="true">
		<xs:sequence>
			<xs:group ref="sub.content"/>
		</xs:sequence>
		<xs:attributeGroup ref="sub.attributes"/>
	</xs:complexType>
	<xs:group name="sub.content">
		<xs:sequence>
			<xs:choice minOccurs="0" maxOccurs="unbounded">
				<xs:group ref="basic.ph"/>
				<xs:group ref="data.elements.incl"/>
				<xs:group ref="foreign.unknown.incl"/>
			</xs:choice>
		</xs:sequence>
	</xs:group>
	<xs:attributeGroup name="sub.attributes">
		<xs:attributeGroup ref="global-atts"/>
		<xs:attributeGroup ref="univ-atts"/>
		<xs:attribute name="outputclass" type="xs:string" form="unqualified"/>
	</xs:attributeGroup>
	<xs:element name="tt">
		<xs:annotation>
			<xs:documentation>
        The teletype (&lt;<keyword>tt</keyword>&gt;) element is used to apply monospaced
        highlighting to the content of the element.  Use this element only when there
        is not some other more proper tag. For example, for specific items such as
        GUI controls, use the <xref href="uicontrol.xml">uicontrol</xref> tag.
        This element is part of the DITA highlighting domain.
      </xs:documentation>
		</xs:annotation>
		<xs:complexType mixed="true">
			<xs:complexContent>
				<xs:extension base="tt.class">
					<xs:attribute ref="class" default="+ topic/ph hi-d/tt "/>
				</xs:extension>
			</xs:complexContent>
		</xs:complexType>
	</xs:element>
	<xs:complexType name="tt.class" mixed="true">
		<xs:sequence>
			<xs:group ref="tt.content"/>
		</xs:sequence>
		<xs:attributeGroup ref="tt.attributes"/>
	</xs:complexType>
	<xs:group name="tt.content">
		<xs:sequence>
			<xs:choice minOccurs="0" maxOccurs="unbounded">
				<xs:group ref="basic.ph"/>
				<xs:group ref="data.elements.incl"/>
				<xs:group ref="foreign.unknown.incl"/>
			</xs:choice>
		</xs:sequence>
	</xs:group>
	<xs:attributeGroup name="tt.attributes">
		<xs:attributeGroup ref="global-atts"/>
		<xs:attributeGroup ref="univ-atts"/>
		<xs:attribute name="outputclass" type="xs:string" form="unqualified"/>
	</xs:attributeGroup>
	<xs:element name="b">
		<xs:annotation>
			<xs:documentation>
        The bold (&lt;<keyword>b</keyword>&gt;) element is used to apply bold highlighting
        to the content of the element. Use this element only when there is not some
        other more proper tag. For example, for specific items such as GUI controls,
        use the <xref href="uicontrol.xml">uicontrol</xref> tag.
        This element is part of the DITA highlighting domain.
      </xs:documentation>
		</xs:annotation>
		<xs:complexType mixed="true">
			<xs:complexContent>
				<xs:extension base="b.class">
					<xs:attribute ref="class" default="+ topic/ph hi-d/b "/>
				</xs:extension>
			</xs:complexContent>
		</xs:complexType>
	</xs:element>
	<xs:complexType name="b.class" mixed="true">
		<xs:sequence>
			<xs:group ref="b.content"/>
		</xs:sequence>
		<xs:attributeGroup ref="b.attributes"/>
	</xs:complexType>
	<xs:group name="b.content">
		<xs:sequence>
			<xs:choice minOccurs="0" maxOccurs="unbounded">
				<xs:group ref="basic.ph"/>
				<xs:group ref="data.elements.incl"/>
				<xs:group ref="foreign.unknown.incl"/>
			</xs:choice>
		</xs:sequence>
	</xs:group>
	<xs:attributeGroup name="b.attributes">
		<xs:attributeGroup ref="global-atts"/>
		<xs:attributeGroup ref="univ-atts"/>
		<xs:attribute name="outputclass" type="xs:string" form="unqualified"/>
	</xs:attributeGroup>
	<xs:element name="u">
		<xs:annotation>
			<xs:documentation>
        The underline (&lt;<keyword>u</keyword>&gt;) element is used to apply
        underline highlighting to the content of the element.  Use this element only
        when there is not some other more proper tag. For example, for specific items
        such as GUI controls, use the <xref href="uicontrol.xml">uicontrol</xref> tag.
        This element is part of the DITA highlighting domain.
      </xs:documentation>
		</xs:annotation>
		<xs:complexType mixed="true">
			<xs:complexContent>
				<xs:extension base="u.class">
					<xs:attribute ref="class" default="+ topic/ph hi-d/u "/>
				</xs:extension>
			</xs:complexContent>
		</xs:complexType>
	</xs:element>
	<xs:complexType name="u.class" mixed="true">
		<xs:sequence>
			<xs:group ref="u.content"/>
		</xs:sequence>
		<xs:attributeGroup ref="u.attributes"/>
	</xs:complexType>
	<xs:group name="u.content">
		<xs:sequence>
			<xs:choice minOccurs="0" maxOccurs="unbounded">
				<xs:group ref="basic.ph"/>
				<xs:group ref="data.elements.incl"/>
				<xs:group ref="foreign.unknown.incl"/>
			</xs:choice>
		</xs:sequence>
	</xs:group>
	<xs:attributeGroup name="u.attributes">
		<xs:attributeGroup ref="global-atts"/>
		<xs:attributeGroup ref="univ-atts"/>
		<xs:attribute name="outputclass" type="xs:string" form="unqualified"/>
	</xs:attributeGroup>
	<xs:element name="i">
		<xs:annotation>
			<xs:documentation>
        The italic (&lt;i&gt;) element is used to apply italic highlighting
        to the content of the element. Use this element only when there
        is not some other more proper tag. For example, for specific items such as
        GUI controls, use the <xref href="uicontrol.xml">uicontrol</xref> tag.
        Italic highlighting generally means a font that is slanted for emphasis, but
        this may vary depending on your output formatting process. This element is
        part of the DITA highlighting domain.
      </xs:documentation>
		</xs:annotation>
		<xs:complexType mixed="true">
			<xs:complexContent>
				<xs:extension base="i.class">
					<xs:attribute ref="class" default="+ topic/ph hi-d/i "/>
				</xs:extension>
			</xs:complexContent>
		</xs:complexType>
	</xs:element>
	<xs:complexType name="i.class" mixed="true">
		<xs:sequence>
			<xs:group ref="i.content"/>
		</xs:sequence>
		<xs:attributeGroup ref="i.attributes"/>
	</xs:complexType>
	<xs:group name="i.content">
		<xs:sequence>
			<xs:choice minOccurs="0" maxOccurs="unbounded">
				<xs:group ref="basic.ph"/>
				<xs:group ref="data.elements.incl"/>
				<xs:group ref="foreign.unknown.incl"/>
			</xs:choice>
		</xs:sequence>
	</xs:group>
	<xs:attributeGroup name="i.attributes">
		<xs:attributeGroup ref="global-atts"/>
		<xs:attributeGroup ref="univ-atts"/>
		<xs:attribute name="outputclass" type="xs:string" form="unqualified"/>
	</xs:attributeGroup>
	<xs:annotation>
		<xs:appinfo>
			<dita:domainsModule xmlns:dita="http://dita.oasis-open.org/architecture/2005/">(topic indexing-d)</dita:domainsModule>
		</xs:appinfo>
		<xs:documentation> 
    
    </xs:documentation>
	</xs:annotation>
	<xs:group name="indexing-d-index-base">
		<xs:choice>
			<xs:element ref="index-see"/>
			<xs:element ref="index-see-also"/>
			<xs:element ref="index-sort-as"/>
		</xs:choice>
	</xs:group>
	<xs:group name="index-see">
		<xs:sequence>
			<xs:choice>
				<xs:element ref="index-see"/>
			</xs:choice>
		</xs:sequence>
	</xs:group>
	<xs:group name="index-see-also">
		<xs:sequence>
			<xs:choice>
				<xs:element ref="index-see-also"/>
			</xs:choice>
		</xs:sequence>
	</xs:group>
	<xs:group name="index-sort-as">
		<xs:sequence>
			<xs:choice>
				<xs:element ref="index-sort-as"/>
			</xs:choice>
		</xs:sequence>
	</xs:group>
	<xs:element name="index-see">
		<xs:complexType mixed="true">
			<xs:complexContent>
				<xs:extension base="index-see.class">
					<xs:attribute ref="class" default="+ topic/index-base indexing-d/index-see "/>
				</xs:extension>
			</xs:complexContent>
		</xs:complexType>
	</xs:element>
	<xs:complexType name="index-see.class" mixed="true">
		<xs:sequence>
			<xs:group ref="index-see.content"/>
		</xs:sequence>
		<xs:attributeGroup ref="index-see.attributes"/>
	</xs:complexType>
	<xs:group name="index-see.content">
		<xs:sequence>
			<xs:choice minOccurs="0" maxOccurs="unbounded">
				<xs:group ref="words.cnt"/>
				<xs:group ref="indexterm"/>
			</xs:choice>
		</xs:sequence>
	</xs:group>
	<xs:attributeGroup name="index-see.attributes">
		<xs:attribute name="keyref" type="xs:string"/>
		<xs:attributeGroup ref="univ-atts"/>
		<xs:attributeGroup ref="global-atts"/>
	</xs:attributeGroup>
	<xs:element name="index-see-also">
		<xs:complexType mixed="true">
			<xs:complexContent>
				<xs:extension base="index-see-also.class">
					<xs:attribute ref="class" default="+ topic/index-base indexing-d/index-see-also "/>
				</xs:extension>
			</xs:complexContent>
		</xs:complexType>
	</xs:element>
	<xs:complexType name="index-see-also.class" mixed="true">
		<xs:sequence>
			<xs:group ref="index-sort-also.content"/>
		</xs:sequence>
		<xs:attributeGroup ref="index-sort-also.attributes"/>
	</xs:complexType>
	<xs:group name="index-sort-also.content">
		<xs:sequence>
			<xs:choice minOccurs="0" maxOccurs="unbounded">
				<xs:group ref="words.cnt"/>
				<xs:group ref="indexterm"/>
			</xs:choice>
		</xs:sequence>
	</xs:group>
	<xs:attributeGroup name="index-sort-also.attributes">
		<xs:attribute name="keyref" type="xs:string"/>
		<xs:attributeGroup ref="univ-atts"/>
		<xs:attributeGroup ref="global-atts"/>
	</xs:attributeGroup>
	<xs:element name="index-sort-as">
		<xs:complexType mixed="true">
			<xs:complexContent>
				<xs:extension base="index-sort-as.class">
					<xs:attribute ref="class" default="+ topic/index-base indexing-d/index-sort-as "/>
				</xs:extension>
			</xs:complexContent>
		</xs:complexType>
	</xs:element>
	<xs:complexType name="index-sort-as.class" mixed="true">
		<xs:sequence>
			<xs:group ref="index-sort-as.content"/>
		</xs:sequence>
		<xs:attributeGroup ref="index-sort-as.attributes"/>
	</xs:complexType>
	<xs:group name="index-sort-as.content">
		<xs:sequence>
			<xs:choice minOccurs="0" maxOccurs="unbounded">
				<xs:group ref="words.cnt"/>
			</xs:choice>
		</xs:sequence>
	</xs:group>
	<xs:attributeGroup name="index-sort-as.attributes">
		<xs:attribute name="keyref" type="xs:string"/>
		<xs:attributeGroup ref="univ-atts"/>
		<xs:attributeGroup ref="global-atts"/>
	</xs:attributeGroup>
	<xs:group name="table">
		<xs:sequence>
			<xs:choice>
				<xs:element ref="table"/>
			</xs:choice>
		</xs:sequence>
	</xs:group>
	<xs:group name="tgroup">
		<xs:sequence>
			<xs:choice>
				<xs:element ref="tgroup"/>
			</xs:choice>
		</xs:sequence>
	</xs:group>
	<xs:group name="colspec">
		<xs:sequence>
			<xs:choice>
				<xs:element ref="colspec"/>
			</xs:choice>
		</xs:sequence>
	</xs:group>
	<xs:group name="thead">
		<xs:sequence>
			<xs:choice>
				<xs:element ref="thead"/>
			</xs:choice>
		</xs:sequence>
	</xs:group>
	<xs:group name="tbody">
		<xs:sequence>
			<xs:choice>
				<xs:element ref="tbody"/>
			</xs:choice>
		</xs:sequence>
	</xs:group>
	<xs:group name="row">
		<xs:sequence>
			<xs:choice>
				<xs:element ref="row"/>
			</xs:choice>
		</xs:sequence>
	</xs:group>
	<xs:group name="entry">
		<xs:sequence>
			<xs:choice>
				<xs:element ref="entry"/>
			</xs:choice>
		</xs:sequence>
	</xs:group>
	<!-- ======= IMPORT - XML attributes and namespace ======= -->
	<!-- STRUCTURAL MEMBERS ======================================================== -->
	<!-- things that can be nested under topic after body - redefined when specializing -->
	<!--xs:simpleType name="topicreftypes.class">
    <xs:restriction base="xs:string">
      <xs:enumeration value="topic"/>
      <xs:enumeration value="concept"/>
      <xs:enumeration value="task"/>
      <xs:enumeration value="reference"/>
      <xs:enumeration value="external"/>
      <xs:enumeration value="local"/>
    </xs:restriction>
  </xs:simpleType>-->
	<xs:attributeGroup name="topicref-atts">
		<xs:annotation>
			<xs:documentation>
        The %topicref-atts; parameter entity represents a group of attributes
        used in numerous map elements: map, topicref, relcolspec, relcell, topichead,
        and topicgroup. The set is similar to those documented in <xref href="topicref-atts-no-toc.xml">topicref-atts-no-toc</xref>
        but includes the <i>
					<keyword>toc</keyword>
				</i> attribute.
      </xs:documentation>
		</xs:annotation>
		<xs:attribute name="collection-type" type="collection-type.class" form="unqualified"/>
		<xs:attribute name="type" type="xs:string" form="unqualified"/>
		<xs:attribute name="processing-role" type="processing-role-att.class" form="unqualified"/>
		<xs:attribute name="scope" type="scope-att.class" form="unqualified"/>
		<xs:attribute name="locktitle" type="yesno-att.class" form="unqualified"/>
		<xs:attribute name="format" type="xs:string" form="unqualified"/>
		<xs:attribute name="linking" type="linkingtypes.class" form="unqualified"/>
		<xs:attribute name="toc" type="yesno-att.class" form="unqualified"/>
		<xs:attribute name="print" type="print-att.class" form="unqualified"/>
		<xs:attribute name="search" type="yesno-att.class" form="unqualified"/>
		<xs:attribute name="chunk" type="xs:string" form="unqualified"/>
	</xs:attributeGroup>
	<xs:simpleType name="collection-type.class">
		<xs:restriction base="xs:string">
			<xs:enumeration value="choice"/>
			<xs:enumeration value="unordered"/>
			<xs:enumeration value="sequence"/>
			<xs:enumeration value="family"/>
			<xs:enumeration value="-dita-use-conref-target"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="linkingtypes.class">
		<xs:restriction base="xs:string">
			<xs:enumeration value="targetonly"/>
			<xs:enumeration value="sourceonly"/>
			<xs:enumeration value="normal"/>
			<xs:enumeration value="none"/>
			<xs:enumeration value="-dita-use-conref-target"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:attributeGroup name="topicref-atts-no-toc">
		<xs:annotation>
			<xs:documentation>
        The %topicref-atts-no-toc; parameter entity represents the set
        of attributes used in the 
          <xref href="reltable.xml">reltable</xref>
         map
        element. The set is similar to those documented in 
          <xref href="topicref-atts.xml">topicref-atts</xref>
         but
        for &lt;<keyword>reltable</keyword>&gt; the <i>
					<keyword>toc</keyword>
				</i> attribute
        defaults to <q>no</q>. For the other elements that use the %topicref-atts;
        group declaration, the <i>
					<keyword>toc</keyword>
				</i> attribute doesn't have
        a default; they can inherit their <i>
					<keyword>toc</keyword>
				</i> value from
        the nearest container, otherwise it functions upon output as if set to <q>yes</q>.
      </xs:documentation>
		</xs:annotation>
		<xs:attribute name="collection-type" type="collection-type.class" form="unqualified"/>
		<xs:attribute name="type" type="xs:string" form="unqualified"/>
		<xs:attribute name="processing-role" type="processing-role-att.class" form="unqualified"/>
		<xs:attribute name="scope" type="scope-att.class" form="unqualified"/>
		<xs:attribute name="locktitle" type="yesno-att.class" form="unqualified"/>
		<xs:attribute name="format" type="xs:string" form="unqualified"/>
		<xs:attribute name="linking" type="linkingtypes.class" form="unqualified"/>
		<xs:attribute name="toc" type="yesno-att.class" default="no" form="unqualified"/>
		<xs:attribute name="print" type="print-att.class" form="unqualified"/>
		<xs:attribute name="search" type="yesno-att.class" form="unqualified"/>
		<xs:attribute name="chunk" type="xs:string" form="unqualified"/>
	</xs:attributeGroup>
	<xs:simpleType name="print-att.class">
		<xs:restriction base="xs:string">
			<xs:enumeration value="yes"/>
			<xs:enumeration value="no"/>
			<xs:enumeration value="printonly"/>
			<xs:enumeration value="-dita-use-conref-target"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:element name="map">
		<xs:annotation>
			<xs:documentation>
        The &lt;<keyword>map</keyword>&gt; element is used to define a map
        which describes the relationships among a set of DITA topics. Maps consist
        of references to topics organized into hierarchies and tables. Maps provide
        a way to express these relationships in a single common format that can be
        used for different outputs. 
      </xs:documentation>
		</xs:annotation>
		<xs:complexType>
			<xs:complexContent>
				<xs:extension base="map.class">
					<xs:attribute ref="class" default="- map/map "/>
				</xs:extension>
			</xs:complexContent>
		</xs:complexType>
	</xs:element>
	<xs:complexType name="map.class">
		<xs:sequence>
			<xs:group ref="map.content"/>
		</xs:sequence>
		<xs:attributeGroup ref="map.attributes"/>
	</xs:complexType>
	<xs:group name="map.content">
		<xs:sequence>
			<xs:sequence>
				<xs:group ref="title" minOccurs="0"/>
				<xs:group ref="topicmeta" minOccurs="0"/>
				<xs:choice minOccurs="0" maxOccurs="unbounded">
					<xs:group ref="navref"/>
					<xs:group ref="anchor"/>
					<xs:group ref="topicref"/>
					<xs:group ref="reltable"/>
					<xs:group ref="data.elements.incl"/>
				</xs:choice>
			</xs:sequence>
		</xs:sequence>
	</xs:group>
	<xs:attributeGroup name="map.attributes">
		<xs:attribute name="title" type="xs:string" form="unqualified"/>
		<xs:attribute name="id" type="xs:ID" form="unqualified"/>
		<xs:attributeGroup ref="conref-atts"/>
		<xs:attribute name="anchorref" type="xs:string" form="unqualified"/>
		<xs:attribute name="outputclass" type="xs:string" form="unqualified"/>
		<xs:attributeGroup ref="domains-att"/>
		<xs:attributeGroup ref="topicref-atts"/>
		<xs:attributeGroup ref="select-atts"/>
		<xs:attributeGroup ref="localization-atts"/>
		<xs:attribute ref="ditaarch:DITAArchVersion"/>
		<xs:attributeGroup ref="global-atts"/>
	</xs:attributeGroup>
	<xs:element name="navref">
		<xs:annotation>
			<xs:documentation>
        The &lt;<keyword>navref</keyword>&gt; element references a map file
        from within a map file.  The reference is resolved at runtime for Eclipse
        navigation, typically to pull together the navigation for multiple components
        into a product navigation. <ph conref="commonLRdefs.xml#commonLRdefs/only4eclipse"/>
			</xs:documentation>
		</xs:annotation>
		<xs:complexType>
			<xs:complexContent>
				<xs:extension base="navref.class">
					<xs:attribute ref="class" default="- map/navref "/>
				</xs:extension>
			</xs:complexContent>
		</xs:complexType>
	</xs:element>
	<xs:complexType name="navref.class">
		<xs:attributeGroup ref="navref.attributes"/>
	</xs:complexType>
	<xs:attributeGroup name="navref.attributes">
		<xs:attributeGroup ref="univ-atts"/>
		<xs:attribute name="outputclass" type="xs:string" form="unqualified"/>
		<xs:attribute name="mapref" type="xs:string" form="unqualified"/>
		<xs:attribute name="keyref" type="xs:string" form="unqualified"/>
		<xs:attributeGroup ref="global-atts"/>
	</xs:attributeGroup>
	<xs:element name="topicref">
		<xs:annotation>
			<xs:documentation>
        The &lt;<keyword>topicref</keyword>&gt; element designates a topic
        (such as a concept, task, or reference) as a link in a DITA map. A &lt;<keyword>topicref</keyword>&gt;
        can contain other&lt;<keyword>topicref</keyword>&gt; elements, allowing you to
        express navigation or table-of-contents hierarchies, as well as implying relationships
        between the containing &lt;<keyword>topicref</keyword>&gt; and its children.
        You can set the collection-type of a container &lt;<keyword>topicref</keyword>&gt;
        to determine how its children are related to each other. Relationships end
        up expressed as links in the output (with each participant in a relationship
        having links to the other participants). 
      </xs:documentation>
		</xs:annotation>
		<xs:complexType>
			<xs:complexContent>
				<xs:extension base="topicref.class">
					<xs:attribute ref="class" default="- map/topicref "/>
				</xs:extension>
			</xs:complexContent>
		</xs:complexType>
	</xs:element>
	<xs:complexType name="topicref.class">
		<xs:sequence>
			<xs:group ref="topicref.content"/>
		</xs:sequence>
		<xs:attributeGroup ref="topicref.attributes"/>
	</xs:complexType>
	<xs:group name="topicref.content">
		<xs:sequence>
			<xs:sequence>
				<xs:group ref="topicmeta" minOccurs="0"/>
				<xs:choice minOccurs="0" maxOccurs="unbounded">
					<xs:group ref="navref"/>
					<xs:group ref="anchor"/>
					<xs:group ref="topicref"/>
					<xs:group ref="data.elements.incl"/>
				</xs:choice>
			</xs:sequence>
		</xs:sequence>
	</xs:group>
	<xs:attributeGroup name="topicref.attributes">
		<xs:attribute name="navtitle" type="xs:string" form="unqualified"/>
		<xs:attribute name="href" type="xs:string" form="unqualified"/>
		<xs:attribute name="keys" type="xs:string" form="unqualified"/>
		<xs:attribute name="keyref" type="xs:string" form="unqualified"/>
		<xs:attribute name="query" type="xs:string" form="unqualified"/>
		<xs:attribute name="copy-to" type="xs:string" form="unqualified"/>
		<xs:attributeGroup ref="topicref-atts"/>
		<xs:attributeGroup ref="univ-atts"/>
		<xs:attribute name="outputclass" type="xs:string" form="unqualified"/>
		<xs:attributeGroup ref="global-atts"/>
	</xs:attributeGroup>
	<xs:element name="reltable">
		<xs:annotation>
			<xs:documentation>
        The relationship table (&lt;<keyword>reltable</keyword>&gt;) defines
        relationships between topics, based on the familiar table model of rows (&lt;<keyword>relrow</keyword>&gt;),
        columns (&lt;<keyword>relheader</keyword>&gt;), and cells (&lt;<keyword>relcell</keyword>>).
        The &lt;<keyword>relcell</keyword>&gt; elements can contain &lt;<keyword>topicref</keyword>&gt;
        elements, which are then related to other &lt;<keyword>topicref</keyword>&gt;
        elements in the same row (although not necessarily in the same cell). By default,
        the contents of a &lt;<keyword>reltable</keyword>&gt; element are not output
        for navigation or TOC purposes, and are used only to define relationships
        that can be expressed as topic-to-topic links.
      </xs:documentation>
		</xs:annotation>
		<xs:complexType>
			<xs:complexContent>
				<xs:extension base="reltable.class">
					<xs:attribute ref="class" default="- map/reltable "/>
				</xs:extension>
			</xs:complexContent>
		</xs:complexType>
	</xs:element>
	<xs:complexType name="reltable.class">
		<xs:sequence>
			<xs:group ref="reltable.content"/>
		</xs:sequence>
		<xs:attributeGroup ref="reltable.attributes"/>
	</xs:complexType>
	<xs:group name="reltable.content">
		<xs:sequence>
			<xs:sequence>
				<xs:group ref="topicmeta" minOccurs="0"/>
				<xs:group ref="relheader" minOccurs="0"/>
				<xs:group ref="relrow" maxOccurs="unbounded"/>
			</xs:sequence>
		</xs:sequence>
	</xs:group>
	<xs:attributeGroup name="reltable.attributes">
		<xs:attribute name="title" type="xs:string" form="unqualified"/>
		<xs:attributeGroup ref="topicref-atts-no-toc"/>
		<xs:attributeGroup ref="univ-atts"/>
		<xs:attribute name="outputclass" type="xs:string" form="unqualified"/>
		<xs:attributeGroup ref="global-atts"/>
	</xs:attributeGroup>
	<xs:element name="relheader">
		<xs:annotation>
			<xs:documentation>
        The &lt;<keyword>relheader</keyword>&gt; element is a row of column
        definitions (&lt;<keyword>relcolspec</keyword>&gt; elements) in a relationship
        table. Each table can have only one set of column definitions.
      </xs:documentation>
		</xs:annotation>
		<xs:complexType>
			<xs:complexContent>
				<xs:extension base="relheader.class">
					<xs:attribute ref="class" default="- map/relheader "/>
				</xs:extension>
			</xs:complexContent>
		</xs:complexType>
	</xs:element>
	<xs:complexType name="relheader.class">
		<xs:sequence>
			<xs:group ref="relheader.content"/>
		</xs:sequence>
		<xs:attributeGroup ref="relheader.attributes"/>
	</xs:complexType>
	<xs:group name="relheader.content">
		<xs:sequence>
			<xs:sequence maxOccurs="unbounded">
				<xs:group ref="relcolspec"/>
			</xs:sequence>
		</xs:sequence>
	</xs:group>
	<xs:attributeGroup name="relheader.attributes">
		<xs:attributeGroup ref="univ-atts"/>
		<xs:attributeGroup ref="global-atts"/>
	</xs:attributeGroup>
	<xs:element name="relcolspec">
		<xs:annotation>
			<xs:documentation>
        A column definition in the relationship table. You can use &lt;<keyword>relcolspec</keyword>&gt;
        column definitions to set defaults for the attributes of &lt;<keyword>topicref</keyword>&gt;
        elements in the column. For example, you can set type="concept" to treat all
        untyped &lt;<keyword>topicref</keyword>&gt; elements in the column as concepts.
      </xs:documentation>
		</xs:annotation>
		<xs:complexType>
			<xs:complexContent>
				<xs:extension base="relcolspec.class">
					<xs:attribute ref="class" default="- map/relcolspec "/>
				</xs:extension>
			</xs:complexContent>
		</xs:complexType>
	</xs:element>
	<!-- <!ELEMENT relcolspec ((%title;)?, (%topicmeta;)?, (%topicref)*)>  #12048 -->
	<xs:complexType name="relcolspec.class">
		<xs:sequence>
			<xs:group ref="relcolspec.content"/>
		</xs:sequence>
		<xs:attributeGroup ref="relcolspec.attributes"/>
	</xs:complexType>
	<xs:group name="relcolspec.content">
		<xs:sequence>
			<xs:sequence>
				<xs:group ref="title" minOccurs="0"/>
				<xs:group ref="topicmeta" minOccurs="0"/>
				<xs:group ref="topicref" minOccurs="0" maxOccurs="unbounded"/>
			</xs:sequence>
		</xs:sequence>
	</xs:group>
	<xs:attributeGroup name="relcolspec.attributes">
		<xs:attributeGroup ref="univ-atts"/>
		<xs:attributeGroup ref="topicref-atts"/>
		<xs:attribute name="outputclass" type="xs:string" form="unqualified"/>
		<xs:attributeGroup ref="global-atts"/>
	</xs:attributeGroup>
	<xs:element name="relrow">
		<xs:annotation>
			<xs:documentation>
        A &lt;<keyword>relrow</keyword>&gt; is a row in the relationship table.
        This creates a relationship between the cells in the row, which will end up
        expressed as links among the &lt;<keyword>topicref</keyword>&gt; elements in
        the cells.
      </xs:documentation>
		</xs:annotation>
		<xs:complexType>
			<xs:complexContent>
				<xs:extension base="relrow.class">
					<xs:attribute ref="class" default="- map/relrow "/>
				</xs:extension>
			</xs:complexContent>
		</xs:complexType>
	</xs:element>
	<xs:complexType name="relrow.class">
		<xs:sequence>
			<xs:group ref="relrow.content"/>
		</xs:sequence>
		<xs:attributeGroup ref="relrow.attributes"/>
	</xs:complexType>
	<xs:group name="relrow.content">
		<xs:sequence>
			<xs:sequence minOccurs="0" maxOccurs="unbounded">
				<xs:group ref="relcell"/>
			</xs:sequence>
		</xs:sequence>
	</xs:group>
	<xs:attributeGroup name="relrow.attributes">
		<xs:attributeGroup ref="univ-atts"/>
		<xs:attribute name="outputclass" type="xs:string" form="unqualified"/>
		<xs:attributeGroup ref="global-atts"/>
	</xs:attributeGroup>
	<xs:element name="relcell">
		<xs:annotation>
			<xs:documentation>
        A &lt;<keyword>relcell</keyword>&gt; element is a cell in the relationship
        table. The &lt;<keyword>topicref</keyword>&gt; elements it contains will be related
        to topicrefs in other cells of the same row. By default, topicrefs in the
        same cell are not related to each other, unless you change the relcell's collection-type
        attribute to indicate that they are related.
      </xs:documentation>
		</xs:annotation>
		<xs:complexType>
			<xs:complexContent>
				<xs:extension base="relcell.class">
					<xs:attribute ref="class" default="- map/relcell "/>
				</xs:extension>
			</xs:complexContent>
		</xs:complexType>
	</xs:element>
	<xs:complexType name="relcell.class">
		<xs:sequence>
			<xs:group ref="relcell.content"/>
		</xs:sequence>
		<xs:attributeGroup ref="relcell.attributes"/>
	</xs:complexType>
	<xs:group name="relcell.content">
		<xs:sequence>
			<xs:choice minOccurs="0" maxOccurs="unbounded">
				<xs:group ref="topicref"/>
				<xs:group ref="data.elements.incl"/>
			</xs:choice>
		</xs:sequence>
	</xs:group>
	<xs:attributeGroup name="relcell.attributes">
		<xs:attributeGroup ref="univ-atts"/>
		<xs:attributeGroup ref="topicref-atts"/>
		<xs:attribute name="outputclass" type="xs:string" form="unqualified"/>
		<xs:attributeGroup ref="global-atts"/>
	</xs:attributeGroup>
	<xs:element name="anchor">
		<xs:annotation>
			<xs:documentation>
        The &lt;<keyword>anchor</keyword>&gt; element is used for runtime
        integration of navigation. It provides an integration point that another map
        can point to in order to insert its navigation into the current navigation
        tree. It is currently supported by Eclipse output only.
      </xs:documentation>
		</xs:annotation>
		<xs:complexType>
			<xs:complexContent>
				<xs:extension base="anchor.class">
					<xs:attribute ref="class" default="- map/anchor "/>
				</xs:extension>
			</xs:complexContent>
		</xs:complexType>
	</xs:element>
	<xs:complexType name="anchor.class">
		<xs:attributeGroup ref="anchor.attributes"/>
	</xs:complexType>
	<xs:attributeGroup name="anchor.attributes">
		<xs:attribute name="id" type="xs:ID" use="required" form="unqualified"/>
		<xs:attribute name="outputclass" type="xs:string" form="unqualified"/>
		<xs:attributeGroup ref="conref-atts"/>
		<xs:attributeGroup ref="localization-atts"/>
		<xs:attributeGroup ref="select-atts"/>
		<xs:attributeGroup ref="global-atts"/>
	</xs:attributeGroup>
	<xs:element name="topicmeta">
		<xs:annotation>
			<xs:documentation>
        The &lt;<keyword>topicmeta</keyword>&gt; element defines the metadata
        that applies to a topic and the topic's children. When creating links, it
        can also be used to override the title and short description of the topic.
        In addition, it can insert index entries through the &lt;<keyword>keywords</keyword>&gt;
        element.
      </xs:documentation>
		</xs:annotation>
		<xs:complexType>
			<xs:complexContent>
				<xs:extension base="topicmeta.class">
					<xs:attribute ref="class" default="- map/topicmeta "/>
				</xs:extension>
			</xs:complexContent>
		</xs:complexType>
	</xs:element>
	<xs:complexType name="topicmeta.class">
		<xs:sequence>
			<xs:group ref="topicmeta.content"/>
		</xs:sequence>
		<xs:attributeGroup ref="topicmeta.attributes"/>
	</xs:complexType>
	<xs:group name="topicmeta.content">
		<xs:sequence>
			<xs:sequence>
				<xs:group ref="navtitle" minOccurs="0"/>
				<xs:group ref="linktext" minOccurs="0"/>
				<xs:group ref="searchtitle" minOccurs="0"/>
				<xs:group ref="shortdesc" minOccurs="0"/>
				<xs:group ref="author" minOccurs="0" maxOccurs="unbounded"/>
				<xs:group ref="source" minOccurs="0"/>
				<xs:group ref="publisher" minOccurs="0"/>
				<xs:group ref="copyright" minOccurs="0" maxOccurs="unbounded"/>
				<xs:group ref="critdates" minOccurs="0"/>
				<xs:group ref="permissions" minOccurs="0"/>
				<xs:group ref="metadata" minOccurs="0" maxOccurs="unbounded"/>
				<xs:group ref="audience" minOccurs="0" maxOccurs="unbounded"/>
				<xs:group ref="category" minOccurs="0" maxOccurs="unbounded"/>
				<xs:group ref="keywords" minOccurs="0" maxOccurs="unbounded"/>
				<xs:group ref="prodinfo" minOccurs="0" maxOccurs="unbounded"/>
				<xs:group ref="othermeta" minOccurs="0" maxOccurs="unbounded"/>
				<xs:group ref="resourceid" minOccurs="0" maxOccurs="unbounded"/>
				<xs:choice minOccurs="0" maxOccurs="unbounded">
					<xs:group ref="data.elements.incl"/>
					<xs:group ref="foreign.unknown.incl"/>
				</xs:choice>
			</xs:sequence>
		</xs:sequence>
	</xs:group>
	<xs:attributeGroup name="topicmeta.attributes">
		<xs:attribute name="lockmeta" type="yesno-att.class" form="unqualified"/>
		<xs:attributeGroup ref="univ-atts"/>
		<xs:attributeGroup ref="global-atts"/>
	</xs:attributeGroup>
	<xs:element name="linktext">
		<xs:annotation>
			<xs:documentation>
        The &lt;<keyword>linktext</keyword>&gt; element provides the literal
        label or line of text for a link. In most cases, the text of a link can be
        resolved during processing by cross reference with the target resource. Use
        the &lt;<keyword>linktext</keyword>&gt; element only when the target cannot be
        reached, such as when it is a peer or external link.
      </xs:documentation>
		</xs:annotation>
		<xs:complexType mixed="true">
			<xs:complexContent>
				<xs:extension base="linktext.class">
					<xs:attribute ref="class" default="- map/linktext "/>
				</xs:extension>
			</xs:complexContent>
		</xs:complexType>
	</xs:element>
	<xs:complexType name="linktext.class" mixed="true">
		<xs:sequence>
			<xs:group ref="linktext.content"/>
		</xs:sequence>
		<xs:attributeGroup ref="linktext.attributes"/>
	</xs:complexType>
	<xs:group name="linktext.content">
		<xs:sequence>
			<xs:choice minOccurs="0" maxOccurs="unbounded">
				<xs:group ref="words.cnt"/>
				<xs:group ref="ph"/>
			</xs:choice>
		</xs:sequence>
	</xs:group>
	<xs:attributeGroup name="linktext.attributes">
		<xs:attribute name="outputclass" type="xs:string" form="unqualified"/>
		<xs:attributeGroup ref="univ-atts"/>
		<xs:attributeGroup ref="global-atts"/>
	</xs:attributeGroup>
	<xs:element name="searchtitle">
		<xs:annotation>
			<xs:documentation>
        When your DITA topic is transformed to XHTML, the &lt;<keyword>searchtitle</keyword>&gt;
        element is used to create a title element at the top of the resulting HTML
        file. This title is normally used in search result summaries by some search
        engines, such as that in Eclipse (<xref format="html" href="http://eclipse.org" scope="external">http://eclipse.org</xref>); if not set, the XHTML's
        title element defaults to the source topic's title content (which may not
        be as well optimized for search summaries)
      </xs:documentation>
		</xs:annotation>
		<xs:complexType mixed="true">
			<xs:complexContent>
				<xs:extension base="searchtitle.class">
					<xs:attribute ref="class" default="- map/searchtitle "/>
				</xs:extension>
			</xs:complexContent>
		</xs:complexType>
	</xs:element>
	<xs:complexType name="searchtitle.class" mixed="true">
		<xs:sequence>
			<xs:group ref="searchtitle.content"/>
		</xs:sequence>
		<xs:attributeGroup ref="searchtitle.attributes"/>
	</xs:complexType>
	<xs:group name="searchtitle.content">
		<xs:sequence>
			<xs:sequence minOccurs="0" maxOccurs="unbounded">
				<xs:group ref="words.cnt"/>
			</xs:sequence>
		</xs:sequence>
	</xs:group>
	<xs:attributeGroup name="searchtitle.attributes">
		<xs:attribute name="outputclass" type="xs:string" form="unqualified"/>
		<xs:attributeGroup ref="univ-atts"/>
		<xs:attributeGroup ref="global-atts"/>
	</xs:attributeGroup>
	<xs:element name="shortdesc">
		<xs:annotation>
			<xs:documentation>
        The short description (&lt;<keyword>shortdesc</keyword>&gt;) element
        occurs between the topic title and the topic body, as the initial paragraph-like
        content of a topic. The short description, which represents the purpose or
        theme of the topic, is also intended to be used as a link preview and for
        searching.
      </xs:documentation>
		</xs:annotation>
		<xs:complexType mixed="true">
			<xs:complexContent>
				<xs:extension base="shortdesc.class">
					<xs:attribute ref="class" default="- map/shortdesc "/>
				</xs:extension>
			</xs:complexContent>
		</xs:complexType>
	</xs:element>
	<!--<xs:complexType name="shortdesc.class" mixed="true">
    <xs:sequence minOccurs="0" maxOccurs="unbounded">
      <xs:group ref="words.cnt"/>
    </xs:sequence>
    <xs:attributeGroup ref="global-atts" />
  </xs:complexType >-->
	<!-- ==================== Import Section ======================= -->
	<xs:annotation>
		<xs:appinfo>
			<dita:domainsModule xmlns:dita="http://dita.oasis-open.org/architecture/2005/">(topic pr-d)</dita:domainsModule>
		</xs:appinfo>
		<xs:documentation> 
    
    </xs:documentation>
	</xs:annotation>
	<xs:group name="pr-d-keyword">
		<xs:choice>
			<xs:element ref="option"/>
			<xs:element ref="parmname"/>
			<xs:element ref="apiname"/>
		</xs:choice>
	</xs:group>
	<xs:group name="pr-d-ph">
		<xs:choice>
			<xs:element ref="codeph"/>
			<xs:element ref="synph"/>
		</xs:choice>
	</xs:group>
	<xs:group name="pr-d-pre">
		<xs:choice>
			<xs:element ref="codeblock"/>
		</xs:choice>
	</xs:group>
	<xs:group name="pr-d-dl">
		<xs:choice>
			<xs:element ref="parml"/>
		</xs:choice>
	</xs:group>
	<xs:group name="pr-d-fig">
		<xs:choice>
			<xs:element ref="syntaxdiagram"/>
		</xs:choice>
	</xs:group>
	<xs:group name="codeph">
		<xs:sequence>
			<xs:choice>
				<xs:element ref="codeph"/>
			</xs:choice>
		</xs:sequence>
	</xs:group>
	<xs:group name="codeblock">
		<xs:sequence>
			<xs:choice>
				<xs:element ref="codeblock"/>
			</xs:choice>
		</xs:sequence>
	</xs:group>
	<xs:group name="coderef">
		<xs:sequence>
			<xs:choice>
				<xs:element ref="coderef"/>
			</xs:choice>
		</xs:sequence>
	</xs:group>
	<xs:group name="option">
		<xs:sequence>
			<xs:choice>
				<xs:element ref="option"/>
			</xs:choice>
		</xs:sequence>
	</xs:group>
	<xs:group name="var">
		<xs:sequence>
			<xs:choice>
				<xs:element ref="var"/>
			</xs:choice>
		</xs:sequence>
	</xs:group>
	<xs:group name="parmname">
		<xs:sequence>
			<xs:choice>
				<xs:element ref="parmname"/>
			</xs:choice>
		</xs:sequence>
	</xs:group>
	<xs:group name="synph">
		<xs:sequence>
			<xs:choice>
				<xs:element ref="synph"/>
			</xs:choice>
		</xs:sequence>
	</xs:group>
	<xs:group name="oper">
		<xs:sequence>
			<xs:choice>
				<xs:element ref="oper"/>
			</xs:choice>
		</xs:sequence>
	</xs:group>
	<xs:group name="delim">
		<xs:sequence>
			<xs:choice>
				<xs:element ref="delim"/>
			</xs:choice>
		</xs:sequence>
	</xs:group>
	<xs:group name="sep">
		<xs:sequence>
			<xs:choice>
				<xs:element ref="sep"/>
			</xs:choice>
		</xs:sequence>
	</xs:group>
	<xs:group name="apiname">
		<xs:sequence>
			<xs:choice>
				<xs:element ref="apiname"/>
			</xs:choice>
		</xs:sequence>
	</xs:group>
	<xs:group name="parml">
		<xs:sequence>
			<xs:choice>
				<xs:element ref="parml"/>
			</xs:choice>
		</xs:sequence>
	</xs:group>
	<xs:group name="plentry">
		<xs:sequence>
			<xs:choice>
				<xs:element ref="plentry"/>
			</xs:choice>
		</xs:sequence>
	</xs:group>
	<xs:group name="pt">
		<xs:sequence>
			<xs:choice>
				<xs:element ref="pt"/>
			</xs:choice>
		</xs:sequence>
	</xs:group>
	<xs:group name="pd">
		<xs:sequence>
			<xs:choice>
				<xs:element ref="pd"/>
			</xs:choice>
		</xs:sequence>
	</xs:group>
	<xs:group name="syntaxdiagram">
		<xs:sequence>
			<xs:choice>
				<xs:element ref="syntaxdiagram"/>
			</xs:choice>
		</xs:sequence>
	</xs:group>
	<xs:group name="synblk">
		<xs:sequence>
			<xs:choice>
				<xs:element ref="synblk"/>
			</xs:choice>
		</xs:sequence>
	</xs:group>
	<xs:group name="groupseq">
		<xs:sequence>
			<xs:choice>
				<xs:element ref="groupseq"/>
			</xs:choice>
		</xs:sequence>
	</xs:group>
	<xs:group name="groupchoice">
		<xs:sequence>
			<xs:choice>
				<xs:element ref="groupchoice"/>
			</xs:choice>
		</xs:sequence>
	</xs:group>
	<xs:group name="groupcomp">
		<xs:sequence>
			<xs:choice>
				<xs:element ref="groupcomp"/>
			</xs:choice>
		</xs:sequence>
	</xs:group>
	<xs:group name="fragment">
		<xs:sequence>
			<xs:choice>
				<xs:element ref="fragment"/>
			</xs:choice>
		</xs:sequence>
	</xs:group>
	<xs:group name="fragref">
		<xs:sequence>
			<xs:choice>
				<xs:element ref="fragref"/>
			</xs:choice>
		</xs:sequence>
	</xs:group>
	<xs:group name="synnote">
		<xs:sequence>
			<xs:choice>
				<xs:element ref="synnote"/>
			</xs:choice>
		</xs:sequence>
	</xs:group>
	<xs:group name="synnoteref">
		<xs:sequence>
			<xs:choice>
				<xs:element ref="synnoteref"/>
			</xs:choice>
		</xs:sequence>
	</xs:group>
	<xs:group name="repsep">
		<xs:sequence>
			<xs:choice>
				<xs:element ref="repsep"/>
			</xs:choice>
		</xs:sequence>
	</xs:group>
	<xs:group name="kwd">
		<xs:sequence>
			<xs:choice>
				<xs:element ref="kwd"/>
			</xs:choice>
		</xs:sequence>
	</xs:group>
	<xs:attributeGroup name="univ-atts-no-importance">
		<xs:attributeGroup ref="id-atts"/>
		<xs:attribute name="base" type="xs:string" form="unqualified"/>
		<xs:attributeGroup ref="base-attribute-extensions"/>
		<xs:attribute name="rev" type="xs:string" form="unqualified"/>
		<xs:attribute name="status" type="status-atts.class" form="unqualified"/>
		<xs:attributeGroup ref="localization-atts"/>
		<xs:attributeGroup ref="filter-atts"/>
	</xs:attributeGroup>
	<xs:attributeGroup name="univ-atts-importance-nodefault">
		<xs:attributeGroup ref="id-atts"/>
		<xs:attribute name="platform" type="xs:string" form="unqualified"/>
		<xs:attribute name="product" type="xs:string" form="unqualified"/>
		<xs:attribute name="audience" type="xs:string" form="unqualified"/>
		<xs:attribute name="otherprops" type="xs:string" form="unqualified"/>
		<xs:attribute name="rev" type="xs:string" form="unqualified"/>
		<xs:attribute name="importance" type="importance-att-nodefault.class" form="unqualified"/>
		<xs:attributeGroup ref="localization-atts"/>
	</xs:attributeGroup>
	<xs:simpleType name="importance-att-progdom.class">
		<xs:restriction base="importance-atts.class">
			<xs:enumeration value="optional"/>
			<xs:enumeration value="required"/>
			<xs:enumeration value="default"/>
			<xs:enumeration value="-dita-use-conref-target"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="importance-att-nodefault.class">
		<xs:restriction base="importance-atts.class">
			<xs:enumeration value="optional"/>
			<xs:enumeration value="required"/>
			<xs:enumeration value="-dita-use-conref-target"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:element name="codeph">
		<xs:annotation>
			<xs:documentation>
        The code phrase (&lt;<keyword>codeph</keyword>&gt;) element represents a snippet
        of code within the main flow of text. The code phrase may be displayed in
        a monospaced font for emphasis. This element is part of the DITA programming
        domain, a special set of DITA elements designed to document programming tasks,
        concepts and reference information.
      </xs:documentation>
		</xs:annotation>
		<xs:complexType mixed="true">
			<xs:complexContent>
				<xs:extension base="codeph.class">
					<xs:attribute ref="class" default="+ topic/ph pr-d/codeph "/>
				</xs:extension>
			</xs:complexContent>
		</xs:complexType>
	</xs:element>
	<xs:complexType name="codeph.class" mixed="true">
		<xs:sequence>
			<xs:group ref="codeph.content"/>
		</xs:sequence>
		<xs:attributeGroup ref="codeph.attributes"/>
	</xs:complexType>
	<xs:group name="codeph.content">
		<xs:sequence>
			<xs:choice minOccurs="0" maxOccurs="unbounded">
				<xs:group ref="basic.ph.notm" minOccurs="0"/>
				<xs:group ref="data.elements.incl" minOccurs="0"/>
				<xs:group ref="foreign.unknown.incl" minOccurs="0"/>
			</xs:choice>
		</xs:sequence>
	</xs:group>
	<xs:attributeGroup name="codeph.attributes">
		<xs:attribute name="outputclass" type="xs:string" form="unqualified"/>
		<xs:attributeGroup ref="global-atts"/>
		<xs:attributeGroup ref="univ-atts"/>
	</xs:attributeGroup>
	<xs:element name="codeblock">
		<xs:annotation>
			<xs:documentation>
        The &lt;<keyword>codeblock</keyword>&gt; element represents lines of
        program code. Like the <xref href="xref.xml">&lt;<keyword>pre</keyword>&gt;</xref> element,
        content of this element has preserved line endings and is output in a monospaced
        font. This element is part of the DITA programming domain, a special set of
        DITA elements designed to document programming tasks, concepts and reference
        information.
      </xs:documentation>
		</xs:annotation>
		<xs:complexType mixed="true">
			<xs:complexContent>
				<xs:extension base="codeblock.class">
					<xs:attribute ref="class" default="+ topic/pre pr-d/codeblock "/>
				</xs:extension>
			</xs:complexContent>
		</xs:complexType>
	</xs:element>
	<xs:complexType name="codeblock.class" mixed="true">
		<xs:sequence>
			<xs:group ref="codeblock.content"/>
		</xs:sequence>
		<xs:attributeGroup ref="codeblock.attributes"/>
	</xs:complexType>
	<xs:group name="codeblock.content">
		<xs:sequence>
			<xs:choice minOccurs="0" maxOccurs="unbounded">
				<xs:group ref="basic.ph.notm" minOccurs="0"/>
				<xs:group ref="coderef" minOccurs="0"/>
				<xs:group ref="txt.incl" minOccurs="0"/>
				<xs:group ref="data.elements.incl" minOccurs="0"/>
				<xs:group ref="foreign.unknown.incl" minOccurs="0"/>
			</xs:choice>
		</xs:sequence>
	</xs:group>
	<xs:attributeGroup name="codeblock.attributes">
		<xs:attribute name="outputclass" type="xs:string" form="unqualified"/>
		<xs:attribute name="spectitle" type="xs:string" form="unqualified"/>
		<xs:attributeGroup ref="display-atts"/>
		<xs:attributeGroup ref="univ-atts"/>
		<xs:attribute ref="xml:space" fixed="preserve"/>
		<xs:attributeGroup ref="global-atts"/>
	</xs:attributeGroup>
	<!-- DITA 1.2 feature 12060 -->
	<xs:element name="coderef">
		<xs:annotation>
			<xs:documentation>Use the cross-reference (&lt;<keyword>coderef</keyword>&gt;) element
        to pull in the targetted file into the containing codeblock element, massaging &lt; and > characters 
        as necessary to make it valid CDATA.
      </xs:documentation>
		</xs:annotation>
		<xs:complexType>
			<xs:complexContent>
				<xs:extension base="coderef.class">
					<xs:attribute ref="class" default="+ topic/xref  pr-d/coderef "/>
				</xs:extension>
			</xs:complexContent>
		</xs:complexType>
	</xs:element>
	<xs:complexType name="coderef.class">
		<xs:attributeGroup ref="coderef.attributes"/>
	</xs:complexType>
	<xs:attributeGroup name="coderef.attributes">
		<xs:attribute name="href" type="xs:string" form="unqualified"/>
		<xs:attribute name="keyref" type="xs:string" form="unqualified"/>
		<xs:attribute name="type" type="xs:string" form="unqualified"/>
		<xs:attribute name="format" type="xs:string" form="unqualified"/>
		<xs:attribute name="scope" type="scope-att.class" form="unqualified"/>
		<xs:attribute name="outputclass" type="xs:string" form="unqualified"/>
		<xs:attributeGroup ref="univ-atts"/>
		<xs:attributeGroup ref="global-atts"/>
	</xs:attributeGroup>
	<xs:element name="option">
		<xs:annotation>
			<xs:documentation>
        The &lt;<keyword>option</keyword>&gt; element describes an option
        that can be used to modify a command (or something else, like a configuration).
        This element is part of the DITA programming domain, a special set of DITA
        elements designed to document programming tasks, concepts and reference information.
      </xs:documentation>
		</xs:annotation>
		<xs:complexType mixed="true">
			<xs:complexContent>
				<xs:extension base="option.class">
					<xs:attribute ref="class" default="+ topic/keyword pr-d/option "/>
				</xs:extension>
			</xs:complexContent>
		</xs:complexType>
	</xs:element>
	<xs:complexType name="option.class" mixed="true">
		<xs:sequence>
			<xs:group ref="option.content"/>
		</xs:sequence>
		<xs:attributeGroup ref="option.attributes"/>
	</xs:complexType>
	<xs:group name="option.content">
		<xs:sequence>
			<xs:choice minOccurs="0" maxOccurs="unbounded">
				<xs:group ref="text" minOccurs="0"/>
			</xs:choice>
		</xs:sequence>
	</xs:group>
	<xs:attributeGroup name="option.attributes">
		<xs:attribute name="keyref" type="xs:string" form="unqualified"/>
		<xs:attribute name="outputclass" type="xs:string" form="unqualified"/>
		<xs:attributeGroup ref="global-atts"/>
		<xs:attributeGroup ref="univ-atts"/>
	</xs:attributeGroup>
	<xs:element name="var">
		<xs:annotation>
			<xs:documentation>
        Within a syntax definition, the &lt;<keyword>var</keyword>&gt; element
        defines a variable for which the user must supply content, such as their user
        name or password. It is represented in output in an italic font.
        This element is part of the DITA programming domain, a special set of DITA
        elements designed to document programming tasks, concepts and reference information.
      </xs:documentation>
		</xs:annotation>
		<xs:complexType mixed="true">
			<xs:complexContent>
				<xs:extension base="var.class">
					<xs:attribute ref="class" default="+ topic/ph pr-d/var "/>
				</xs:extension>
			</xs:complexContent>
		</xs:complexType>
	</xs:element>
	<xs:complexType name="var.class" mixed="true">
		<xs:sequence>
			<xs:group ref="var.content"/>
		</xs:sequence>
		<xs:attributeGroup ref="var.attributes"/>
	</xs:complexType>
	<xs:group name="var.content">
		<xs:sequence>
			<xs:choice minOccurs="0" maxOccurs="unbounded">
				<xs:group ref="words.cnt" minOccurs="0"/>
			</xs:choice>
		</xs:sequence>
	</xs:group>
	<xs:attributeGroup name="var.attributes">
		<xs:attribute name="outputclass" type="xs:string" form="unqualified"/>
		<xs:attributeGroup ref="global-atts"/>
		<xs:attributeGroup ref="univ-atts-no-importance"/>
		<xs:attribute name="importance" type="importance-att-nodefault.class" form="unqualified"/>
	</xs:attributeGroup>
	<xs:element name="parmname">
		<xs:annotation>
			<xs:documentation>
        When referencing the name of an application programming interface
        parameter within the text flow of your topic, use the parameter
        name (&lt;<keyword>parmname</keyword>&gt;) element to markup the parameter. This element
        is part of the DITA programming domain, a special set of DITA elements designed
        to document programming tasks, concepts and reference information.
      </xs:documentation>
		</xs:annotation>
		<xs:complexType mixed="true">
			<xs:complexContent>
				<xs:extension base="parmname.class">
					<xs:attribute ref="class" default="+ topic/keyword  pr-d/parmname "/>
				</xs:extension>
			</xs:complexContent>
		</xs:complexType>
	</xs:element>
	<xs:complexType name="parmname.class" mixed="true">
		<xs:sequence>
			<xs:group ref="parmname.content"/>
		</xs:sequence>
		<xs:attributeGroup ref="parmname.attributes"/>
	</xs:complexType>
	<xs:group name="parmname.content">
		<xs:sequence>
			<xs:choice minOccurs="0" maxOccurs="unbounded">
				<xs:group ref="text" minOccurs="0"/>
			</xs:choice>
		</xs:sequence>
	</xs:group>
	<xs:attributeGroup name="parmname.attributes">
		<xs:attribute name="keyref" type="xs:string" form="unqualified"/>
		<xs:attribute name="outputclass" type="xs:string" form="unqualified"/>
		<xs:attributeGroup ref="global-atts"/>
		<xs:attributeGroup ref="univ-atts"/>
	</xs:attributeGroup>
	<xs:element name="synph">
		<xs:annotation>
			<xs:documentation>
        The syntax phrase (&lt;synph&gt;) element is a container for syntax
        definition elements. It is used when a complete syntax definition is not needed,
        but some of the syntax elements, such as kwd, oper, delim, are used within
        the text flow of the topic content. This element is part of the DITA programming
        domain, a special set of DITA elements designed to document programming tasks,
        concepts and reference information.
      </xs:documentation>
		</xs:annotation>
		<xs:complexType mixed="true">
			<xs:complexContent>
				<xs:extension base="synph.class">
					<xs:attribute ref="class" default="+ topic/ph pr-d/synph "/>
				</xs:extension>
			</xs:complexContent>
		</xs:complexType>
	</xs:element>
	<xs:complexType name="synph.class" mixed="true">
		<xs:sequence>
			<xs:group ref="synph.content"/>
		</xs:sequence>
		<xs:attributeGroup ref="synph.attributes"/>
	</xs:complexType>
	<xs:group name="synph.content">
		<xs:sequence>
			<xs:choice minOccurs="0" maxOccurs="unbounded">
				<!-- ph -->
				<xs:group ref="codeph" minOccurs="0"/>
				<xs:group ref="var" minOccurs="0"/>
				<xs:group ref="oper" minOccurs="0"/>
				<xs:group ref="delim" minOccurs="0"/>
				<xs:group ref="sep" minOccurs="0"/>
				<xs:group ref="synph" minOccurs="0"/>
				<!-- keyword -->
				<xs:group ref="option" minOccurs="0"/>
				<xs:group ref="parmname" minOccurs="0"/>
				<xs:group ref="kwd" minOccurs="0"/>
				<xs:group ref="text" minOccurs="0"/>
			</xs:choice>
		</xs:sequence>
	</xs:group>
	<xs:attributeGroup name="synph.attributes">
		<xs:attribute name="outputclass" type="xs:string" form="unqualified"/>
		<xs:attributeGroup ref="global-atts"/>
		<xs:attributeGroup ref="univ-atts"/>
	</xs:attributeGroup>
	<xs:element name="oper">
		<xs:annotation>
			<xs:documentation>
        The operator (&lt;<keyword>oper</keyword>&gt;) element defines an operator
        within a syntax definition. Typical operators are equals (=), plus (+) or
        multiply (*). This element is part of the DITA programming domain, a special
        set of DITA elements designed to document programming tasks, concepts and
        reference information.
      </xs:documentation>
		</xs:annotation>
		<xs:complexType mixed="true">
			<xs:complexContent>
				<xs:extension base="oper.class">
					<xs:attribute ref="class" default="+ topic/ph pr-d/oper "/>
				</xs:extension>
			</xs:complexContent>
		</xs:complexType>
	</xs:element>
	<xs:complexType name="oper.class" mixed="true">
		<xs:sequence>
			<xs:group ref="oper.content"/>
		</xs:sequence>
		<xs:attributeGroup ref="oper.attributes"/>
	</xs:complexType>
	<xs:group name="oper.content">
		<xs:sequence>
			<xs:choice minOccurs="0" maxOccurs="unbounded">
				<xs:group ref="words.cnt" minOccurs="0"/>
			</xs:choice>
		</xs:sequence>
	</xs:group>
	<xs:attributeGroup name="oper.attributes">
		<xs:attribute name="outputclass" type="xs:string" form="unqualified"/>
		<xs:attributeGroup ref="global-atts"/>
		<xs:attributeGroup ref="univ-atts-no-importance"/>
		<xs:attribute name="importance" type="importance-att-nodefault.class" form="unqualified"/>
	</xs:attributeGroup>
	<xs:element name="delim">
		<xs:annotation>
			<xs:documentation>
        Within a syntax definition, the delimiter (&lt;delim&gt;) element defines
        a character marking the beginning or end of a section or part of the complete
        syntax. Typical delimiter characters are the parenthesis, comma, tab, vertical
        bar or other special characters. This element is part of the DITA programming
        domain, a special set of DITA elements designed to document programming tasks,
        concepts and reference information.
      </xs:documentation>
		</xs:annotation>
		<xs:complexType mixed="true">
			<xs:complexContent>
				<xs:extension base="delim.class">
					<xs:attribute ref="class" default="+ topic/ph pr-d/delim "/>
				</xs:extension>
			</xs:complexContent>
		</xs:complexType>
	</xs:element>
	<xs:complexType name="delim.class" mixed="true">
		<xs:sequence>
			<xs:group ref="delim.content"/>
		</xs:sequence>
		<xs:attributeGroup ref="delim.attributes"/>
	</xs:complexType>
	<xs:group name="delim.content">
		<xs:sequence>
			<xs:choice minOccurs="0" maxOccurs="unbounded">
				<xs:group ref="words.cnt" minOccurs="0"/>
			</xs:choice>
		</xs:sequence>
	</xs:group>
	<xs:attributeGroup name="delim.attributes">
		<xs:attribute name="outputclass" type="xs:string" form="unqualified"/>
		<xs:attributeGroup ref="global-atts"/>
		<xs:attributeGroup ref="univ-atts-no-importance"/>
		<xs:attribute name="importance" type="importance-att-nodefault.class" form="unqualified"/>
	</xs:attributeGroup>
	<xs:element name="sep">
		<xs:annotation>
			<xs:documentation>
        The separator (&lt;sep&gt;) element defines a separator character that
        is inline with the content of a syntax definition. The separator occurs between
        keywords, operators or groups in a syntax definition. This element is part
        of the DITA programming domain, a special set of DITA elements designed to
        document programming tasks, concepts and reference information.
      </xs:documentation>
		</xs:annotation>
		<xs:complexType mixed="true">
			<xs:complexContent>
				<xs:extension base="sep.class">
					<xs:attribute ref="class" default="+ topic/ph pr-d/sep "/>
				</xs:extension>
			</xs:complexContent>
		</xs:complexType>
	</xs:element>
	<xs:complexType name="sep.class" mixed="true">
		<xs:sequence>
			<xs:group ref="sep.content"/>
		</xs:sequence>
		<xs:attributeGroup ref="sep.attributes"/>
	</xs:complexType>
	<xs:group name="sep.content">
		<xs:sequence>
			<xs:choice minOccurs="0" maxOccurs="unbounded">
				<xs:group ref="words.cnt" minOccurs="0"/>
			</xs:choice>
		</xs:sequence>
	</xs:group>
	<xs:attributeGroup name="sep.attributes">
		<xs:attribute name="outputclass" type="xs:string" form="unqualified"/>
		<xs:attributeGroup ref="global-atts"/>
		<xs:attributeGroup ref="univ-atts-no-importance"/>
		<xs:attribute name="importance" type="importance-att-nodefault.class" form="unqualified"/>
	</xs:attributeGroup>
	<xs:element name="apiname">
		<xs:annotation>
			<xs:documentation>
        The &lt;<keyword>apiname</keyword>&gt; element provides the name of
        an application programming interface (API) such as a Java class name or method
        name. This element is part of the DITA programming domain, a special set of
        DITA elements designed to document programming tasks, concepts and reference
        information.
      </xs:documentation>
		</xs:annotation>
		<xs:complexType mixed="true">
			<xs:complexContent>
				<xs:extension base="apiname.class">
					<xs:attribute ref="class" default="+ topic/keyword pr-d/apiname "/>
				</xs:extension>
			</xs:complexContent>
		</xs:complexType>
	</xs:element>
	<xs:complexType name="apiname.class" mixed="true">
		<xs:sequence>
			<xs:group ref="apiname.content"/>
		</xs:sequence>
		<xs:attributeGroup ref="apiname.attributes"/>
	</xs:complexType>
	<xs:group name="apiname.content">
		<xs:sequence>
			<xs:choice minOccurs="0" maxOccurs="unbounded">
				<xs:group ref="text" minOccurs="0"/>
			</xs:choice>
		</xs:sequence>
	</xs:group>
	<xs:attributeGroup name="apiname.attributes">
		<xs:attribute name="keyref" type="xs:string" form="unqualified"/>
		<xs:attribute name="outputclass" type="xs:string" form="unqualified"/>
		<xs:attributeGroup ref="global-atts"/>
		<xs:attributeGroup ref="univ-atts"/>
	</xs:attributeGroup>
	<xs:element name="parml">
		<xs:annotation>
			<xs:documentation>
          The parameter list (&lt;<keyword>parml</keyword>&gt;) element contains a list of
          terms and definitions that describes the parameters in an application programming
          interface. This is a special kind of definition list that is
          designed for computer parameters. This element is part of the DITA programming
          domain, a special set of DITA elements designed to document programming tasks,
          concepts and reference information.
        </xs:documentation>
		</xs:annotation>
		<xs:complexType>
			<xs:complexContent>
				<xs:extension base="parml.class">
					<xs:attribute ref="class" default="+ topic/dl pr-d/parml "/>
				</xs:extension>
			</xs:complexContent>
		</xs:complexType>
	</xs:element>
	<xs:complexType name="parml.class">
		<xs:sequence>
			<xs:group ref="parml.content"/>
		</xs:sequence>
		<xs:attributeGroup ref="parml.attributes"/>
	</xs:complexType>
	<xs:group name="parml.content">
		<xs:sequence>
			<xs:choice maxOccurs="unbounded">
				<xs:group ref="plentry"/>
			</xs:choice>
		</xs:sequence>
	</xs:group>
	<xs:attributeGroup name="parml.attributes">
		<xs:attribute name="spectitle" type="xs:string" form="unqualified"/>
		<xs:attribute name="outputclass" type="xs:string" form="unqualified"/>
		<xs:attributeGroup ref="global-atts"/>
		<xs:attributeGroup ref="univ-atts"/>
		<xs:attribute name="compact" type="yesno-att.class" form="unqualified"/>
	</xs:attributeGroup>
	<xs:element name="plentry">
		<xs:annotation>
			<xs:documentation>
        The parameter list entry element (&lt;plentry&gt;) contains one or more parameter terms and definitions (pd and pt).
        This element is part of the DITA programming domain, a special set of DITA elements designed to document
        programming tasks, concepts and reference information.
      </xs:documentation>
		</xs:annotation>
		<xs:complexType>
			<xs:complexContent>
				<xs:extension base="plentry.class">
					<xs:attribute ref="class" default="+ topic/dlentry pr-d/plentry "/>
				</xs:extension>
			</xs:complexContent>
		</xs:complexType>
	</xs:element>
	<xs:complexType name="plentry.class">
		<xs:sequence>
			<xs:group ref="plentry.content"/>
		</xs:sequence>
		<xs:attributeGroup ref="plentry.attributes"/>
	</xs:complexType>
	<xs:group name="plentry.content">
		<xs:sequence>
			<xs:sequence>
				<xs:group ref="pt" maxOccurs="unbounded"/>
				<xs:group ref="pd" maxOccurs="unbounded"/>
			</xs:sequence>
		</xs:sequence>
	</xs:group>
	<xs:attributeGroup name="plentry.attributes">
		<xs:attribute name="outputclass" type="xs:string" form="unqualified"/>
		<xs:attributeGroup ref="global-atts"/>
		<xs:attributeGroup ref="univ-atts"/>
	</xs:attributeGroup>
	<xs:element name="pt">
		<xs:annotation>
			<xs:documentation>
      A parameter term, within a parameter list entry, is enclosed by the &lt;<keyword>pt</keyword>&gt; element.
      This element is part of the DITA programming domain, a special set of DITA elements designed to document
      programming tasks, concepts and reference information.
    </xs:documentation>
		</xs:annotation>
		<xs:complexType mixed="true">
			<xs:complexContent>
				<xs:extension base="pt.class">
					<xs:attribute ref="class" default="+ topic/dt pr-d/pt "/>
				</xs:extension>
			</xs:complexContent>
		</xs:complexType>
	</xs:element>
	<xs:complexType name="pt.class" mixed="true">
		<xs:sequence>
			<xs:group ref="pt.content"/>
		</xs:sequence>
		<xs:attributeGroup ref="pt.attributes"/>
	</xs:complexType>
	<xs:group name="pt.content">
		<xs:sequence>
			<xs:choice minOccurs="0" maxOccurs="unbounded">
				<xs:group ref="term.cnt"/>
			</xs:choice>
		</xs:sequence>
	</xs:group>
	<xs:attributeGroup name="pt.attributes">
		<xs:attribute name="keyref" type="xs:string" form="unqualified"/>
		<xs:attribute name="outputclass" type="xs:string" form="unqualified"/>
		<xs:attributeGroup ref="global-atts"/>
		<xs:attributeGroup ref="univ-atts"/>
	</xs:attributeGroup>
	<xs:element name="pd">
		<xs:annotation>
			<xs:documentation>
        A parameter definition, within a parameter list entry, is enclosed by the &lt;<keyword>pd</keyword>&gt; element.
        This element is part of the DITA programming domain, a special set of DITA elements designed to document
        programming tasks, concepts and reference information.
      </xs:documentation>
		</xs:annotation>
		<xs:complexType mixed="true">
			<xs:complexContent>
				<xs:extension base="pd.class">
					<xs:attribute ref="class" default="+ topic/dd pr-d/pd "/>
				</xs:extension>
			</xs:complexContent>
		</xs:complexType>
	</xs:element>
	<xs:complexType name="pd.class" mixed="true">
		<xs:sequence>
			<xs:group ref="pd.content"/>
		</xs:sequence>
		<xs:attributeGroup ref="pd.attributes"/>
	</xs:complexType>
	<xs:group name="pd.content">
		<xs:sequence>
			<xs:choice minOccurs="0" maxOccurs="unbounded">
				<xs:group ref="defn.cnt" minOccurs="0"/>
			</xs:choice>
		</xs:sequence>
	</xs:group>
	<xs:attributeGroup name="pd.attributes">
		<xs:attribute name="outputclass" type="xs:string" form="unqualified"/>
		<xs:attributeGroup ref="global-atts"/>
		<xs:attributeGroup ref="univ-atts"/>
	</xs:attributeGroup>
	<!-- Base form: Syntax Diagram -->
	<xs:element name="syntaxdiagram">
		<xs:annotation>
			<xs:documentation>
        The syntax diagram (&lt;<keyword>syntaxdiagram</keyword>&gt;) element
        is the main container for all the syntax elements that make up a syntax definition.
        The syntax diagram represents the syntax of a statement from a computer language,
        or a command, function call or programming language statement. Traditionally,
        the syntax diagram is formatted with <q>railroad tracks</q> that
        connect the units of the syntax together, but this presentation may differ
        depending on the output media. The syntax diagram element is part of the DITA
        programming domain, a special set of DITA elements designed to document programming
        tasks, concepts and reference information.
      </xs:documentation>
		</xs:annotation>
		<xs:complexType>
			<xs:complexContent>
				<xs:extension base="syntaxdiagram.class">
					<xs:attribute ref="class" default="+ topic/fig pr-d/syntaxdiagram "/>
				</xs:extension>
			</xs:complexContent>
		</xs:complexType>
	</xs:element>
	<xs:complexType name="syntaxdiagram.class">
		<xs:sequence>
			<xs:group ref="syntaxdiagram.content"/>
		</xs:sequence>
		<xs:attributeGroup ref="syntaxdiagram.attributes"/>
	</xs:complexType>
	<xs:group name="syntaxdiagram.content">
		<xs:sequence>
			<xs:sequence>
				<xs:group ref="title" minOccurs="0" maxOccurs="1"/>
				<xs:choice minOccurs="0" maxOccurs="unbounded">
					<xs:group ref="syntaxdiagram.grp" minOccurs="0"/>
					<xs:group ref="fragment" minOccurs="0"/>
					<xs:group ref="synblk" minOccurs="0"/>
				</xs:choice>
			</xs:sequence>
		</xs:sequence>
	</xs:group>
	<xs:attributeGroup name="syntaxdiagram.attributes">
		<xs:attribute name="outputclass" type="xs:string" form="unqualified"/>
		<xs:attributeGroup ref="global-atts"/>
		<xs:attributeGroup ref="univ-atts"/>
		<xs:attributeGroup ref="display-atts"/>
	</xs:attributeGroup>
	<xs:group name="syntaxdiagram.grp">
		<xs:sequence>
			<xs:choice>
				<xs:group ref="groupseq"/>
				<xs:group ref="groupchoice"/>
				<xs:group ref="groupcomp"/>
				<xs:group ref="fragref"/>
				<xs:group ref="synnote"/>
				<xs:group ref="synnoteref"/>
			</xs:choice>
		</xs:sequence>
	</xs:group>
	<xs:group name="syntaxdiagramprog.grp">
		<xs:sequence>
			<xs:choice>
				<xs:group ref="kwd"/>
				<xs:group ref="var"/>
				<xs:group ref="delim"/>
				<xs:group ref="oper"/>
				<xs:group ref="sep"/>
			</xs:choice>
		</xs:sequence>
	</xs:group>
	<xs:element name="synblk">
		<xs:annotation>
			<xs:documentation>
        The syntax block (&lt;<keyword>synblk</keyword>&gt;) element
        organizes small pieces of a syntax definition into a larger piece. The syntax
        block element is part of the DITA programming domain, a special set of DITA
        elements designed to document programming tasks, concepts and reference information.
      </xs:documentation>
		</xs:annotation>
		<xs:complexType>
			<xs:complexContent>
				<xs:extension base="synblk.class">
					<xs:attribute ref="class" default="+ topic/figgroup pr-d/synblk "/>
				</xs:extension>
			</xs:complexContent>
		</xs:complexType>
	</xs:element>
	<xs:complexType name="synblk.class">
		<xs:sequence>
			<xs:group ref="synblk.content"/>
		</xs:sequence>
		<xs:attributeGroup ref="synblk.attributes"/>
	</xs:complexType>
	<xs:group name="synblk.content">
		<xs:sequence>
			<xs:sequence>
				<xs:group ref="title" minOccurs="0"/>
				<xs:choice minOccurs="0" maxOccurs="unbounded">
					<xs:group ref="syntaxdiagram.grp" minOccurs="0"/>
					<xs:group ref="fragment" minOccurs="0"/>
				</xs:choice>
			</xs:sequence>
		</xs:sequence>
	</xs:group>
	<xs:attributeGroup name="synblk.attributes">
		<xs:attribute name="outputclass" type="xs:string" form="unqualified"/>
		<xs:attributeGroup ref="global-atts"/>
		<xs:attributeGroup ref="univ-atts"/>
	</xs:attributeGroup>
	<xs:element name="groupseq">
		<xs:annotation>
			<xs:documentation>
        The &lt;<keyword>groupseq</keyword>&gt; element is part of the subset
        of elements that define syntax diagrams in DITA. A group is a logical set
        of pieces of syntax that go together. Within the syntax definition, groups
        of keywords, delimiters and other syntax units act as a combined unit, and
        they occur in a specific sequence, as delimited by the &lt;<keyword>groupseq</keyword>&gt;
        element. This element is part of the DITA programming domain, a special set
        of DITA elements designed to document programming tasks, concepts and reference
        information.
      </xs:documentation>
		</xs:annotation>
		<xs:complexType>
			<xs:complexContent>
				<xs:extension base="groupseq.class">
					<xs:attribute ref="class" default="+ topic/figgroup pr-d/groupseq "/>
				</xs:extension>
			</xs:complexContent>
		</xs:complexType>
	</xs:element>
	<xs:complexType name="groupseq.class">
		<xs:sequence>
			<xs:group ref="groupseq.content"/>
		</xs:sequence>
		<xs:attributeGroup ref="groupseq.attributes"/>
	</xs:complexType>
	<xs:group name="groupseq.content">
		<xs:sequence>
			<xs:sequence>
				<xs:group ref="title" minOccurs="0"/>
				<xs:group ref="repsep" minOccurs="0"/>
				<xs:choice minOccurs="0" maxOccurs="unbounded">
					<xs:group ref="syntaxdiagram.grp"/>
					<xs:group ref="syntaxdiagramprog.grp"/>
				</xs:choice>
			</xs:sequence>
		</xs:sequence>
	</xs:group>
	<xs:attributeGroup name="groupseq.attributes">
		<xs:attribute name="outputclass" type="xs:string" form="unqualified"/>
		<xs:attributeGroup ref="global-atts"/>
		<xs:attributeGroup ref="univ-atts-no-importance"/>
		<xs:attribute name="importance" type="importance-att-progdom.class" form="unqualified"/>
	</xs:attributeGroup>
	<xs:element name="groupchoice">
		<xs:annotation>
			<xs:documentation>
        The &lt;<keyword>groupchoice</keyword>&gt; element is part
        of the subset of elements that define syntax diagrams in DITA. A group is
        a logical set of pieces of syntax that go together. A group choice specifies
        that the user must make a choice about which part of the syntax to use. Groups
        are often nested. This element is part of the DITA programming domain, a special
        set of DITA elements designed to document programming tasks, concepts and
        reference information.
      </xs:documentation>
		</xs:annotation>
		<xs:complexType>
			<xs:complexContent>
				<xs:extension base="groupchoice.class">
					<xs:attribute ref="class" default="+ topic/figgroup pr-d/groupchoice "/>
				</xs:extension>
			</xs:complexContent>
		</xs:complexType>
	</xs:element>
	<xs:complexType name="groupchoice.class">
		<xs:sequence>
			<xs:group ref="groupchoice.content"/>
		</xs:sequence>
		<xs:attributeGroup ref="groupchoice.attributes"/>
	</xs:complexType>
	<xs:group name="groupchoice.content">
		<xs:sequence>
			<xs:sequence>
				<xs:group ref="title" minOccurs="0"/>
				<xs:group ref="repsep" minOccurs="0"/>
				<xs:choice minOccurs="0" maxOccurs="unbounded">
					<xs:group ref="syntaxdiagram.grp"/>
					<xs:group ref="syntaxdiagramprog.grp"/>
				</xs:choice>
			</xs:sequence>
		</xs:sequence>
	</xs:group>
	<xs:attributeGroup name="groupchoice.attributes">
		<xs:attribute name="outputclass" type="xs:string" form="unqualified"/>
		<xs:attributeGroup ref="global-atts"/>
		<xs:attributeGroup ref="univ-atts-no-importance"/>
		<xs:attribute name="importance" type="importance-att-progdom.class" form="unqualified"/>
	</xs:attributeGroup>
	<xs:element name="groupcomp">
		<xs:annotation>
			<xs:documentation>
        The &lt;<keyword>groupcomp</keyword>&gt; element is part
        of the subset of elements that define syntax diagrams in DITA. A group is
        a logical set of pieces of syntax that go together. The group composite means
        that the items that make up the syntax diagram will be formatted close together
        rather than being separated by a horizontal or vertical line, which is the
        usual formatting method. This element is part of the DITA programming domain,
        a special set of DITA elements designed to document programming tasks, concepts
        and reference information.
      </xs:documentation>
		</xs:annotation>
		<xs:complexType>
			<xs:complexContent>
				<xs:extension base="groupcomp.class">
					<xs:attribute ref="class" default="+ topic/figgroup pr-d/groupcomp "/>
				</xs:extension>
			</xs:complexContent>
		</xs:complexType>
	</xs:element>
	<xs:complexType name="groupcomp.class">
		<xs:sequence>
			<xs:group ref="groupcomp.content"/>
		</xs:sequence>
		<xs:attributeGroup ref="groupcomp.attributes"/>
	</xs:complexType>
	<xs:group name="groupcomp.content">
		<xs:sequence>
			<xs:sequence>
				<xs:group ref="title" minOccurs="0"/>
				<xs:group ref="repsep" minOccurs="0"/>
				<xs:choice minOccurs="0" maxOccurs="unbounded">
					<xs:group ref="syntaxdiagram.grp"/>
					<xs:group ref="syntaxdiagramprog.grp"/>
				</xs:choice>
			</xs:sequence>
		</xs:sequence>
	</xs:group>
	<xs:attributeGroup name="groupcomp.attributes">
		<xs:attribute name="outputclass" type="xs:string" form="unqualified"/>
		<xs:attributeGroup ref="global-atts"/>
		<xs:attributeGroup ref="univ-atts-no-importance"/>
		<xs:attribute name="importance" type="importance-att-progdom.class" form="unqualified"/>
	</xs:attributeGroup>
	<xs:element name="fragment">
		<xs:annotation>
			<xs:documentation>
        Within a syntax definition, a &lt;<keyword>fragment</keyword>&gt; is
        a labeled subpart of the syntax. The &lt;<keyword>fragment</keyword>&gt; element
        allows breaking out logical chunks of a large syntax diagram
        into named fragments. This element is part of the DITA programming domain,
        a special set of DITA elements designed to document programming tasks, concepts
        and reference information.
      </xs:documentation>
		</xs:annotation>
		<xs:complexType>
			<xs:complexContent>
				<xs:extension base="fragment.class">
					<xs:attribute ref="class" default="+ topic/figgroup pr-d/fragment "/>
				</xs:extension>
			</xs:complexContent>
		</xs:complexType>
	</xs:element>
	<xs:complexType name="fragment.class">
		<xs:sequence>
			<xs:group ref="fragment.content"/>
		</xs:sequence>
		<xs:attributeGroup ref="fragment.attributes"/>
	</xs:complexType>
	<xs:group name="fragment.content">
		<xs:sequence>
			<xs:sequence>
				<xs:group ref="title" minOccurs="0"/>
				<xs:choice minOccurs="0" maxOccurs="unbounded">
					<xs:group ref="syntaxdiagram.grp"/>
				</xs:choice>
			</xs:sequence>
		</xs:sequence>
	</xs:group>
	<xs:attributeGroup name="fragment.attributes">
		<xs:attribute name="outputclass" type="xs:string" form="unqualified"/>
		<xs:attributeGroup ref="global-atts"/>
		<xs:attributeGroup ref="univ-atts"/>
	</xs:attributeGroup>
	<xs:element name="fragref">
		<xs:annotation>
			<xs:documentation>
        The fragment reference (&lt;<keyword>fragref</keyword>&gt;) element provides a
        logical reference to a syntax definition fragment so that you can reference
        a syntax fragment multiple times. This element is part of the DITA programming
        domain, a special set of DITA elements designed to document programming tasks,
        concepts and reference information.
      </xs:documentation>
		</xs:annotation>
		<xs:complexType mixed="true">
			<xs:complexContent>
				<xs:extension base="fragref.class">
					<xs:attribute ref="class" default="+ topic/xref pr-d/fragref "/>
				</xs:extension>
			</xs:complexContent>
		</xs:complexType>
	</xs:element>
	<xs:complexType name="fragref.class" mixed="true">
		<xs:sequence>
			<xs:group ref="fragref.content"/>
		</xs:sequence>
		<xs:attributeGroup ref="fragref.attributes"/>
	</xs:complexType>
	<xs:group name="fragref.content">
		<xs:sequence>
			<xs:choice minOccurs="0" maxOccurs="unbounded">
				<xs:group ref="xrefph.cnt" minOccurs="0"/>
			</xs:choice>
		</xs:sequence>
	</xs:group>
	<xs:attributeGroup name="fragref.attributes">
		<xs:attribute name="href" type="xs:string" form="unqualified"/>
		<xs:attribute name="outputclass" type="xs:string" form="unqualified"/>
		<xs:attributeGroup ref="global-atts"/>
		<xs:attributeGroup ref="univ-atts-no-importance"/>
		<xs:attribute name="importance" type="importance-att-nodefault.class" form="unqualified"/>
	</xs:attributeGroup>
	<xs:element name="synnote">
		<xs:annotation>
			<xs:documentation>
        The syntax note (&lt;<keyword>synnote</keyword>&gt;) element
        contains a note (similar to a footnote) within a syntax definition group or
        fragment. The syntax note explains aspects of the syntax that cannot be expressed
        in the markup itself. The note will appear at the bottom of the syntax diagram
        instead of at the bottom of the page. The syntax block element is part of
        the DITA programming domain, a special set of DITA elements designed to document
        programming tasks, concepts and reference information.
      </xs:documentation>
		</xs:annotation>
		<xs:complexType mixed="true">
			<xs:complexContent>
				<xs:extension base="synnote.class">
					<xs:attribute ref="class" default="+ topic/fn pr-d/synnote "/>
				</xs:extension>
			</xs:complexContent>
		</xs:complexType>
	</xs:element>
	<xs:complexType name="synnote.class" mixed="true">
		<xs:sequence>
			<xs:group ref="synnote.content"/>
		</xs:sequence>
		<xs:attributeGroup ref="synnote.attributes"/>
	</xs:complexType>
	<xs:group name="synnote.content">
		<xs:sequence>
			<xs:choice minOccurs="0" maxOccurs="unbounded">
				<xs:group ref="basic.ph" minOccurs="0"/>
			</xs:choice>
		</xs:sequence>
	</xs:group>
	<xs:attributeGroup name="synnote.attributes">
		<xs:attribute name="callout" type="xs:string" form="unqualified"/>
		<xs:attribute name="outputclass" type="xs:string" form="unqualified"/>
		<xs:attributeGroup ref="global-atts"/>
		<xs:attributeGroup ref="univ-atts"/>
	</xs:attributeGroup>
	<xs:element name="synnoteref">
		<xs:annotation>
			<xs:documentation>
        The syntax note (&lt;<keyword>synnoteref</keyword>&gt;) reference element references
        a syntax note element (&lt;<keyword>synnote</keyword>&gt;) that has already been defined
        elsewhere in the topic. The same notation can be used in more than one syntax
        definition. The syntax note reference element is part of the DITA programming
        domain, a special set of DITA elements designed to document programming tasks,
        concepts and reference information.
      </xs:documentation>
		</xs:annotation>
		<xs:complexType>
			<xs:complexContent>
				<xs:extension base="synnoteref.class">
					<xs:attribute ref="class" default="+ topic/xref pr-d/synnoteref "/>
				</xs:extension>
			</xs:complexContent>
		</xs:complexType>
	</xs:element>
	<xs:complexType name="synnoteref.class">
		<xs:attributeGroup ref="synnoteref.attributes"/>
	</xs:complexType>
	<xs:attributeGroup name="synnoteref.attributes">
		<xs:attribute name="href" type="xs:string" form="unqualified"/>
		<xs:attribute name="outputclass" type="xs:string" form="unqualified"/>
		<xs:attributeGroup ref="global-atts"/>
		<xs:attributeGroup ref="univ-atts"/>
	</xs:attributeGroup>
	<xs:element name="repsep">
		<xs:annotation>
			<xs:documentation>
        The repeat separator (&lt;<keyword>repsep</keyword>&gt;) element defines
        a group of syntax elements that can (or should) be repeated. If the &lt;<keyword>repsep</keyword>&gt;
        element contains a separator character, such as a plus (+), this
        indicates that the character must be used between repetitions of the syntax
        elements. This element is part of the DITA programming domain, a special set
        of DITA elements designed to document programming tasks, concepts and reference
        information.
       </xs:documentation>
		</xs:annotation>
		<xs:complexType mixed="true">
			<xs:complexContent>
				<xs:extension base="repsep.class">
					<xs:attribute ref="class" default="+ topic/ph pr-d/repsep "/>
				</xs:extension>
			</xs:complexContent>
		</xs:complexType>
	</xs:element>
	<xs:complexType name="repsep.class" mixed="true">
		<xs:sequence>
			<xs:group ref="repsep.content"/>
		</xs:sequence>
		<xs:attributeGroup ref="repsep.attributes"/>
	</xs:complexType>
	<xs:group name="repsep.content">
		<xs:sequence>
			<xs:choice minOccurs="0" maxOccurs="unbounded">
				<xs:group ref="words.cnt" minOccurs="0"/>
			</xs:choice>
		</xs:sequence>
	</xs:group>
	<xs:attributeGroup name="repsep.attributes">
		<xs:attribute name="outputclass" type="xs:string" form="unqualified"/>
		<xs:attributeGroup ref="global-atts"/>
		<xs:attributeGroup ref="univ-atts-no-importance"/>
		<xs:attribute name="importance" type="importance-att-nodefault.class" form="unqualified"/>
	</xs:attributeGroup>
	<xs:element name="kwd">
		<xs:annotation>
			<xs:documentation>
        The &lt;<keyword>kwd</keyword>&gt; element defines a keyword in a syntax
        definition. A keyword must be typed or output, either by the user or application,
        exactly as specified in the syntax definition. This element is
        part of the DITA programming domain, a special set of DITA elements designed
        to document programming tasks, concepts and reference information.
      </xs:documentation>
		</xs:annotation>
		<xs:complexType mixed="true">
			<xs:complexContent>
				<xs:extension base="kwd.class">
					<xs:attribute ref="class" default="+ topic/keyword pr-d/kwd "/>
				</xs:extension>
			</xs:complexContent>
		</xs:complexType>
	</xs:element>
	<xs:complexType name="kwd.class" mixed="true">
		<xs:sequence>
			<xs:group ref="kwd.content"/>
		</xs:sequence>
		<xs:attributeGroup ref="kwd.attributes"/>
	</xs:complexType>
	<xs:group name="kwd.content">
		<xs:sequence>
			<xs:choice minOccurs="0" maxOccurs="unbounded">
				<xs:group ref="text" minOccurs="0"/>
			</xs:choice>
		</xs:sequence>
	</xs:group>
	<xs:attributeGroup name="kwd.attributes">
		<xs:attribute name="keyref" type="xs:string" form="unqualified"/>
		<xs:attribute name="outputclass" type="xs:string" form="unqualified"/>
		<xs:attributeGroup ref="global-atts"/>
		<xs:attributeGroup ref="univ-atts-no-importance"/>
		<xs:attribute name="importance" type="importance-att-progdom.class" form="unqualified"/>
	</xs:attributeGroup>
	<!-- ==================== Include Section - Start ======================= -->
	<!-- ======== Table elements ======== -->
	<!-- ======= MetaData elements, plus keyword and indexterm ======= -->
	<!-- Map Domains -->
	<!-- Tech content domains -->
	<!-- Base domains -->
	<!--  ================ GROUP DEFINITIONS =====================  -->
	<xs:group name="topicref">
		<xs:choice>
			<xs:sequence>
				<xs:choice>
					<xs:element ref="topicref"/>
				</xs:choice>
			</xs:sequence>
			<xs:group ref="mapgroup-d-topicref"/>
		</xs:choice>
	</xs:group>
	<xs:group name="index-base">
		<xs:choice>
			<xs:sequence>
				<xs:choice>
					<xs:element ref="index-base"/>
				</xs:choice>
			</xs:sequence>
			<xs:group ref="indexing-d-index-base"/>
		</xs:choice>
	</xs:group>
	<xs:group name="keyword">
		<xs:choice>
			<xs:sequence>
				<xs:choice>
					<xs:element ref="keyword"/>
				</xs:choice>
			</xs:sequence>
			<xs:group ref="pr-d-keyword"/>
			<xs:group ref="ui-d-keyword"/>
			<xs:group ref="sw-d-keyword"/>
		</xs:choice>
	</xs:group>
	<xs:group name="ph">
		<xs:choice>
			<xs:sequence>
				<xs:choice>
					<xs:element ref="ph"/>
				</xs:choice>
			</xs:sequence>
			<xs:group ref="pr-d-ph"/>
			<xs:group ref="ui-d-ph"/>
			<xs:group ref="hi-d-ph"/>
			<xs:group ref="sw-d-ph"/>
		</xs:choice>
	</xs:group>
	<xs:group name="pre">
		<xs:choice>
			<xs:sequence>
				<xs:choice>
					<xs:element ref="pre"/>
				</xs:choice>
			</xs:sequence>
			<xs:group ref="pr-d-pre"/>
			<xs:group ref="ui-d-pre"/>
			<xs:group ref="sw-d-pre"/>
		</xs:choice>
	</xs:group>
	<xs:group name="dl">
		<xs:choice>
			<xs:sequence>
				<xs:choice>
					<xs:element ref="dl"/>
				</xs:choice>
			</xs:sequence>
			<xs:group ref="pr-d-dl"/>
		</xs:choice>
	</xs:group>
	<xs:group name="fig">
		<xs:choice>
			<xs:sequence>
				<xs:choice>
					<xs:element ref="fig"/>
				</xs:choice>
			</xs:sequence>
			<xs:group ref="pr-d-fig"/>
			<xs:group ref="ut-d-fig"/>
		</xs:choice>
	</xs:group>
	<xs:group name="note">
		<xs:choice>
			<xs:sequence>
				<xs:choice>
					<xs:element ref="note"/>
				</xs:choice>
			</xs:sequence>
			<xs:group ref="hazard-d-note"/>
		</xs:choice>
	</xs:group>
	<xs:group name="author">
		<xs:choice>
			<xs:sequence>
				<xs:choice>
					<xs:element ref="author"/>
				</xs:choice>
			</xs:sequence>
			<xs:group ref="xnal-d-author"/>
		</xs:choice>
	</xs:group>
	<xs:group name="keywords">
		<xs:choice>
			<xs:sequence>
				<xs:choice>
					<xs:element ref="keywords"/>
				</xs:choice>
			</xs:sequence>
			<xs:group ref="delay-d-keywords"/>
		</xs:choice>
	</xs:group>
	<xs:attributeGroup name="domains-att">
		<xs:attribute name="domains" type="xs:string" default="(map mapgroup-d) 
                                          (map bookmap)
                                          (topic abbrev-d)
                                          (topic delay-d)
                                          (topic hi-d) 
                                          (topic indexing-d) 
                                          (topic hazard-d)
                                          (topic pr-d)
                                          (topic sw-d)                                             
                                          (topic ui-d)
                                          (topic ut-d)   
                                          (topic xnal-d) 
                                          " form="unqualified"/>
	</xs:attributeGroup>
	<!-- ======= IMPORT - XML attributes and namespace ======= -->
	<xs:annotation>
		<xs:appinfo>
			<dita:domainsModule xmlns:dita="http://dita.oasis-open.org/architecture/2005/">(map bookmap)</dita:domainsModule>
		</xs:appinfo>
		<xs:documentation> 
    
    </xs:documentation>
	</xs:annotation>
	<xs:attributeGroup name="chapter-atts">
		<xs:attribute name="navtitle" type="xs:string"/>
		<xs:attribute name="href" type="xs:string"/>
		<xs:attribute name="keyref" type="xs:string"/>
		<xs:attribute name="outputclass" type="xs:string"/>
		<xs:attribute name="copy-to" type="xs:string"/>
		<xs:attributeGroup ref="topicref-atts"/>
		<xs:attributeGroup ref="univ-atts"/>
	</xs:attributeGroup>
	<xs:element name="bookmap">
		<xs:annotation>
			<xs:documentation>The &lt;bookmap&gt; element is a map file used to organize DITA content
                into a traditional book format. </xs:documentation>
		</xs:annotation>
		<xs:complexType>
			<xs:complexContent>
				<xs:extension base="bookmap.class">
					<xs:attribute ref="class" default="- map/map bookmap/bookmap "/>
				</xs:extension>
			</xs:complexContent>
		</xs:complexType>
	</xs:element>
	<xs:complexType name="bookmap.class">
		<xs:sequence>
			<xs:group ref="bookmap.content"/>
		</xs:sequence>
		<xs:attributeGroup ref="bookmap.attributes"/>
	</xs:complexType>
	<xs:group name="bookmap.content">
		<xs:sequence>
			<xs:sequence>
				<xs:choice minOccurs="0">
					<xs:group ref="title"/>
					<xs:group ref="booktitle"/>
				</xs:choice>
				<xs:group ref="bookmeta" minOccurs="0"/>
				<xs:group ref="frontmatter" minOccurs="0"/>
				<xs:group ref="chapter" minOccurs="0" maxOccurs="unbounded"/>
				<xs:group ref="part" minOccurs="0" maxOccurs="unbounded"/>
				<xs:choice>
					<xs:group ref="appendices" minOccurs="0"/>
					<xs:group ref="appendix" minOccurs="0" maxOccurs="unbounded"/>
				</xs:choice>
				<xs:group ref="backmatter" minOccurs="0"/>
				<xs:group ref="reltable" minOccurs="0" maxOccurs="unbounded"/>
			</xs:sequence>
		</xs:sequence>
	</xs:group>
	<xs:attributeGroup name="bookmap.attributes">
		<xs:attribute name="id" type="xs:ID"/>
		<xs:attributeGroup ref="conref-atts"/>
		<xs:attribute name="anchorref" type="xs:string"/>
		<xs:attribute name="outputclass" type="xs:string"/>
		<xs:attributeGroup ref="localization-atts"/>
		<xs:attributeGroup ref="select-atts"/>
		<xs:attributeGroup ref="topicref-atts"/>
		<xs:attributeGroup ref="domains-att"/>
		<xs:attribute ref="ditaarch:DITAArchVersion"/>
		<xs:attributeGroup ref="global-atts"/>
	</xs:attributeGroup>
	<xs:element name="bookmeta">
		<xs:annotation>
			<xs:documentation>The &lt;bookmeta&gt; element contains information about the book that
                is not considered book content, such as copyright information, author information,
                and any classifications. </xs:documentation>
		</xs:annotation>
		<xs:complexType>
			<xs:complexContent>
				<xs:extension base="bookmeta.class">
					<xs:attribute ref="class" default="- map/topicmeta bookmap/bookmeta "/>
				</xs:extension>
			</xs:complexContent>
		</xs:complexType>
	</xs:element>
	<xs:complexType name="bookmeta.class">
		<xs:sequence>
			<xs:group ref="bookmeta.content"/>
		</xs:sequence>
		<xs:attributeGroup ref="bookmeta.attributes"/>
	</xs:complexType>
	<xs:group name="bookmeta.content">
		<xs:sequence>
			<xs:sequence>
				<xs:group ref="linktext" minOccurs="0"/>
				<xs:group ref="searchtitle" minOccurs="0"/>
				<xs:group ref="shortdesc" minOccurs="0"/>
				<xs:group ref="author" minOccurs="0" maxOccurs="unbounded"/>
				<xs:group ref="source" minOccurs="0"/>
				<xs:group ref="publisherinformation" minOccurs="0"/>
				<xs:group ref="critdates" minOccurs="0"/>
				<xs:group ref="permissions" minOccurs="0"/>
				<xs:group ref="metadata" minOccurs="0" maxOccurs="unbounded"/>
				<xs:group ref="audience" minOccurs="0" maxOccurs="unbounded"/>
				<xs:group ref="category" minOccurs="0" maxOccurs="unbounded"/>
				<xs:group ref="keywords" minOccurs="0" maxOccurs="unbounded"/>
				<xs:group ref="prodinfo" minOccurs="0" maxOccurs="unbounded"/>
				<xs:group ref="othermeta" minOccurs="0" maxOccurs="unbounded"/>
				<xs:group ref="resourceid" minOccurs="0" maxOccurs="unbounded"/>
				<xs:group ref="bookid" minOccurs="0"/>
				<xs:group ref="bookchangehistory" minOccurs="0" maxOccurs="unbounded"/>
				<xs:group ref="bookrights" minOccurs="0" maxOccurs="unbounded"/>
				<xs:group ref="data" minOccurs="0" maxOccurs="unbounded"/>
			</xs:sequence>
		</xs:sequence>
	</xs:group>
	<xs:attributeGroup name="bookmeta.attributes">
		<xs:attribute name="lockmeta" type="yesno-att.class"/>
		<xs:attributeGroup ref="univ-atts"/>
		<xs:attributeGroup ref="global-atts"/>
	</xs:attributeGroup>
	<xs:element name="frontmatter">
		<xs:annotation>
			<xs:documentation>The &lt;frontmatter&gt; element contains the material that precedes
                the main body of a document. It may include items such as an abstract, a preface,
                and various types of book lists such as a &lt;toc&gt;, &lt;tablelist&gt;, or &lt;figurelist&gt;. </xs:documentation>
		</xs:annotation>
		<xs:complexType>
			<xs:complexContent>
				<xs:extension base="frontmatter.class">
					<xs:attribute ref="class" default="- map/topicref  bookmap/frontmatter "/>
				</xs:extension>
			</xs:complexContent>
		</xs:complexType>
	</xs:element>
	<xs:complexType name="frontmatter.class">
		<xs:sequence>
			<xs:group ref="frontmatter.content"/>
		</xs:sequence>
		<xs:attributeGroup ref="frontmatter.attributes"/>
	</xs:complexType>
	<xs:group name="frontmatter.content">
		<xs:sequence>
			<xs:choice minOccurs="0" maxOccurs="unbounded">
				<xs:group ref="booklists" minOccurs="0"/>
				<xs:group ref="notices" minOccurs="0"/>
				<xs:group ref="dedication" minOccurs="0"/>
				<xs:group ref="colophon" minOccurs="0"/>
				<xs:group ref="bookabstract" minOccurs="0"/>
				<xs:group ref="draftintro" minOccurs="0"/>
				<xs:group ref="preface" minOccurs="0"/>
				<xs:group ref="topicref" minOccurs="0"/>
			</xs:choice>
		</xs:sequence>
	</xs:group>
	<xs:attributeGroup name="frontmatter.attributes">
		<xs:attribute name="keyref" type="xs:string"/>
		<xs:attribute name="query" type="xs:string"/>
		<xs:attribute name="outputclass" type="xs:string"/>
		<xs:attributeGroup ref="topicref-atts"/>
		<xs:attributeGroup ref="univ-atts"/>
		<xs:attributeGroup ref="global-atts"/>
	</xs:attributeGroup>
	<xs:element name="backmatter">
		<xs:annotation>
			<xs:documentation>The &lt;backmatter&gt; element contains the material that follows
                the main body of a document and any appendixes. It may include items such
                as a colophon, legal notices, and various types of book lists such as a glossary
                or an index. </xs:documentation>
		</xs:annotation>
		<xs:complexType>
			<xs:complexContent>
				<xs:extension base="backmatter.class">
					<xs:attribute ref="class" default="- map/topicref  bookmap/backmatter "/>
				</xs:extension>
			</xs:complexContent>
		</xs:complexType>
	</xs:element>
	<xs:complexType name="backmatter.class">
		<xs:sequence>
			<xs:group ref="backmatter.content"/>
		</xs:sequence>
		<xs:attributeGroup ref="backmatter.attributes"/>
	</xs:complexType>
	<xs:group name="backmatter.content">
		<xs:sequence>
			<xs:choice minOccurs="0" maxOccurs="unbounded">
				<xs:group ref="booklists" minOccurs="0"/>
				<xs:group ref="notices" minOccurs="0"/>
				<xs:group ref="dedication" minOccurs="0"/>
				<xs:group ref="colophon" minOccurs="0"/>
				<xs:group ref="amendments" minOccurs="0"/>
				<xs:group ref="topicref" minOccurs="0"/>
			</xs:choice>
		</xs:sequence>
	</xs:group>
	<xs:attributeGroup name="backmatter.attributes">
		<xs:attribute name="keyref" type="xs:string"/>
		<xs:attribute name="query" type="xs:string"/>
		<xs:attributeGroup ref="topicref-atts"/>
		<xs:attributeGroup ref="univ-atts"/>
		<xs:attribute name="outputclass" type="xs:string"/>
		<xs:attributeGroup ref="global-atts"/>
	</xs:attributeGroup>
	<xs:element name="publisherinformation">
		<xs:annotation>
			<xs:documentation>The &lt;publisherinformation&gt; contains information about what group
                or person published the book, where it was published, and certain details
                about its publication history. Other publication history information is found
                in the &lt;bookchangehistory&gt; element. </xs:documentation>
		</xs:annotation>
		<xs:complexType>
			<xs:complexContent>
				<xs:extension base="publisherinformation.class">
					<xs:attribute ref="class" default="- topic/publisher bookmap/publisherinformation "/>
				</xs:extension>
			</xs:complexContent>
		</xs:complexType>
	</xs:element>
	<!--  Update value attr as per DITA Feature 12022  -->
	<xs:complexType name="publisherinformation.class">
		<xs:sequence>
			<xs:group ref="publisherinformation.content"/>
		</xs:sequence>
		<xs:attributeGroup ref="publisherinformation.attributes"/>
	</xs:complexType>
	<xs:group name="publisherinformation.content">
		<xs:sequence>
			<xs:sequence>
				<xs:choice minOccurs="0" maxOccurs="unbounded">
					<xs:group ref="person" minOccurs="0"/>
					<xs:group ref="organization" minOccurs="0"/>
				</xs:choice>
				<xs:group ref="printlocation" minOccurs="0" maxOccurs="unbounded"/>
				<xs:group ref="published" minOccurs="0" maxOccurs="unbounded"/>
				<xs:group ref="data" minOccurs="0" maxOccurs="unbounded"/>
			</xs:sequence>
		</xs:sequence>
	</xs:group>
	<xs:attributeGroup name="publisherinformation.attributes">
		<xs:attribute name="href" type="xs:string"/>
		<xs:attribute name="format" type="xs:string"/>
		<xs:attribute name="scope" type="scope-att.class"/>
		<xs:attribute name="keyref" type="xs:string"/>
		<xs:attribute name="type" type="xs:string"/>
		<xs:attributeGroup ref="univ-atts"/>
		<xs:attributeGroup ref="global-atts"/>
	</xs:attributeGroup>
	<xs:element name="person">
		<xs:annotation>
			<xs:documentation>The &lt;person&gt; element contains information about the name of
                a person. Note that unlike the &lt;personname&gt; element, the &lt;person&gt; element
                is not restricted to describing the names of authors. </xs:documentation>
		</xs:annotation>
		<xs:complexType mixed="true">
			<xs:complexContent>
				<xs:extension base="person.class">
					<xs:attribute ref="class" default="- topic/data bookmap/person "/>
				</xs:extension>
			</xs:complexContent>
		</xs:complexType>
	</xs:element>
	<xs:complexType name="person.class" mixed="true">
		<xs:sequence>
			<xs:group ref="person.content"/>
		</xs:sequence>
		<xs:attributeGroup ref="person.attributes"/>
	</xs:complexType>
	<xs:group name="person.content">
		<xs:sequence>
			<xs:choice minOccurs="0" maxOccurs="unbounded">
				<xs:group ref="words.cnt" minOccurs="0"/>
			</xs:choice>
		</xs:sequence>
	</xs:group>
	<xs:attributeGroup name="person.attributes">
		<xs:attributeGroup ref="data-element-atts.class"/>
		<xs:attributeGroup ref="global-atts"/>
	</xs:attributeGroup>
	<xs:element name="organization">
		<xs:annotation>
			<xs:documentation>The &lt;organization&gt; element contains the name of an organization.
                Note that unlike &lt;organizationname&gt;, the &lt;organization&gt; element is not
                restricted to usage within &lt;authorinformation&gt;; it does not have to contain
                the name of an authoring organization.</xs:documentation>
		</xs:annotation>
		<xs:complexType mixed="true">
			<xs:complexContent>
				<xs:extension base="organization.class">
					<xs:attribute ref="class" default="- topic/data bookmap/organization "/>
				</xs:extension>
			</xs:complexContent>
		</xs:complexType>
	</xs:element>
	<xs:complexType name="organization.class" mixed="true">
		<xs:sequence>
			<xs:group ref="organization.content"/>
		</xs:sequence>
		<xs:attributeGroup ref="organization.attributes"/>
	</xs:complexType>
	<xs:group name="organization.content">
		<xs:sequence>
			<xs:choice minOccurs="0" maxOccurs="unbounded">
				<xs:group ref="words.cnt" minOccurs="0"/>
			</xs:choice>
		</xs:sequence>
	</xs:group>
	<xs:attributeGroup name="organization.attributes">
		<xs:attributeGroup ref="data-element-atts.class"/>
		<xs:attributeGroup ref="global-atts"/>
	</xs:attributeGroup>
	<xs:element name="bookchangehistory">
		<xs:annotation>
			<xs:documentation>The &lt;bookchangehistory&gt; element contains information about the
                history of the book's creation and publishing lifecycle, who wrote, reviewed,
                edited, and tested the book, and when these events took place. </xs:documentation>
		</xs:annotation>
		<xs:complexType>
			<xs:complexContent>
				<xs:extension base="bookchangehistory.class">
					<xs:attribute ref="class" default="- topic/data bookmap/bookchangehistory "/>
				</xs:extension>
			</xs:complexContent>
		</xs:complexType>
	</xs:element>
	<xs:complexType name="bookchangehistory.class">
		<xs:sequence>
			<xs:group ref="bookchangehistory.content"/>
		</xs:sequence>
		<xs:attributeGroup ref="bookchangehistory.attributes"/>
	</xs:complexType>
	<xs:group name="bookchangehistory.content">
		<xs:sequence>
			<xs:sequence>
				<xs:group ref="reviewed" minOccurs="0" maxOccurs="unbounded"/>
				<xs:group ref="edited" minOccurs="0" maxOccurs="unbounded"/>
				<xs:group ref="tested" minOccurs="0" maxOccurs="unbounded"/>
				<xs:group ref="approved" minOccurs="0" maxOccurs="unbounded"/>
				<xs:group ref="bookevent" minOccurs="0" maxOccurs="unbounded"/>
			</xs:sequence>
		</xs:sequence>
	</xs:group>
	<xs:attributeGroup name="bookchangehistory.attributes">
		<xs:attributeGroup ref="data-element-atts.class"/>
		<xs:attributeGroup ref="global-atts"/>
	</xs:attributeGroup>
	<xs:element name="bookid">
		<xs:annotation>
			<xs:documentation>The &lt;bookid&gt; element contains the publisher's identification
                information for the book, such as part number, edition number and ISBN number. </xs:documentation>
		</xs:annotation>
		<xs:complexType>
			<xs:complexContent>
				<xs:extension base="bookid.class">
					<xs:attribute ref="class" default="- topic/data bookmap/bookid "/>
				</xs:extension>
			</xs:complexContent>
		</xs:complexType>
	</xs:element>
	<xs:complexType name="bookid.class">
		<xs:sequence>
			<xs:group ref="bookid.content"/>
		</xs:sequence>
		<xs:attributeGroup ref="bookid.attributes"/>
	</xs:complexType>
	<xs:group name="bookid.content">
		<xs:sequence>
			<xs:sequence>
				<xs:group ref="bookpartno" minOccurs="0" maxOccurs="unbounded"/>
				<xs:group ref="edition" minOccurs="0"/>
				<xs:group ref="isbn" minOccurs="0"/>
				<xs:group ref="booknumber" minOccurs="0"/>
				<xs:group ref="volume" minOccurs="0" maxOccurs="unbounded"/>
				<xs:group ref="maintainer" minOccurs="0"/>
			</xs:sequence>
		</xs:sequence>
	</xs:group>
	<xs:attributeGroup name="bookid.attributes">
		<xs:attributeGroup ref="data-element-atts.class"/>
		<xs:attributeGroup ref="global-atts"/>
	</xs:attributeGroup>
	<xs:element name="summary">
		<xs:annotation>
			<xs:documentation>The &lt;summary&gt; element contains a text summary associated with
                a book event (such as &lt;approved&gt; or &lt;reviewed&gt;) or with the list of
                copyrights for the book.</xs:documentation>
		</xs:annotation>
		<xs:complexType mixed="true">
			<xs:complexContent>
				<xs:extension base="summary.class">
					<xs:attribute ref="class" default="- topic/ph bookmap/summary "/>
				</xs:extension>
			</xs:complexContent>
		</xs:complexType>
	</xs:element>
	<xs:complexType name="summary.class" mixed="true">
		<xs:sequence>
			<xs:group ref="summary.content"/>
		</xs:sequence>
		<xs:attributeGroup ref="summary.attributes"/>
	</xs:complexType>
	<xs:group name="summary.content">
		<xs:sequence>
			<xs:choice minOccurs="0" maxOccurs="unbounded">
				<xs:group ref="words.cnt" minOccurs="0"/>
			</xs:choice>
		</xs:sequence>
	</xs:group>
	<xs:attributeGroup name="summary.attributes">
		<xs:attribute name="keyref" type="xs:string"/>
		<xs:attribute name="outputclass" type="xs:string"/>
		<xs:attributeGroup ref="univ-atts"/>
		<xs:attributeGroup ref="global-atts"/>
	</xs:attributeGroup>
	<xs:element name="printlocation">
		<xs:annotation>
			<xs:documentation>The &lt;printlocation&gt; element indicates the location where the
                book was printed. Customarily, the content is restricted to the name of the
                country. </xs:documentation>
		</xs:annotation>
		<xs:complexType mixed="true">
			<xs:complexContent>
				<xs:extension base="printlocation.class">
					<xs:attribute ref="class" default="- topic/data bookmap/printlocation "/>
				</xs:extension>
			</xs:complexContent>
		</xs:complexType>
	</xs:element>
	<xs:complexType name="printlocation.class" mixed="true">
		<xs:sequence>
			<xs:group ref="printlocation.content"/>
		</xs:sequence>
		<xs:attributeGroup ref="printlocation.attributes"/>
	</xs:complexType>
	<xs:group name="printlocation.content">
		<xs:sequence>
			<xs:choice minOccurs="0" maxOccurs="unbounded">
				<xs:group ref="words.cnt" minOccurs="0"/>
			</xs:choice>
		</xs:sequence>
	</xs:group>
	<xs:attributeGroup name="printlocation.attributes">
		<xs:attributeGroup ref="data-element-atts.class"/>
		<xs:attributeGroup ref="global-atts"/>
	</xs:attributeGroup>
	<xs:element name="published">
		<xs:annotation>
			<xs:documentation>The &lt;published&gt; element contains information about the person
                or organization publishing the book, the dates when it was started and completed,
                and any special restrictions associated with it. </xs:documentation>
		</xs:annotation>
		<xs:complexType>
			<xs:complexContent>
				<xs:extension base="published.class">
					<xs:attribute ref="class" default="- topic/data bookmap/published "/>
				</xs:extension>
			</xs:complexContent>
		</xs:complexType>
	</xs:element>
	<xs:complexType name="published.class">
		<xs:sequence>
			<xs:group ref="published.content"/>
		</xs:sequence>
		<xs:attributeGroup ref="published.attributes"/>
	</xs:complexType>
	<xs:group name="published.content">
		<xs:sequence>
			<xs:sequence>
				<xs:choice minOccurs="0" maxOccurs="unbounded">
					<xs:group ref="person"/>
					<xs:group ref="organization"/>
				</xs:choice>
				<xs:group ref="publishtype" minOccurs="0"/>
				<xs:group ref="revisionid" minOccurs="0"/>
				<xs:group ref="started" minOccurs="0"/>
				<xs:group ref="completed" minOccurs="0"/>
				<xs:group ref="summary" minOccurs="0"/>
				<xs:group ref="data" minOccurs="0" maxOccurs="unbounded"/>
			</xs:sequence>
		</xs:sequence>
	</xs:group>
	<xs:attributeGroup name="published.attributes">
		<xs:attributeGroup ref="data-element-atts.class"/>
		<xs:attributeGroup ref="global-atts"/>
	</xs:attributeGroup>
	<xs:element name="publishtype">
		<xs:annotation>
			<xs:documentation>The &lt;publishtype&gt; element indicates whether the book is generally
                available or is restricted in some way. The <keyword>value</keyword> attribute
                indicates the restrictions.</xs:documentation>
		</xs:annotation>
		<xs:complexType>
			<xs:complexContent>
				<xs:extension base="publishtype.class">
					<xs:attribute ref="class" default="- topic/data bookmap/publishtype "/>
				</xs:extension>
			</xs:complexContent>
		</xs:complexType>
	</xs:element>
	<xs:complexType name="publishtype.class">
		<xs:attributeGroup ref="publishtype.attributes"/>
	</xs:complexType>
	<xs:attributeGroup name="publishtype.attributes">
		<xs:attributeGroup ref="univ-atts"/>
		<xs:attribute name="name" type="xs:string"/>
		<xs:attribute name="datatype" type="xs:string"/>
		<xs:attribute name="value" type="xs:string" use="required"/>
		<xs:attribute name="href" type="xs:string"/>
		<xs:attribute name="format" type="xs:string"/>
		<xs:attribute name="type" type="xs:string"/>
		<xs:attribute name="scope" type="scope-att.class"/>
		<xs:attribute name="outputclass" type="xs:string"/>
		<xs:attributeGroup ref="global-atts"/>
	</xs:attributeGroup>
	<xs:element name="revisionid">
		<xs:annotation>
			<xs:documentation>The &lt;revisionid&gt; element indicates the revision number or revision
                ID of the book. The processing implementation determines how the level is
                displayed. Common methods include using a dash, for example "-01". or a period,
                such as ".01". </xs:documentation>
		</xs:annotation>
		<xs:complexType mixed="true">
			<xs:complexContent>
				<xs:extension base="revisionid.class">
					<xs:attribute ref="class" default="- topic/ph bookmap/revisionid "/>
				</xs:extension>
			</xs:complexContent>
		</xs:complexType>
	</xs:element>
	<xs:complexType name="revisionid.class" mixed="true">
		<xs:sequence>
			<xs:group ref="revisionid.content"/>
		</xs:sequence>
		<xs:attributeGroup ref="revisionid.attributes"/>
	</xs:complexType>
	<xs:group name="revisionid.content">
		<xs:sequence>
			<xs:choice minOccurs="0" maxOccurs="unbounded">
				<xs:group ref="keyword"/>
			</xs:choice>
		</xs:sequence>
	</xs:group>
	<xs:attributeGroup name="revisionid.attributes">
		<xs:attribute name="keyref" type="xs:string"/>
		<xs:attribute name="outputclass" type="xs:string"/>
		<xs:attributeGroup ref="univ-atts"/>
		<xs:attributeGroup ref="global-atts"/>
	</xs:attributeGroup>
	<xs:element name="started">
		<xs:annotation>
			<xs:documentation>The &lt;started&gt; element indicates a start date for some type of
                book event, such as a review, editing, or testing. </xs:documentation>
		</xs:annotation>
		<xs:complexType>
			<xs:complexContent>
				<xs:extension base="started.class">
					<xs:attribute ref="class" default="- topic/ph bookmap/started "/>
				</xs:extension>
			</xs:complexContent>
		</xs:complexType>
	</xs:element>
	<xs:complexType name="started.class">
		<xs:sequence>
			<xs:group ref="started.content"/>
		</xs:sequence>
		<xs:attributeGroup ref="started.attributes"/>
	</xs:complexType>
	<xs:group name="started.content">
		<xs:sequence>
			<xs:choice>
				<xs:sequence minOccurs="0">
					<xs:group ref="year"/>
					<xs:group ref="month"/>
					<xs:group ref="day" minOccurs="0"/>
				</xs:sequence>
				<xs:sequence>
					<xs:group ref="month"/>
					<xs:group ref="day" minOccurs="0"/>
					<xs:group ref="year"/>
				</xs:sequence>
				<xs:sequence>
					<xs:group ref="day"/>
					<xs:group ref="month"/>
					<xs:group ref="year"/>
				</xs:sequence>
			</xs:choice>
		</xs:sequence>
	</xs:group>
	<xs:attributeGroup name="started.attributes">
		<xs:attribute name="keyref" type="xs:string"/>
		<xs:attribute name="outputclass" type="xs:string"/>
		<xs:attributeGroup ref="univ-atts"/>
		<xs:attributeGroup ref="global-atts"/>
	</xs:attributeGroup>
	<xs:element name="completed">
		<xs:annotation>
			<xs:documentation>The &lt;completed&gt; element indicates a completion date for some
                type of book event, such as a review, editing, or testing. </xs:documentation>
		</xs:annotation>
		<xs:complexType>
			<xs:complexContent>
				<xs:extension base="completed.class">
					<xs:attribute ref="class" default="- topic/ph bookmap/completed "/>
				</xs:extension>
			</xs:complexContent>
		</xs:complexType>
	</xs:element>
	<xs:complexType name="completed.class">
		<xs:sequence>
			<xs:group ref="completed.content"/>
		</xs:sequence>
		<xs:attributeGroup ref="completed.attributes"/>
	</xs:complexType>
	<xs:group name="completed.content">
		<xs:sequence>
			<xs:choice>
				<xs:sequence minOccurs="0">
					<xs:group ref="year"/>
					<xs:group ref="month"/>
					<xs:group ref="day" minOccurs="0"/>
				</xs:sequence>
				<xs:sequence>
					<xs:group ref="month"/>
					<xs:group ref="day" minOccurs="0"/>
					<xs:group ref="year"/>
				</xs:sequence>
				<xs:sequence>
					<xs:group ref="day"/>
					<xs:group ref="month"/>
					<xs:group ref="year"/>
				</xs:sequence>
			</xs:choice>
		</xs:sequence>
	</xs:group>
	<xs:attributeGroup name="completed.attributes">
		<xs:attribute name="keyref" type="xs:string"/>
		<xs:attribute name="outputclass" type="xs:string"/>
		<xs:attributeGroup ref="univ-atts"/>
		<xs:attributeGroup ref="global-atts"/>
	</xs:attributeGroup>
	<xs:element name="year">
		<xs:annotation>
			<xs:documentation>The &lt;year&gt; element denotes a year.</xs:documentation>
		</xs:annotation>
		<xs:complexType mixed="true">
			<xs:complexContent>
				<xs:extension base="year.class">
					<xs:attribute ref="class" default="- topic/ph bookmap/year "/>
				</xs:extension>
			</xs:complexContent>
		</xs:complexType>
	</xs:element>
	<xs:complexType name="year.class" mixed="true">
		<xs:sequence>
			<xs:group ref="year.content"/>
		</xs:sequence>
		<xs:attributeGroup ref="year.attributes"/>
	</xs:complexType>
	<xs:group name="year.content">
		<xs:sequence>
			<xs:choice minOccurs="0" maxOccurs="unbounded">
				<xs:group ref="keyword"/>
			</xs:choice>
		</xs:sequence>
	</xs:group>
	<xs:attributeGroup name="year.attributes">
		<xs:attribute name="keyref" type="xs:string"/>
		<xs:attribute name="outputclass" type="xs:string"/>
		<xs:attributeGroup ref="univ-atts"/>
		<xs:attributeGroup ref="global-atts"/>
	</xs:attributeGroup>
	<xs:element name="month">
		<xs:annotation>
			<xs:documentation>The &lt;month&gt; element denotes a month of the year. </xs:documentation>
		</xs:annotation>
		<xs:complexType mixed="true">
			<xs:complexContent>
				<xs:extension base="month.class">
					<xs:attribute ref="class" default="- topic/ph bookmap/month "/>
				</xs:extension>
			</xs:complexContent>
		</xs:complexType>
	</xs:element>
	<xs:complexType name="month.class" mixed="true">
		<xs:sequence>
			<xs:group ref="month.content"/>
		</xs:sequence>
		<xs:attributeGroup ref="month.attributes"/>
	</xs:complexType>
	<xs:group name="month.content">
		<xs:sequence>
			<xs:choice minOccurs="0" maxOccurs="unbounded">
				<xs:group ref="keyword"/>
			</xs:choice>
		</xs:sequence>
	</xs:group>
	<xs:attributeGroup name="month.attributes">
		<xs:attribute name="keyref" type="xs:string"/>
		<xs:attribute name="outputclass" type="xs:string"/>
		<xs:attributeGroup ref="univ-atts"/>
		<xs:attributeGroup ref="global-atts"/>
	</xs:attributeGroup>
	<xs:element name="day">
		<xs:annotation>
			<xs:documentation>The &lt;day&gt; element denotes a day of the month. </xs:documentation>
		</xs:annotation>
		<xs:complexType mixed="true">
			<xs:complexContent>
				<xs:extension base="day.class">
					<xs:attribute ref="class" default="- topic/ph bookmap/day "/>
				</xs:extension>
			</xs:complexContent>
		</xs:complexType>
	</xs:element>
	<xs:complexType name="day.class" mixed="true">
		<xs:sequence>
			<xs:group ref="day.content"/>
		</xs:sequence>
		<xs:attributeGroup ref="day.attributes"/>
	</xs:complexType>
	<xs:group name="day.content">
		<xs:sequence>
			<xs:choice minOccurs="0" maxOccurs="unbounded">
				<xs:group ref="keyword"/>
			</xs:choice>
		</xs:sequence>
	</xs:group>
	<xs:attributeGroup name="day.attributes">
		<xs:attribute name="keyref" type="xs:string"/>
		<xs:attribute name="outputclass" type="xs:string"/>
		<xs:attributeGroup ref="univ-atts"/>
		<xs:attributeGroup ref="global-atts"/>
	</xs:attributeGroup>
	<xs:element name="reviewed">
		<xs:annotation>
			<xs:documentation>The &lt;reviewed&gt; element contains information about when and by
                whom the book was reviewed during its publication history.</xs:documentation>
		</xs:annotation>
		<xs:complexType>
			<xs:complexContent>
				<xs:extension base="reviewed.class">
					<xs:attribute ref="class" default="- topic/data bookmap/reviewed "/>
				</xs:extension>
			</xs:complexContent>
		</xs:complexType>
	</xs:element>
	<xs:complexType name="reviewed.class">
		<xs:sequence>
			<xs:group ref="reviewed.content"/>
		</xs:sequence>
		<xs:attributeGroup ref="reviewed.attributes"/>
	</xs:complexType>
	<xs:group name="reviewed.content">
		<xs:sequence>
			<xs:sequence>
				<xs:choice minOccurs="0" maxOccurs="unbounded">
					<xs:group ref="person"/>
					<xs:group ref="organization"/>
				</xs:choice>
				<xs:group ref="revisionid" minOccurs="0"/>
				<xs:group ref="started" minOccurs="0"/>
				<xs:group ref="completed" minOccurs="0"/>
				<xs:group ref="summary" minOccurs="0"/>
				<xs:group ref="data" minOccurs="0" maxOccurs="unbounded"/>
			</xs:sequence>
		</xs:sequence>
	</xs:group>
	<xs:attributeGroup name="reviewed.attributes">
		<xs:attributeGroup ref="data-element-atts.class"/>
		<xs:attributeGroup ref="global-atts"/>
	</xs:attributeGroup>
	<xs:element name="edited">
		<xs:annotation>
			<xs:documentation>The &lt;edited&gt; element contains information about when and by
                whom the book was edited during its publication history.</xs:documentation>
		</xs:annotation>
		<xs:complexType>
			<xs:complexContent>
				<xs:extension base="edited.class">
					<xs:attribute ref="class" default="- topic/data bookmap/edited "/>
				</xs:extension>
			</xs:complexContent>
		</xs:complexType>
	</xs:element>
	<xs:complexType name="edited.class">
		<xs:sequence>
			<xs:group ref="edited.content"/>
		</xs:sequence>
		<xs:attributeGroup ref="edited.attributes"/>
	</xs:complexType>
	<xs:group name="edited.content">
		<xs:sequence>
			<xs:sequence>
				<xs:choice minOccurs="0" maxOccurs="unbounded">
					<xs:group ref="person"/>
					<xs:group ref="organization"/>
				</xs:choice>
				<xs:group ref="revisionid" minOccurs="0"/>
				<xs:group ref="started" minOccurs="0"/>
				<xs:group ref="completed" minOccurs="0"/>
				<xs:group ref="summary" minOccurs="0"/>
				<xs:group ref="data" minOccurs="0" maxOccurs="unbounded"/>
			</xs:sequence>
		</xs:sequence>
	</xs:group>
	<xs:attributeGroup name="edited.attributes">
		<xs:attributeGroup ref="data-element-atts.class"/>
		<xs:attributeGroup ref="global-atts"/>
	</xs:attributeGroup>
	<xs:element name="tested">
		<xs:annotation>
			<xs:documentation>The &lt;tested&gt; element contains information about when and by
                whom the book was tested during its publication history.</xs:documentation>
		</xs:annotation>
		<xs:complexType>
			<xs:complexContent>
				<xs:extension base="tested.class">
					<xs:attribute ref="class" default="- topic/data bookmap/tested "/>
				</xs:extension>
			</xs:complexContent>
		</xs:complexType>
	</xs:element>
	<xs:complexType name="tested.class">
		<xs:sequence>
			<xs:group ref="tested.content"/>
		</xs:sequence>
		<xs:attributeGroup ref="tested.attributes"/>
	</xs:complexType>
	<xs:group name="tested.content">
		<xs:sequence>
			<xs:sequence>
				<xs:choice minOccurs="0" maxOccurs="unbounded">
					<xs:group ref="person"/>
					<xs:group ref="organization"/>
				</xs:choice>
				<xs:group ref="revisionid" minOccurs="0"/>
				<xs:group ref="started" minOccurs="0"/>
				<xs:group ref="completed" minOccurs="0"/>
				<xs:group ref="summary" minOccurs="0"/>
				<xs:group ref="data" minOccurs="0" maxOccurs="unbounded"/>
			</xs:sequence>
		</xs:sequence>
	</xs:group>
	<xs:attributeGroup name="tested.attributes">
		<xs:attributeGroup ref="data-element-atts.class"/>
		<xs:attributeGroup ref="global-atts"/>
	</xs:attributeGroup>
	<xs:element name="approved">
		<xs:annotation>
			<xs:documentation>The &lt;approved&gt; element contains information about when and by
                whom the book was approved during its publication history.</xs:documentation>
		</xs:annotation>
		<xs:complexType>
			<xs:complexContent>
				<xs:extension base="approved.class">
					<xs:attribute ref="class" default="- topic/data bookmap/approved "/>
				</xs:extension>
			</xs:complexContent>
		</xs:complexType>
	</xs:element>
	<xs:complexType name="approved.class">
		<xs:sequence>
			<xs:group ref="approved.content"/>
		</xs:sequence>
		<xs:attributeGroup ref="approved.attributes"/>
	</xs:complexType>
	<xs:group name="approved.content">
		<xs:sequence>
			<xs:sequence>
				<xs:choice minOccurs="0" maxOccurs="unbounded">
					<xs:group ref="person"/>
					<xs:group ref="organization"/>
				</xs:choice>
				<xs:group ref="revisionid" minOccurs="0"/>
				<xs:group ref="started" minOccurs="0"/>
				<xs:group ref="completed" minOccurs="0"/>
				<xs:group ref="summary" minOccurs="0"/>
				<xs:group ref="data" minOccurs="0" maxOccurs="unbounded"/>
			</xs:sequence>
		</xs:sequence>
	</xs:group>
	<xs:attributeGroup name="approved.attributes">
		<xs:attributeGroup ref="data-element-atts.class"/>
		<xs:attributeGroup ref="global-atts"/>
	</xs:attributeGroup>
	<xs:element name="bookevent">
		<xs:annotation>
			<xs:documentation>The &lt;bookevent&gt; element indicates a general event in the publication
                history of a book. This is an appropriate element for specialization if the
                current set of specific book event types, that is, review, edit, test or approval,
                does not meed your needs. </xs:documentation>
		</xs:annotation>
		<xs:complexType>
			<xs:complexContent>
				<xs:extension base="bookevent.class">
					<xs:attribute ref="class" default="- topic/data bookmap/bookevent "/>
				</xs:extension>
			</xs:complexContent>
		</xs:complexType>
	</xs:element>
	<xs:complexType name="bookevent.class">
		<xs:sequence>
			<xs:group ref="bookevent.content"/>
		</xs:sequence>
		<xs:attributeGroup ref="bookevent.attributes"/>
	</xs:complexType>
	<xs:group name="bookevent.content">
		<xs:sequence>
			<xs:sequence>
				<xs:group ref="bookeventtype" minOccurs="0"/>
				<xs:choice minOccurs="0" maxOccurs="unbounded">
					<xs:group ref="person"/>
					<xs:group ref="organization"/>
				</xs:choice>
				<xs:group ref="revisionid" minOccurs="0"/>
				<xs:group ref="started" minOccurs="0"/>
				<xs:group ref="completed" minOccurs="0"/>
				<xs:group ref="summary" minOccurs="0"/>
				<xs:group ref="data" minOccurs="0" maxOccurs="unbounded"/>
			</xs:sequence>
		</xs:sequence>
	</xs:group>
	<xs:attributeGroup name="bookevent.attributes">
		<xs:attributeGroup ref="data-element-atts.class"/>
		<xs:attributeGroup ref="global-atts"/>
	</xs:attributeGroup>
	<xs:element name="bookeventtype">
		<xs:annotation>
			<xs:documentation>The &lt;bookeventtype&gt; element indicates the specific nature of
                a &lt;bookevent&gt;, such as updated, indexed, or deprecated. The required <keyword>name</keyword> attribute
                indicates the event's type. </xs:documentation>
		</xs:annotation>
		<xs:complexType>
			<xs:complexContent>
				<xs:extension base="bookeventtype.class">
					<xs:attribute ref="class" default="- topic/data bookmap/bookeventtype "/>
				</xs:extension>
			</xs:complexContent>
		</xs:complexType>
	</xs:element>
	<xs:complexType name="bookeventtype.class">
		<xs:attributeGroup ref="bookeventtype.attributes"/>
	</xs:complexType>
	<xs:attributeGroup name="bookeventtype.attributes">
		<xs:attributeGroup ref="univ-atts"/>
		<xs:attribute name="name" type="xs:string" use="required"/>
		<xs:attribute name="datatype" type="xs:string"/>
		<xs:attribute name="value" type="xs:string"/>
		<xs:attribute name="href" type="xs:string"/>
		<xs:attribute name="format" type="xs:string"/>
		<xs:attribute name="type" type="xs:string"/>
		<xs:attribute name="scope" type="scope-att.class"/>
		<xs:attribute name="outputclass" type="xs:string"/>
		<xs:attributeGroup ref="global-atts"/>
	</xs:attributeGroup>
	<xs:element name="bookpartno">
		<xs:annotation>
			<xs:documentation>The &lt;bookpartno&gt; element contains the book's part number; such
                as 99F1234. This is generally the number that the publisher uses to identify
                the book for tracking purposes. </xs:documentation>
		</xs:annotation>
		<xs:complexType mixed="true">
			<xs:complexContent>
				<xs:extension base="bookpartno.class">
					<xs:attribute ref="class" default="- topic/data bookmap/bookpartno "/>
				</xs:extension>
			</xs:complexContent>
		</xs:complexType>
	</xs:element>
	<xs:complexType name="bookpartno.class" mixed="true">
		<xs:sequence>
			<xs:group ref="bookpartno.content"/>
		</xs:sequence>
		<xs:attributeGroup ref="bookpartno.attributes"/>
	</xs:complexType>
	<xs:group name="bookpartno.content">
		<xs:sequence>
			<xs:choice minOccurs="0" maxOccurs="unbounded">
				<xs:group ref="words.cnt"/>
			</xs:choice>
		</xs:sequence>
	</xs:group>
	<xs:attributeGroup name="bookpartno.attributes">
		<xs:attributeGroup ref="data-element-atts.class"/>
		<xs:attributeGroup ref="global-atts"/>
	</xs:attributeGroup>
	<xs:element name="edition">
		<xs:annotation>
			<xs:documentation>The &lt;edition&gt; element contains the edition number information,
                such as First Edition, or Third Edition, used by a publisher to identify a
                book.</xs:documentation>
		</xs:annotation>
		<xs:complexType mixed="true">
			<xs:complexContent>
				<xs:extension base="edition.class">
					<xs:attribute ref="class" default="- topic/data bookmap/edition "/>
				</xs:extension>
			</xs:complexContent>
		</xs:complexType>
	</xs:element>
	<xs:complexType name="edition.class" mixed="true">
		<xs:sequence>
			<xs:group ref="edition.content"/>
		</xs:sequence>
		<xs:attributeGroup ref="edition.attributes"/>
	</xs:complexType>
	<xs:group name="edition.content">
		<xs:sequence>
			<xs:choice minOccurs="0" maxOccurs="unbounded">
				<xs:group ref="keyword"/>
			</xs:choice>
		</xs:sequence>
	</xs:group>
	<xs:attributeGroup name="edition.attributes">
		<xs:attributeGroup ref="data-element-atts.class"/>
		<xs:attributeGroup ref="global-atts"/>
	</xs:attributeGroup>
	<xs:element name="isbn">
		<xs:annotation>
			<xs:documentation>The &lt;isbn&gt; element contains the book's International Standard
                Book Number (ISBN).</xs:documentation>
		</xs:annotation>
		<xs:complexType mixed="true">
			<xs:complexContent>
				<xs:extension base="isbn.class">
					<xs:attribute ref="class" default="- topic/data bookmap/isbn "/>
				</xs:extension>
			</xs:complexContent>
		</xs:complexType>
	</xs:element>
	<xs:complexType name="isbn.class" mixed="true">
		<xs:sequence>
			<xs:group ref="isbn.content"/>
		</xs:sequence>
		<xs:attributeGroup ref="isbn.attributes"/>
	</xs:complexType>
	<xs:group name="isbn.content">
		<xs:sequence>
			<xs:choice minOccurs="0" maxOccurs="unbounded">
				<xs:group ref="keyword"/>
			</xs:choice>
		</xs:sequence>
	</xs:group>
	<xs:attributeGroup name="isbn.attributes">
		<xs:attributeGroup ref="data-element-atts.class"/>
		<xs:attributeGroup ref="global-atts"/>
	</xs:attributeGroup>
	<xs:element name="booknumber">
		<xs:annotation>
			<xs:documentation>The &lt;booknumber&gt; element contains the book's form number, such
                as SC21-1920.</xs:documentation>
		</xs:annotation>
		<xs:complexType mixed="true">
			<xs:complexContent>
				<xs:extension base="booknumber.class">
					<xs:attribute ref="class" default="- topic/data bookmap/booknumber "/>
				</xs:extension>
			</xs:complexContent>
		</xs:complexType>
	</xs:element>
	<xs:complexType name="booknumber.class" mixed="true">
		<xs:sequence>
			<xs:group ref="booknumber.content"/>
		</xs:sequence>
		<xs:attributeGroup ref="booknumber.attributes"/>
	</xs:complexType>
	<xs:group name="booknumber.content">
		<xs:sequence>
			<xs:choice minOccurs="0" maxOccurs="unbounded">
				<xs:group ref="words.cnt"/>
			</xs:choice>
		</xs:sequence>
	</xs:group>
	<xs:attributeGroup name="booknumber.attributes">
		<xs:attributeGroup ref="data-element-atts.class"/>
		<xs:attributeGroup ref="global-atts"/>
	</xs:attributeGroup>
	<xs:element name="volume">
		<xs:annotation>
			<xs:documentation>The &lt;volume&gt; element contains the book's volume number, such
                as Volume <keyword>2</keyword>.</xs:documentation>
		</xs:annotation>
		<xs:complexType mixed="true">
			<xs:complexContent>
				<xs:extension base="volume.class">
					<xs:attribute ref="class" default="- topic/data bookmap/volume "/>
				</xs:extension>
			</xs:complexContent>
		</xs:complexType>
	</xs:element>
	<xs:complexType name="volume.class" mixed="true">
		<xs:sequence>
			<xs:group ref="volume.content"/>
		</xs:sequence>
		<xs:attributeGroup ref="volume.attributes"/>
	</xs:complexType>
	<xs:group name="volume.content">
		<xs:sequence>
			<xs:choice minOccurs="0" maxOccurs="unbounded">
				<xs:group ref="keyword"/>
			</xs:choice>
		</xs:sequence>
	</xs:group>
	<xs:attributeGroup name="volume.attributes">
		<xs:attributeGroup ref="data-element-atts.class"/>
		<xs:attributeGroup ref="global-atts"/>
	</xs:attributeGroup>
	<xs:element name="maintainer">
		<xs:annotation>
			<xs:documentation>The &lt;maintainer&gt; element contains information about who maiintains
                the document; this can be an organization or a person.</xs:documentation>
		</xs:annotation>
		<xs:complexType>
			<xs:complexContent>
				<xs:extension base="maintainer.class">
					<xs:attribute ref="class" default="- topic/data bookmap/maintainer "/>
				</xs:extension>
			</xs:complexContent>
		</xs:complexType>
	</xs:element>
	<xs:complexType name="maintainer.class">
		<xs:sequence>
			<xs:group ref="maintainer.content"/>
		</xs:sequence>
		<xs:attributeGroup ref="maintainer.attributes"/>
	</xs:complexType>
	<xs:group name="maintainer.content">
		<xs:sequence>
			<xs:sequence>
				<xs:choice minOccurs="0" maxOccurs="unbounded">
					<xs:group ref="person"/>
					<xs:group ref="organization"/>
				</xs:choice>
				<xs:group ref="data" minOccurs="0" maxOccurs="unbounded"/>
			</xs:sequence>
		</xs:sequence>
	</xs:group>
	<xs:attributeGroup name="maintainer.attributes">
		<xs:attributeGroup ref="data-element-atts.class"/>
		<xs:attributeGroup ref="global-atts"/>
	</xs:attributeGroup>
	<xs:element name="bookrights">
		<xs:annotation>
			<xs:documentation>The &lt;bookrights&gt; element contains the information about the
                legal rights associated with the book, including copyright dates and owners.</xs:documentation>
		</xs:annotation>
		<xs:complexType>
			<xs:complexContent>
				<xs:extension base="bookrights.class">
					<xs:attribute ref="class" default="- topic/data bookmap/bookrights "/>
				</xs:extension>
			</xs:complexContent>
		</xs:complexType>
	</xs:element>
	<xs:complexType name="bookrights.class">
		<xs:sequence>
			<xs:group ref="bookrights.content"/>
		</xs:sequence>
		<xs:attributeGroup ref="bookrights.attributes"/>
	</xs:complexType>
	<xs:group name="bookrights.content">
		<xs:sequence>
			<xs:sequence>
				<xs:group ref="copyrfirst" minOccurs="0"/>
				<xs:group ref="copyrlast" minOccurs="0"/>
				<xs:group ref="bookowner"/>
				<xs:group ref="bookrestriction" minOccurs="0"/>
				<xs:group ref="summary" minOccurs="0"/>
			</xs:sequence>
		</xs:sequence>
	</xs:group>
	<xs:attributeGroup name="bookrights.attributes">
		<xs:attributeGroup ref="data-element-atts.class"/>
		<xs:attributeGroup ref="global-atts"/>
	</xs:attributeGroup>
	<xs:element name="copyrfirst">
		<xs:annotation>
			<xs:documentation>The &lt;copyfirst&gt; element contains the first copyright year within
                a multiyear copyright statement.</xs:documentation>
		</xs:annotation>
		<xs:complexType>
			<xs:complexContent>
				<xs:extension base="copyrfirst.class">
					<xs:attribute ref="class" default="- topic/data bookmap/copyrfirst "/>
				</xs:extension>
			</xs:complexContent>
		</xs:complexType>
	</xs:element>
	<xs:complexType name="copyrfirst.class">
		<xs:sequence>
			<xs:group ref="copyrfirst.content"/>
		</xs:sequence>
		<xs:attributeGroup ref="copyrfirst.attributes"/>
	</xs:complexType>
	<xs:group name="copyrfirst.content">
		<xs:sequence>
			<xs:sequence>
				<xs:group ref="year"/>
			</xs:sequence>
		</xs:sequence>
	</xs:group>
	<xs:attributeGroup name="copyrfirst.attributes">
		<xs:attributeGroup ref="data-element-atts.class"/>
		<xs:attributeGroup ref="global-atts"/>
	</xs:attributeGroup>
	<xs:element name="copyrlast">
		<xs:annotation>
			<xs:documentation>The &lt;copylast&gt; element contains the last copyright year within
                a multiyear copyright statement.</xs:documentation>
		</xs:annotation>
		<xs:complexType>
			<xs:complexContent>
				<xs:extension base="copyrlast.class">
					<xs:attribute ref="class" default="- topic/data bookmap/copyrlast "/>
				</xs:extension>
			</xs:complexContent>
		</xs:complexType>
	</xs:element>
	<xs:complexType name="copyrlast.class">
		<xs:sequence>
			<xs:group ref="copyrlast.content"/>
		</xs:sequence>
		<xs:attributeGroup ref="copyrlast.attributes"/>
	</xs:complexType>
	<xs:group name="copyrlast.content">
		<xs:sequence>
			<xs:sequence>
				<xs:group ref="year"/>
			</xs:sequence>
		</xs:sequence>
	</xs:group>
	<xs:attributeGroup name="copyrlast.attributes">
		<xs:attributeGroup ref="data-element-atts.class"/>
		<xs:attributeGroup ref="global-atts"/>
	</xs:attributeGroup>
	<xs:element name="bookowner">
		<xs:annotation>
			<xs:documentation>The &lt;bookowner&gt; element contains the owner of the copyright.</xs:documentation>
		</xs:annotation>
		<xs:complexType>
			<xs:complexContent>
				<xs:extension base="bookowner.class">
					<xs:attribute ref="class" default="- topic/data bookmap/bookowner "/>
				</xs:extension>
			</xs:complexContent>
		</xs:complexType>
	</xs:element>
	<xs:complexType name="bookowner.class">
		<xs:sequence>
			<xs:group ref="bookowner.content"/>
		</xs:sequence>
		<xs:attributeGroup ref="bookowner.attributes"/>
	</xs:complexType>
	<xs:group name="bookowner.content">
		<xs:sequence>
			<xs:choice minOccurs="0" maxOccurs="unbounded">
				<xs:group ref="person" minOccurs="0"/>
				<xs:group ref="organization" minOccurs="0"/>
			</xs:choice>
		</xs:sequence>
	</xs:group>
	<xs:attributeGroup name="bookowner.attributes">
		<xs:attributeGroup ref="data-element-atts.class"/>
		<xs:attributeGroup ref="global-atts"/>
	</xs:attributeGroup>
	<xs:element name="bookrestriction">
		<xs:annotation>
			<xs:documentation>The &lt;bookrestriction&gt; element indicates whether the book is
                classified, or restricted in some way. The value attribute indicates the restrictions;
                this may be a string like "All Rights Reserved," representing the publisher's
                copyright restrictions.</xs:documentation>
		</xs:annotation>
		<xs:complexType>
			<xs:complexContent>
				<xs:extension base="bookrestriction.class">
					<xs:attribute ref="class" default="- topic/data bookmap/bookrestriction "/>
				</xs:extension>
			</xs:complexContent>
		</xs:complexType>
	</xs:element>
	<!--  Update value attr as per DITA Feature 12022  -->
	<xs:complexType name="bookrestriction.class">
		<xs:attributeGroup ref="bookrestriction.attributes"/>
	</xs:complexType>
	<xs:attributeGroup name="bookrestriction.attributes">
		<xs:attributeGroup ref="univ-atts"/>
		<xs:attribute name="name" type="xs:string"/>
		<xs:attribute name="datatype" type="xs:string"/>
		<xs:attribute name="value" type="xs:string" use="required"/>
		<xs:attribute name="href" type="xs:string"/>
		<xs:attribute name="format" type="xs:string"/>
		<xs:attribute name="type" type="xs:string"/>
		<xs:attribute name="scope" type="scope-att.class"/>
		<xs:attribute name="outputclass" type="xs:string"/>
		<xs:attributeGroup ref="global-atts"/>
	</xs:attributeGroup>
	<xs:element name="booktitle">
		<xs:annotation>
			<xs:documentation>The &lt;booktitle&gt; element contains the title information for a
                book. , including &lt;booklibrary&gt; data, a &lt;maintitle&gt; and subtitle (&lt;titlealt&gt;)
                as required. </xs:documentation>
		</xs:annotation>
		<xs:complexType>
			<xs:complexContent>
				<xs:extension base="booktitle.class">
					<xs:attribute ref="class" default="- topic/title bookmap/booktitle "/>
				</xs:extension>
			</xs:complexContent>
		</xs:complexType>
	</xs:element>
	<xs:complexType name="booktitle.class">
		<xs:sequence>
			<xs:group ref="booktitle.content"/>
		</xs:sequence>
		<xs:attributeGroup ref="booktitle.attributes"/>
	</xs:complexType>
	<xs:group name="booktitle.content">
		<xs:sequence>
			<xs:sequence minOccurs="0" maxOccurs="unbounded">
				<xs:group ref="booklibrary" minOccurs="0"/>
				<xs:group ref="mainbooktitle"/>
				<xs:group ref="booktitlealt" minOccurs="0" maxOccurs="unbounded"/>
			</xs:sequence>
		</xs:sequence>
	</xs:group>
	<xs:attributeGroup name="booktitle.attributes">
		<xs:attribute name="outputclass" type="xs:string"/>
		<xs:attribute name="base" type="xs:string"/>
		<xs:attributeGroup ref="base-attribute-extensions"/>
		<xs:attributeGroup ref="id-atts"/>
		<xs:attributeGroup ref="localization-atts"/>
		<xs:attributeGroup ref="global-atts"/>
	</xs:attributeGroup>
	<xs:element name="booklibrary">
		<xs:annotation>
			<xs:documentation>The &lt;booklibrary&gt; element contains the library information for
                a book. Library entries contain information about the series, library, or
                collection of documents to which the book belongs. </xs:documentation>
		</xs:annotation>
		<xs:complexType mixed="true">
			<xs:complexContent>
				<xs:extension base="booklibrary.class">
					<xs:attribute ref="class" default="- topic/ph bookmap/booklibrary "/>
				</xs:extension>
			</xs:complexContent>
		</xs:complexType>
	</xs:element>
	<xs:complexType name="booklibrary.class" mixed="true">
		<xs:sequence>
			<xs:group ref="booklibrary.content"/>
		</xs:sequence>
		<xs:attributeGroup ref="booklibrary.attributes"/>
	</xs:complexType>
	<xs:group name="booklibrary.content">
		<xs:sequence>
			<xs:choice minOccurs="0" maxOccurs="unbounded">
				<xs:group ref="basic.ph.noxref"/>
				<xs:group ref="image"/>
			</xs:choice>
		</xs:sequence>
	</xs:group>
	<xs:attributeGroup name="booklibrary.attributes">
		<xs:attribute name="keyref" type="xs:string"/>
		<xs:attribute name="outputclass" type="xs:string"/>
		<xs:attributeGroup ref="univ-atts"/>
		<xs:attributeGroup ref="global-atts"/>
	</xs:attributeGroup>
	<xs:element name="mainbooktitle">
		<xs:annotation>
			<xs:documentation>The &lt;mainbooktitle&gt; element contains the primary title information
                for a book.</xs:documentation>
		</xs:annotation>
		<xs:complexType mixed="true">
			<xs:complexContent>
				<xs:extension base="mainbooktitle.class">
					<xs:attribute ref="class" default="- topic/ph bookmap/mainbooktitle "/>
				</xs:extension>
			</xs:complexContent>
		</xs:complexType>
	</xs:element>
	<xs:complexType name="mainbooktitle.class" mixed="true">
		<xs:sequence>
			<xs:group ref="mainbooktitle.content"/>
		</xs:sequence>
		<xs:attributeGroup ref="mainbooktitle.attributes"/>
	</xs:complexType>
	<xs:group name="mainbooktitle.content">
		<xs:sequence>
			<xs:choice minOccurs="0" maxOccurs="unbounded">
				<xs:group ref="basic.ph.noxref"/>
				<xs:group ref="image"/>
			</xs:choice>
		</xs:sequence>
	</xs:group>
	<xs:attributeGroup name="mainbooktitle.attributes">
		<xs:attribute name="keyref" type="xs:string"/>
		<xs:attribute name="outputclass" type="xs:string"/>
		<xs:attributeGroup ref="univ-atts"/>
		<xs:attributeGroup ref="global-atts"/>
	</xs:attributeGroup>
	<xs:element name="booktitlealt">
		<xs:annotation>
			<xs:documentation>The &lt;booktitlealt&gt; element contains the alternative title, subtitle,
                or short title for a book.</xs:documentation>
		</xs:annotation>
		<xs:complexType mixed="true">
			<xs:complexContent>
				<xs:extension base="booktitlealt.class">
					<xs:attribute ref="class" default="- topic/ph bookmap/booktitlealt "/>
				</xs:extension>
			</xs:complexContent>
		</xs:complexType>
	</xs:element>
	<xs:complexType name="booktitlealt.class" mixed="true">
		<xs:sequence>
			<xs:group ref="booktitlealt.content"/>
		</xs:sequence>
		<xs:attributeGroup ref="booktitlealt.attributes"/>
	</xs:complexType>
	<xs:group name="booktitlealt.content">
		<xs:sequence>
			<xs:choice minOccurs="0" maxOccurs="unbounded">
				<xs:group ref="basic.ph.noxref" minOccurs="0"/>
				<xs:group ref="image" minOccurs="0"/>
			</xs:choice>
		</xs:sequence>
	</xs:group>
	<xs:attributeGroup name="booktitlealt.attributes">
		<xs:attribute name="keyref" type="xs:string"/>
		<xs:attribute name="outputclass" type="xs:string"/>
		<xs:attributeGroup ref="univ-atts"/>
		<xs:attributeGroup ref="global-atts"/>
	</xs:attributeGroup>
	<xs:element name="draftintro">
		<xs:annotation>
			<xs:documentation>The &lt;draftintro&gt; element references a topic used as an introduction
                to the draft of this book.</xs:documentation>
		</xs:annotation>
		<xs:complexType>
			<xs:complexContent>
				<xs:extension base="draftintro.class">
					<xs:attribute ref="class" default="- map/topicref bookmap/draftintro "/>
				</xs:extension>
			</xs:complexContent>
		</xs:complexType>
	</xs:element>
	<xs:complexType name="draftintro.class">
		<xs:sequence>
			<xs:group ref="draftintro.content"/>
		</xs:sequence>
		<xs:attributeGroup ref="draftintro.attributes"/>
	</xs:complexType>
	<xs:group name="draftintro.content">
		<xs:sequence>
			<xs:sequence>
				<xs:group ref="topicmeta" minOccurs="0"/>
				<xs:group ref="topicref" minOccurs="0" maxOccurs="unbounded"/>
			</xs:sequence>
		</xs:sequence>
	</xs:group>
	<xs:attributeGroup name="draftintro.attributes">
		<xs:attributeGroup ref="chapter-atts"/>
		<xs:attributeGroup ref="global-atts"/>
	</xs:attributeGroup>
	<xs:element name="bookabstract">
		<xs:annotation>
			<xs:documentation>The &lt;bookabstract&gt; element references a topic used within a <keyword>bookmap</keyword> as
                a brief summary of book content, generally output as part of the book's front
                matter. It is used to help the reader quickly evaluate the book's purpose.</xs:documentation>
		</xs:annotation>
		<xs:complexType>
			<xs:complexContent>
				<xs:extension base="bookabstract.class">
					<xs:attribute ref="class" default="- map/topicref bookmap/bookabstract "/>
				</xs:extension>
			</xs:complexContent>
		</xs:complexType>
	</xs:element>
	<xs:complexType name="bookabstract.class">
		<xs:attributeGroup ref="bookabstract.attributes"/>
	</xs:complexType>
	<xs:attributeGroup name="bookabstract.attributes">
		<xs:attributeGroup ref="chapter-atts"/>
		<xs:attributeGroup ref="global-atts"/>
	</xs:attributeGroup>
	<xs:element name="dedication">
		<xs:annotation>
			<xs:documentation>The &lt;dedication&gt; element references a topic containing a dedication
                for the book, such as to a person or group.</xs:documentation>
		</xs:annotation>
		<xs:complexType>
			<xs:complexContent>
				<xs:extension base="dedication.class">
					<xs:attribute ref="class" default="- map/topicref bookmap/dedication "/>
				</xs:extension>
			</xs:complexContent>
		</xs:complexType>
	</xs:element>
	<xs:complexType name="dedication.class">
		<xs:attributeGroup ref="dedication.attributes"/>
	</xs:complexType>
	<xs:attributeGroup name="dedication.attributes">
		<xs:attributeGroup ref="chapter-atts"/>
		<xs:attributeGroup ref="global-atts"/>
	</xs:attributeGroup>
	<xs:element name="preface">
		<xs:annotation>
			<xs:documentation>The &lt;preface&gt; element references introductory information about
                a book, such as the purpose and structure of the document. </xs:documentation>
		</xs:annotation>
		<xs:complexType>
			<xs:complexContent>
				<xs:extension base="preface.class">
					<xs:attribute ref="class" default="- map/topicref bookmap/preface "/>
				</xs:extension>
			</xs:complexContent>
		</xs:complexType>
	</xs:element>
	<xs:complexType name="preface.class">
		<xs:sequence>
			<xs:group ref="preface.content"/>
		</xs:sequence>
		<xs:attributeGroup ref="preface.attributes"/>
	</xs:complexType>
	<xs:group name="preface.content">
		<xs:sequence>
			<xs:sequence>
				<xs:group ref="topicmeta" minOccurs="0"/>
				<xs:group ref="topicref" minOccurs="0" maxOccurs="unbounded"/>
			</xs:sequence>
		</xs:sequence>
	</xs:group>
	<xs:attributeGroup name="preface.attributes">
		<xs:attributeGroup ref="chapter-atts"/>
		<xs:attributeGroup ref="global-atts"/>
	</xs:attributeGroup>
	<xs:element name="chapter">
		<xs:annotation>
			<xs:documentation>The &lt;chapter&gt; element references a topic as a chapter within
                a book. </xs:documentation>
		</xs:annotation>
		<xs:complexType>
			<xs:complexContent>
				<xs:extension base="chapter.class">
					<xs:attribute ref="class" default="- map/topicref bookmap/chapter "/>
				</xs:extension>
			</xs:complexContent>
		</xs:complexType>
	</xs:element>
	<xs:complexType name="chapter.class">
		<xs:sequence>
			<xs:group ref="chapter.content"/>
		</xs:sequence>
		<xs:attributeGroup ref="chapter.attributes"/>
	</xs:complexType>
	<xs:group name="chapter.content">
		<xs:sequence>
			<xs:sequence>
				<xs:group ref="topicmeta" minOccurs="0"/>
				<xs:group ref="topicref" minOccurs="0" maxOccurs="unbounded"/>
			</xs:sequence>
		</xs:sequence>
	</xs:group>
	<xs:attributeGroup name="chapter.attributes">
		<xs:attributeGroup ref="chapter-atts"/>
		<xs:attributeGroup ref="global-atts"/>
	</xs:attributeGroup>
	<xs:element name="part">
		<xs:annotation>
			<xs:documentation>The &lt;part&gt; element references a part topic for the book. A new
                part is started. Use &lt;part&gt; to divide a document's chapters into logical
                groupings. For example, in a document that contains both guide and reference
                information, you can define two parts, one containing the guide information
                and the other containing the reference information. </xs:documentation>
		</xs:annotation>
		<xs:complexType>
			<xs:complexContent>
				<xs:extension base="part.class">
					<xs:attribute ref="class" default="- map/topicref bookmap/part "/>
				</xs:extension>
			</xs:complexContent>
		</xs:complexType>
	</xs:element>
	<xs:complexType name="part.class">
		<xs:sequence>
			<xs:group ref="part.content"/>
		</xs:sequence>
		<xs:attributeGroup ref="chapter-atts"/>
		<xs:attributeGroup ref="global-atts"/>
	</xs:complexType>
	<xs:group name="part.content">
		<xs:sequence>
			<xs:sequence>
				<xs:group ref="topicmeta" minOccurs="0"/>
				<xs:choice minOccurs="0" maxOccurs="unbounded">
					<xs:group ref="topicref"/>
					<xs:group ref="chapter"/>
				</xs:choice>
			</xs:sequence>
		</xs:sequence>
	</xs:group>
	<xs:attributeGroup name="part.attributes">
		<xs:attributeGroup ref="chapter-atts"/>
		<xs:attributeGroup ref="global-atts"/>
	</xs:attributeGroup>
	<xs:element name="appendix">
		<xs:annotation>
			<xs:documentation>designates a topic as an appendix within a bookmap</xs:documentation>
		</xs:annotation>
		<xs:complexType>
			<xs:complexContent>
				<xs:extension base="appendix.class">
					<xs:attribute ref="class" default="- map/topicref bookmap/appendix "/>
				</xs:extension>
			</xs:complexContent>
		</xs:complexType>
	</xs:element>
	<xs:complexType name="appendix.class">
		<xs:sequence>
			<xs:group ref="appendix.content"/>
		</xs:sequence>
		<xs:attributeGroup ref="appendix.attributes"/>
	</xs:complexType>
	<xs:group name="appendix.content">
		<xs:sequence>
			<xs:sequence>
				<xs:group ref="topicmeta" minOccurs="0"/>
				<xs:group ref="topicref" minOccurs="0" maxOccurs="unbounded"/>
			</xs:sequence>
		</xs:sequence>
	</xs:group>
	<xs:attributeGroup name="appendix.attributes">
		<xs:attributeGroup ref="chapter-atts"/>
		<xs:attributeGroup ref="global-atts"/>
	</xs:attributeGroup>
	<xs:element name="appendices">
		<xs:annotation>
			<xs:documentation>designates a topic as an appendix within a bookmap</xs:documentation>
		</xs:annotation>
		<xs:complexType>
			<xs:complexContent>
				<xs:extension base="appendices.class">
					<xs:attribute ref="class" default="- map/topicref bookmap/appendices "/>
				</xs:extension>
			</xs:complexContent>
		</xs:complexType>
	</xs:element>
	<xs:complexType name="appendices.class">
		<xs:sequence>
			<xs:group ref="appendices.content"/>
		</xs:sequence>
		<xs:attributeGroup ref="appendices.attributes"/>
	</xs:complexType>
	<xs:group name="appendices.content">
		<xs:sequence>
			<xs:sequence>
				<xs:group ref="topicmeta" minOccurs="0"/>
				<xs:group ref="appendix" minOccurs="0" maxOccurs="unbounded"/>
			</xs:sequence>
		</xs:sequence>
	</xs:group>
	<xs:attributeGroup name="appendices.attributes">
		<xs:attributeGroup ref="chapter-atts"/>
		<xs:attributeGroup ref="global-atts"/>
	</xs:attributeGroup>
	<xs:element name="notices">
		<xs:annotation>
			<xs:documentation>The &lt;notices&gt; element references special notice information,
                for example, legal notices about supplementary copyrights and trademarks associated
                with the book.</xs:documentation>
		</xs:annotation>
		<xs:complexType>
			<xs:complexContent>
				<xs:extension base="notices.class">
					<xs:attribute ref="class" default="- map/topicref bookmap/notices "/>
				</xs:extension>
			</xs:complexContent>
		</xs:complexType>
	</xs:element>
	<xs:complexType name="notices.class">
		<xs:sequence>
			<xs:group ref="notices.content"/>
		</xs:sequence>
		<xs:attributeGroup ref="notices.attributes"/>
	</xs:complexType>
	<xs:group name="notices.content">
		<xs:sequence>
			<xs:sequence>
				<xs:group ref="topicmeta" minOccurs="0"/>
				<xs:group ref="topicref" minOccurs="0" maxOccurs="unbounded"/>
			</xs:sequence>
		</xs:sequence>
	</xs:group>
	<xs:attributeGroup name="notices.attributes">
		<xs:attributeGroup ref="chapter-atts"/>
		<xs:attributeGroup ref="global-atts"/>
	</xs:attributeGroup>
	<xs:element name="amendments">
		<xs:annotation>
			<xs:documentation>The &lt;amendments&gt; element references a list of amendments or
                updates to the book. It indicates to the processing software that the author
                wants an amendments list generated at the particular location. </xs:documentation>
		</xs:annotation>
		<xs:complexType>
			<xs:complexContent>
				<xs:extension base="amendments.class">
					<xs:attribute ref="class" default="- map/topicref bookmap/amendments "/>
				</xs:extension>
			</xs:complexContent>
		</xs:complexType>
	</xs:element>
	<xs:complexType name="amendments.class">
		<xs:attributeGroup ref="amendments.attributes"/>
	</xs:complexType>
	<xs:attributeGroup name="amendments.attributes">
		<xs:attributeGroup ref="chapter-atts"/>
		<xs:attributeGroup ref="global-atts"/>
	</xs:attributeGroup>
	<xs:element name="colophon">
		<xs:annotation>
			<xs:documentation>The &lt;colophon&gt; element references a topic describing how this
                document was created. In publishing, a colophon describes details of the production
                of a book. This information generally includes the typefaces used, and often
                the names of their designers; the paper, ink and details of the binding materials
                and methods may also receive mention. In the case of technical books, a colophon
                may specify the software used to prepare the text and diagrams for publication. </xs:documentation>
		</xs:annotation>
		<xs:complexType>
			<xs:complexContent>
				<xs:extension base="colophon.class">
					<xs:attribute ref="class" default="- map/topicref bookmap/colophon "/>
				</xs:extension>
			</xs:complexContent>
		</xs:complexType>
	</xs:element>
	<xs:complexType name="colophon.class">
		<xs:attributeGroup ref="colophon.attributes"/>
	</xs:complexType>
	<xs:attributeGroup name="colophon.attributes">
		<xs:attributeGroup ref="chapter-atts"/>
		<xs:attributeGroup ref="global-atts"/>
	</xs:attributeGroup>
	<xs:element name="booklists">
		<xs:annotation>
			<xs:documentation>The &lt;booklists&gt; element references lists of various kinds within
                the book. For example, it can be used within front matter to reference a &lt;toc&gt;,
                &lt;tablelist&gt;, and &lt;figurelist&gt;, or within back matter to reference a
                &lt;glossarylist&gt;, &lt;indexlist&gt;, and &lt;abbrevlist&gt;. It indicates to the
                processing software that the author wants the lists generated at the &lt;booklists&gt;
                location. </xs:documentation>
		</xs:annotation>
		<xs:complexType>
			<xs:complexContent>
				<xs:extension base="booklists.class">
					<xs:attribute ref="class" default="- map/topicref  bookmap/booklists "/>
				</xs:extension>
			</xs:complexContent>
		</xs:complexType>
	</xs:element>
	<xs:complexType name="booklists.class">
		<xs:choice minOccurs="0" maxOccurs="unbounded">
			<xs:group ref="toc"/>
			<xs:group ref="figurelist"/>
			<xs:group ref="tablelist"/>
			<xs:group ref="abbrevlist"/>
			<xs:group ref="trademarklist"/>
			<xs:group ref="bibliolist"/>
			<xs:group ref="glossarylist"/>
			<xs:group ref="indexlist"/>
			<xs:group ref="booklist"/>
		</xs:choice>
		<xs:attributeGroup ref="booklists.attributes"/>
	</xs:complexType>
	<xs:attributeGroup name="booklists.attributes">
		<xs:attribute name="keyref" type="xs:string"/>
		<xs:attributeGroup ref="topicref-atts"/>
		<xs:attributeGroup ref="id-atts"/>
		<xs:attributeGroup ref="select-atts"/>
		<xs:attributeGroup ref="localization-atts"/>
		<xs:attributeGroup ref="global-atts"/>
	</xs:attributeGroup>
	<xs:element name="toc">
		<xs:annotation>
			<xs:documentation>The &lt;toc&gt; element references the table of contents within the
                book. It indicates to the processing software that the author wants a table
                of contents generated at the particular location.</xs:documentation>
		</xs:annotation>
		<xs:complexType>
			<xs:complexContent>
				<xs:extension base="toc.class">
					<xs:attribute ref="class" default="- map/topicref bookmap/toc "/>
				</xs:extension>
			</xs:complexContent>
		</xs:complexType>
	</xs:element>
	<xs:complexType name="toc.class">
		<xs:attributeGroup ref="toc.attributes"/>
	</xs:complexType>
	<xs:attributeGroup name="toc.attributes">
		<xs:attributeGroup ref="chapter-atts"/>
		<xs:attributeGroup ref="global-atts"/>
	</xs:attributeGroup>
	<xs:element name="figurelist">
		<xs:annotation>
			<xs:documentation>The &lt;figurelist&gt; element references a list of figures in the
                book. It indicates to the processing software that the author wants a list
                of figures generated at the particular location. </xs:documentation>
		</xs:annotation>
		<xs:complexType>
			<xs:complexContent>
				<xs:extension base="figurelist.class">
					<xs:attribute ref="class" default="- map/topicref bookmap/figurelist "/>
				</xs:extension>
			</xs:complexContent>
		</xs:complexType>
	</xs:element>
	<xs:complexType name="figurelist.class">
		<xs:attributeGroup ref="figurelist.attributes"/>
	</xs:complexType>
	<xs:attributeGroup name="figurelist.attributes">
		<xs:attributeGroup ref="chapter-atts"/>
		<xs:attributeGroup ref="global-atts"/>
	</xs:attributeGroup>
	<xs:element name="tablelist">
		<xs:annotation>
			<xs:documentation>The &lt;tablelist&gt; element references a list of tables within the
                book. It indicates to the processing software that the author wants a list
                of tables generated at the particular location.</xs:documentation>
		</xs:annotation>
		<xs:complexType>
			<xs:complexContent>
				<xs:extension base="tablelist.class">
					<xs:attribute ref="class" default="- map/topicref bookmap/tablelist "/>
				</xs:extension>
			</xs:complexContent>
		</xs:complexType>
	</xs:element>
	<xs:complexType name="tablelist.class">
		<xs:attributeGroup ref="tablelist.attributes"/>
	</xs:complexType>
	<xs:attributeGroup name="tablelist.attributes">
		<xs:attributeGroup ref="chapter-atts"/>
		<xs:attributeGroup ref="global-atts"/>
	</xs:attributeGroup>
	<xs:element name="abbrevlist">
		<xs:annotation>
			<xs:documentation>The &lt;abbrevlist&gt; element references a list of abbreviations.
                It indicates to the processing software that the author wants an abbreviation
                list generated at the particular location. </xs:documentation>
		</xs:annotation>
		<xs:complexType>
			<xs:complexContent>
				<xs:extension base="abbrevlist.class">
					<xs:attribute ref="class" default="- map/topicref bookmap/abbrevlist "/>
				</xs:extension>
			</xs:complexContent>
		</xs:complexType>
	</xs:element>
	<xs:complexType name="abbrevlist.class">
		<xs:attributeGroup ref="abbrevlist.attributes"/>
	</xs:complexType>
	<xs:attributeGroup name="abbrevlist.attributes">
		<xs:attributeGroup ref="chapter-atts"/>
		<xs:attributeGroup ref="global-atts"/>
	</xs:attributeGroup>
	<xs:element name="trademarklist">
		<xs:annotation>
			<xs:documentation>The &lt;trademarklist&gt; element references a list of trademarks
                within the book. It indicates to the processing software that the author wants
                a list of trademarks generated at the particular location.</xs:documentation>
		</xs:annotation>
		<xs:complexType>
			<xs:complexContent>
				<xs:extension base="trademarklist.class">
					<xs:attribute ref="class" default="- map/topicref bookmap/trademarklist "/>
				</xs:extension>
			</xs:complexContent>
		</xs:complexType>
	</xs:element>
	<xs:complexType name="trademarklist.class">
		<xs:attributeGroup ref="trademarklist.attributes"/>
	</xs:complexType>
	<xs:attributeGroup name="trademarklist.attributes">
		<xs:attributeGroup ref="chapter-atts"/>
		<xs:attributeGroup ref="global-atts"/>
	</xs:attributeGroup>
	<xs:element name="bibliolist">
		<xs:annotation>
			<xs:documentation>The &lt;bibliolist&gt; element references a list of bibliographic
                entries within the book. It indicates to the processing software that the
                author wants a bibliography, containing links to related books, articles,
                published papers, or other types of material, generated at the particular
                location. </xs:documentation>
		</xs:annotation>
		<xs:complexType>
			<xs:complexContent>
				<xs:extension base="bibliolist.class">
					<xs:attribute ref="class" default="- map/topicref bookmap/bibliolist "/>
				</xs:extension>
			</xs:complexContent>
		</xs:complexType>
	</xs:element>
	<xs:complexType name="bibliolist.class">
		<xs:attributeGroup ref="bibliolist.attributes"/>
	</xs:complexType>
	<xs:attributeGroup name="bibliolist.attributes">
		<xs:attributeGroup ref="chapter-atts"/>
		<xs:attributeGroup ref="global-atts"/>
	</xs:attributeGroup>
	<xs:element name="glossarylist">
		<xs:annotation>
			<xs:documentation>The &lt;glossarylist&gt; element references a list of glossary entries
                within the book. It indicates to the processing software that the author wants
                a glossary list generated at the particular location. </xs:documentation>
		</xs:annotation>
		<xs:complexType>
			<xs:complexContent>
				<xs:extension base="glossarylist.class">
					<xs:attribute ref="class" default="- map/topicref bookmap/glossarylist "/>
				</xs:extension>
			</xs:complexContent>
		</xs:complexType>
	</xs:element>
	<xs:complexType name="glossarylist.class">
		<xs:sequence>
			<xs:group ref="glossarylist.content"/>
		</xs:sequence>
		<xs:attributeGroup ref="glossarylist.attributes"/>
	</xs:complexType>
	<xs:group name="glossarylist.content">
		<xs:sequence>
			<xs:sequence>
				<xs:group ref="topicmeta" minOccurs="0"/>
				<xs:group ref="topicref" minOccurs="0" maxOccurs="unbounded"/>
			</xs:sequence>
		</xs:sequence>
	</xs:group>
	<xs:attributeGroup name="glossarylist.attributes">
		<xs:attributeGroup ref="chapter-atts"/>
		<xs:attributeGroup ref="global-atts"/>
	</xs:attributeGroup>
	<xs:element name="indexlist">
		<xs:annotation>
			<xs:documentation>The &lt;indexlist&gt; element lists the index entries in the book.
                It indicates to the processing software that the author wants an index generated
                at the particular location. </xs:documentation>
		</xs:annotation>
		<xs:complexType>
			<xs:complexContent>
				<xs:extension base="indexlist.class">
					<xs:attribute ref="class" default="- map/topicref bookmap/indexlist "/>
				</xs:extension>
			</xs:complexContent>
		</xs:complexType>
	</xs:element>
	<xs:complexType name="indexlist.class">
		<xs:attributeGroup ref="indexlist.attributes"/>
	</xs:complexType>
	<xs:attributeGroup name="indexlist.attributes">
		<xs:attributeGroup ref="chapter-atts"/>
		<xs:attributeGroup ref="global-atts"/>
	</xs:attributeGroup>
	<xs:element name="booklist">
		<xs:annotation>
			<xs:documentation>The &lt;booklist&gt; element is a general purpose element, designed
                for use in specializations, that references a list of particular types of
                topics within the book. It indicates to the processing software that the author
                wants that list of topics generated at the particular location. For example,
                it could be used in a specialization to reference the location of a list of
                program listings or of authors of topics.</xs:documentation>
		</xs:annotation>
		<xs:complexType>
			<xs:complexContent>
				<xs:extension base="booklist.class">
					<xs:attribute ref="class" default="- map/topicref bookmap/booklist "/>
				</xs:extension>
			</xs:complexContent>
		</xs:complexType>
	</xs:element>
	<xs:complexType name="booklist.class">
		<xs:attributeGroup ref="booklist.attributes"/>
	</xs:complexType>
	<xs:attributeGroup name="booklist.attributes">
		<xs:attributeGroup ref="chapter-atts"/>
		<xs:attributeGroup ref="global-atts"/>
	</xs:attributeGroup>
	<xs:annotation>
		<xs:appinfo>
			<dita:domainsModule xmlns:dita="http://dita.oasis-open.org/architecture/2005/">(topic delay-d)</dita:domainsModule>
		</xs:appinfo>
		<xs:documentation>
      
    </xs:documentation>
	</xs:annotation>
	<xs:group name="delay-d-keywords">
		<xs:choice>
			<xs:group ref="exportanchors"/>
		</xs:choice>
	</xs:group>
	<xs:group name="exportanchors">
		<xs:sequence>
			<xs:choice>
				<xs:element ref="exportanchors"/>
			</xs:choice>
		</xs:sequence>
	</xs:group>
	<xs:group name="anchorid">
		<xs:sequence>
			<xs:choice>
				<xs:element ref="anchorid"/>
			</xs:choice>
		</xs:sequence>
	</xs:group>
	<xs:group name="anchorkey">
		<xs:sequence>
			<xs:choice>
				<xs:element ref="anchorkey"/>
			</xs:choice>
		</xs:sequence>
	</xs:group>
	<xs:element name="exportanchors">
		<xs:complexType>
			<xs:complexContent>
				<xs:extension base="exportanchors.class">
					<xs:attribute ref="class" default="+ topic/keywords delay-d/exportanchors "/>
				</xs:extension>
			</xs:complexContent>
		</xs:complexType>
	</xs:element>
	<xs:complexType name="exportanchors.class">
		<xs:sequence>
			<xs:group ref="exportanchors.content"/>
		</xs:sequence>
		<xs:attributeGroup ref="exportanchors.attributes"/>
	</xs:complexType>
	<xs:group name="exportanchors.content">
		<xs:sequence>
			<xs:choice minOccurs="0" maxOccurs="unbounded">
				<xs:group ref="anchorid" minOccurs="0"/>
				<xs:group ref="anchorkey" minOccurs="0"/>
			</xs:choice>
		</xs:sequence>
	</xs:group>
	<xs:attributeGroup name="exportanchors.attributes">
		<xs:attributeGroup ref="univ-atts"/>
		<xs:attributeGroup ref="global-atts"/>
	</xs:attributeGroup>
	<xs:element name="anchorid">
		<xs:complexType>
			<xs:complexContent>
				<xs:extension base="anchorid.class">
					<xs:attribute ref="class" default="+ topic/keyword delay-d/anchorid "/>
				</xs:extension>
			</xs:complexContent>
		</xs:complexType>
	</xs:element>
	<xs:complexType name="anchorid.class">
		<xs:attributeGroup ref="anchorid.attributes"/>
	</xs:complexType>
	<xs:attributeGroup name="anchorid.attributes">
		<xs:attribute name="keyref" type="xs:string"/>
		<xs:attribute name="id" type="xs:NMTOKEN" use="required"/>
		<xs:attribute name="outputclass" type="xs:string"/>
		<xs:attributeGroup ref="localization-atts"/>
		<xs:attributeGroup ref="select-atts"/>
		<xs:attributeGroup ref="conref-atts"/>
		<xs:attributeGroup ref="global-atts"/>
	</xs:attributeGroup>
	<xs:element name="anchorkey">
		<xs:annotation>
			<xs:documentation>The &lt;<keyword>keyword</keyword>> element identifies a keyword
        or token, such as a single value from an enumerated list, the name of a command
        or parameter, or a lookup key for a message (contrast with <xref href="term.xml">term</xref>).
      </xs:documentation>
		</xs:annotation>
		<xs:complexType>
			<xs:complexContent>
				<xs:extension base="anchorkey.class">
					<xs:attribute ref="class" default="+ topic/keyword delay-d/anchorkey "/>
				</xs:extension>
			</xs:complexContent>
		</xs:complexType>
	</xs:element>
	<xs:complexType name="anchorkey.class">
		<xs:attributeGroup ref="anchorkey.attributes"/>
	</xs:complexType>
	<xs:attributeGroup name="anchorkey.attributes">
		<xs:attribute name="keyref" type="xs:string" use="required"/>
		<xs:attribute name="outputclass" type="xs:string"/>
		<xs:attributeGroup ref="univ-atts"/>
		<xs:attributeGroup ref="global-atts"/>
	</xs:attributeGroup>
	<!-- <!ENTITY xnal-d-att "(topic xnal-d)"                                 >-->
	<xs:annotation>
		<xs:appinfo>
			<dita:domainsModule xmlns:dita="http://dita.oasis-open.org/architecture/2005/">(topic xnal-d)</dita:domainsModule>
		</xs:appinfo>
		<xs:documentation> 
    
    </xs:documentation>
	</xs:annotation>
	<xs:group name="xnal-d-author">
		<xs:choice>
			<xs:group ref="authorinformation"/>
		</xs:choice>
	</xs:group>
	<xs:group name="authorinformation">
		<xs:sequence>
			<xs:choice>
				<xs:element ref="authorinformation"/>
			</xs:choice>
		</xs:sequence>
	</xs:group>
	<xs:group name="addressdetails">
		<xs:sequence>
			<xs:choice>
				<xs:element ref="addressdetails"/>
			</xs:choice>
		</xs:sequence>
	</xs:group>
	<xs:group name="administrativearea">
		<xs:sequence>
			<xs:choice>
				<xs:element ref="administrativearea"/>
			</xs:choice>
		</xs:sequence>
	</xs:group>
	<xs:group name="contactnumber">
		<xs:sequence>
			<xs:choice>
				<xs:element ref="contactnumber"/>
			</xs:choice>
		</xs:sequence>
	</xs:group>
	<xs:group name="contactnumbers">
		<xs:sequence>
			<xs:choice>
				<xs:element ref="contactnumbers"/>
			</xs:choice>
		</xs:sequence>
	</xs:group>
	<xs:group name="country">
		<xs:sequence>
			<xs:choice>
				<xs:element ref="country"/>
			</xs:choice>
		</xs:sequence>
	</xs:group>
	<xs:group name="emailaddress">
		<xs:sequence>
			<xs:choice>
				<xs:element ref="emailaddress"/>
			</xs:choice>
		</xs:sequence>
	</xs:group>
	<xs:group name="emailaddresses">
		<xs:sequence>
			<xs:choice>
				<xs:element ref="emailaddresses"/>
			</xs:choice>
		</xs:sequence>
	</xs:group>
	<xs:group name="firstname">
		<xs:sequence>
			<xs:choice>
				<xs:element ref="firstname"/>
			</xs:choice>
		</xs:sequence>
	</xs:group>
	<xs:group name="generationidentifier">
		<xs:sequence>
			<xs:choice>
				<xs:element ref="generationidentifier"/>
			</xs:choice>
		</xs:sequence>
	</xs:group>
	<xs:group name="honorific">
		<xs:sequence>
			<xs:choice>
				<xs:element ref="honorific"/>
			</xs:choice>
		</xs:sequence>
	</xs:group>
	<xs:group name="lastname">
		<xs:sequence>
			<xs:choice>
				<xs:element ref="lastname"/>
			</xs:choice>
		</xs:sequence>
	</xs:group>
	<xs:group name="locality">
		<xs:sequence>
			<xs:choice>
				<xs:element ref="locality"/>
			</xs:choice>
		</xs:sequence>
	</xs:group>
	<xs:group name="localityname">
		<xs:sequence>
			<xs:choice>
				<xs:element ref="localityname"/>
			</xs:choice>
		</xs:sequence>
	</xs:group>
	<xs:group name="middlename">
		<xs:sequence>
			<xs:choice>
				<xs:element ref="middlename"/>
			</xs:choice>
		</xs:sequence>
	</xs:group>
	<xs:group name="namedetails">
		<xs:sequence>
			<xs:choice>
				<xs:element ref="namedetails"/>
			</xs:choice>
		</xs:sequence>
	</xs:group>
	<xs:group name="organizationinfo">
		<xs:sequence>
			<xs:choice>
				<xs:element ref="organizationinfo"/>
			</xs:choice>
		</xs:sequence>
	</xs:group>
	<xs:group name="organizationname">
		<xs:sequence>
			<xs:choice>
				<xs:element ref="organizationname"/>
			</xs:choice>
		</xs:sequence>
	</xs:group>
	<xs:group name="organizationnamedetails">
		<xs:sequence>
			<xs:choice>
				<xs:element ref="organizationnamedetails"/>
			</xs:choice>
		</xs:sequence>
	</xs:group>
	<xs:group name="otherinfo">
		<xs:sequence>
			<xs:choice>
				<xs:element ref="otherinfo"/>
			</xs:choice>
		</xs:sequence>
	</xs:group>
	<xs:group name="personinfo">
		<xs:sequence>
			<xs:choice>
				<xs:element ref="personinfo"/>
			</xs:choice>
		</xs:sequence>
	</xs:group>
	<xs:group name="personname">
		<xs:sequence>
			<xs:choice>
				<xs:element ref="personname"/>
			</xs:choice>
		</xs:sequence>
	</xs:group>
	<xs:group name="postalcode">
		<xs:sequence>
			<xs:choice>
				<xs:element ref="postalcode"/>
			</xs:choice>
		</xs:sequence>
	</xs:group>
	<xs:group name="thoroughfare">
		<xs:sequence>
			<xs:choice>
				<xs:element ref="thoroughfare"/>
			</xs:choice>
		</xs:sequence>
	</xs:group>
	<xs:group name="url">
		<xs:sequence>
			<xs:choice>
				<xs:element ref="url"/>
			</xs:choice>
		</xs:sequence>
	</xs:group>
	<xs:group name="urls">
		<xs:sequence>
			<xs:choice>
				<xs:element ref="urls"/>
			</xs:choice>
		</xs:sequence>
	</xs:group>
	<!--  Update type attr as per DITA Feature 12022  -->
	<xs:element name="authorinformation">
		<xs:annotation>
			<xs:documentation>The &lt;authorinformation&gt; element contains detailed information
                about the author or authoring organization. </xs:documentation>
		</xs:annotation>
		<xs:complexType>
			<xs:complexContent>
				<xs:extension base="authorinformation.class">
					<xs:attribute ref="class" default="+ topic/author xnal-d/authorinformation "/>
				</xs:extension>
			</xs:complexContent>
		</xs:complexType>
	</xs:element>
	<xs:complexType name="authorinformation.class">
		<xs:sequence>
			<xs:group ref="authorinformation.content"/>
		</xs:sequence>
		<xs:attributeGroup ref="authorinformation.attributes"/>
	</xs:complexType>
	<xs:group name="authorinformation.content">
		<xs:sequence>
			<xs:choice minOccurs="0" maxOccurs="unbounded">
				<xs:group ref="personinfo"/>
				<xs:group ref="organizationinfo"/>
			</xs:choice>
		</xs:sequence>
	</xs:group>
	<xs:attributeGroup name="authorinformation.attributes">
		<xs:attributeGroup ref="univ-atts"/>
		<xs:attribute name="href" type="xs:string"/>
		<xs:attribute name="format" type="xs:string"/>
		<xs:attribute name="scope" type="scope-att.class"/>
		<xs:attribute name="keyref" type="xs:string"/>
		<xs:attribute name="type" type="xs:string"/>
		<xs:attributeGroup ref="global-atts"/>
	</xs:attributeGroup>
	<!--<!ELEMENT addressdetails     (%words.cnt;|%locality;|%administrativearea;|
    %thoroughfare;|%country;)*                  >-->
	<xs:element name="addressdetails">
		<xs:annotation>
			<xs:documentation>The &lt;addressdetails&gt; element contains information about the
                address of the author or authoring group.</xs:documentation>
		</xs:annotation>
		<xs:complexType mixed="true">
			<xs:complexContent>
				<xs:extension base="addressdetails.class">
					<xs:attribute ref="class" default="+ topic/ph xnal-d/addressdetails "/>
				</xs:extension>
			</xs:complexContent>
		</xs:complexType>
	</xs:element>
	<xs:complexType name="addressdetails.class" mixed="true">
		<xs:sequence>
			<xs:group ref="addressdetails.content"/>
		</xs:sequence>
		<xs:attributeGroup ref="addressdetails.attributes"/>
	</xs:complexType>
	<xs:group name="addressdetails.content">
		<xs:sequence>
			<xs:choice minOccurs="0" maxOccurs="unbounded">
				<xs:group ref="words.cnt" minOccurs="0"/>
				<xs:group ref="locality" minOccurs="0"/>
				<xs:group ref="administrativearea" minOccurs="0"/>
				<xs:group ref="thoroughfare" minOccurs="0"/>
				<xs:group ref="country" minOccurs="0"/>
			</xs:choice>
		</xs:sequence>
	</xs:group>
	<xs:attributeGroup name="addressdetails.attributes">
		<xs:attributeGroup ref="univ-atts"/>
		<xs:attribute name="keyref" type="xs:string"/>
		<xs:attribute name="outputclass" type="xs:string"/>
		<xs:attributeGroup ref="global-atts"/>
	</xs:attributeGroup>
	<xs:element name="administrativearea">
		<xs:annotation>
			<xs:documentation>The &lt;administrativearea&gt; element contains information about
                a county, state, or province. </xs:documentation>
		</xs:annotation>
		<xs:complexType mixed="true">
			<xs:complexContent>
				<xs:extension base="administrativearea.class">
					<xs:attribute ref="class" default="+ topic/ph xnal-d/administrativearea "/>
				</xs:extension>
			</xs:complexContent>
		</xs:complexType>
	</xs:element>
	<xs:complexType name="administrativearea.class" mixed="true">
		<xs:sequence>
			<xs:group ref="administrativearea.content"/>
		</xs:sequence>
		<xs:attributeGroup ref="administrativearea.attributes"/>
	</xs:complexType>
	<xs:group name="administrativearea.content">
		<xs:sequence>
			<xs:choice minOccurs="0" maxOccurs="unbounded">
				<xs:group ref="words.cnt"/>
			</xs:choice>
		</xs:sequence>
	</xs:group>
	<xs:attributeGroup name="administrativearea.attributes">
		<xs:attributeGroup ref="univ-atts"/>
		<xs:attribute name="keyref" type="xs:string"/>
		<xs:attribute name="outputclass" type="xs:string"/>
		<xs:attributeGroup ref="global-atts"/>
	</xs:attributeGroup>
	<xs:element name="contactnumber">
		<xs:annotation>
			<xs:documentation>A &lt;contactnumber&gt; element contains a telephone number. </xs:documentation>
		</xs:annotation>
		<xs:complexType mixed="true">
			<xs:complexContent>
				<xs:extension base="contactnumber.class">
					<xs:attribute ref="class" default="+ topic/data xnal-d/contactnumber "/>
				</xs:extension>
			</xs:complexContent>
		</xs:complexType>
	</xs:element>
	<xs:complexType name="contactnumber.class" mixed="true">
		<xs:sequence>
			<xs:group ref="contactnumber.content"/>
		</xs:sequence>
		<xs:attributeGroup ref="contactnumber.attributes"/>
	</xs:complexType>
	<xs:group name="contactnumber.content">
		<xs:sequence>
			<xs:choice minOccurs="0" maxOccurs="unbounded">
				<xs:group ref="keyword"/>
			</xs:choice>
		</xs:sequence>
	</xs:group>
	<xs:attributeGroup name="contactnumber.attributes">
		<xs:attributeGroup ref="data-element-atts.class"/>
		<xs:attributeGroup ref="global-atts"/>
	</xs:attributeGroup>
	<xs:element name="contactnumbers">
		<xs:annotation>
			<xs:documentation>The &lt;contactnumbers&gt; element contains a list of telephone and
                fax numbers. </xs:documentation>
		</xs:annotation>
		<xs:complexType>
			<xs:complexContent>
				<xs:extension base="contactnumbers.class">
					<xs:attribute ref="class" default="+ topic/data xnal-d/contactnumbers "/>
				</xs:extension>
			</xs:complexContent>
		</xs:complexType>
	</xs:element>
	<xs:complexType name="contactnumbers.class">
		<xs:sequence>
			<xs:group ref="contactnumbers.content"/>
		</xs:sequence>
		<xs:attributeGroup ref="contactnumbers.attributes"/>
	</xs:complexType>
	<xs:group name="contactnumbers.content">
		<xs:sequence>
			<xs:choice minOccurs="0" maxOccurs="unbounded">
				<xs:group ref="contactnumber"/>
			</xs:choice>
		</xs:sequence>
	</xs:group>
	<xs:attributeGroup name="contactnumbers.attributes">
		<xs:attributeGroup ref="data-element-atts.class"/>
		<xs:attributeGroup ref="global-atts"/>
	</xs:attributeGroup>
	<xs:element name="country">
		<xs:annotation>
			<xs:documentation>The &lt;country&gt; element contains the name of a country. </xs:documentation>
		</xs:annotation>
		<xs:complexType mixed="true">
			<xs:complexContent>
				<xs:extension base="country.class">
					<xs:attribute ref="class" default="+ topic/ph xnal-d/country "/>
				</xs:extension>
			</xs:complexContent>
		</xs:complexType>
	</xs:element>
	<xs:complexType name="country.class" mixed="true">
		<xs:sequence>
			<xs:group ref="country.content"/>
		</xs:sequence>
		<xs:attributeGroup ref="country.attributes"/>
	</xs:complexType>
	<xs:group name="country.content">
		<xs:sequence>
			<xs:choice minOccurs="0" maxOccurs="unbounded">
				<xs:group ref="keyword"/>
			</xs:choice>
		</xs:sequence>
	</xs:group>
	<xs:attributeGroup name="country.attributes">
		<xs:attributeGroup ref="univ-atts"/>
		<xs:attribute name="keyref" type="xs:string"/>
		<xs:attribute name="outputclass" type="xs:string"/>
		<xs:attributeGroup ref="global-atts"/>
	</xs:attributeGroup>
	<xs:element name="emailaddress">
		<xs:annotation>
			<xs:documentation>The &lt;emailaddress&gt; element contains an e-mail address. </xs:documentation>
		</xs:annotation>
		<xs:complexType mixed="true">
			<xs:complexContent>
				<xs:extension base="emailaddress.class">
					<xs:attribute ref="class" default="+ topic/data xnal-d/emailaddress "/>
				</xs:extension>
			</xs:complexContent>
		</xs:complexType>
	</xs:element>
	<xs:complexType name="emailaddress.class" mixed="true">
		<xs:sequence>
			<xs:group ref="emailaddress.content"/>
		</xs:sequence>
		<xs:attributeGroup ref="emailaddress.attributes"/>
	</xs:complexType>
	<xs:group name="emailaddress.content">
		<xs:sequence>
			<xs:choice minOccurs="0" maxOccurs="unbounded">
				<xs:group ref="words.cnt"/>
			</xs:choice>
		</xs:sequence>
	</xs:group>
	<xs:attributeGroup name="emailaddress.attributes">
		<xs:attributeGroup ref="data-element-atts.class"/>
		<xs:attributeGroup ref="global-atts"/>
	</xs:attributeGroup>
	<xs:element name="emailaddresses">
		<xs:annotation>
			<xs:documentation>The &lt;emailaddress&gt; element contains a list of e-mail addresses. </xs:documentation>
		</xs:annotation>
		<xs:complexType>
			<xs:complexContent>
				<xs:extension base="emailaddresses.class">
					<xs:attribute ref="class" default="+ topic/data xnal-d/emailaddresses "/>
				</xs:extension>
			</xs:complexContent>
		</xs:complexType>
	</xs:element>
	<xs:complexType name="emailaddresses.class">
		<xs:sequence>
			<xs:group ref="emailaddresses.content"/>
		</xs:sequence>
		<xs:attributeGroup ref="emailaddresses.attributes"/>
	</xs:complexType>
	<xs:group name="emailaddresses.content">
		<xs:sequence>
			<xs:choice minOccurs="0" maxOccurs="unbounded">
				<xs:group ref="emailaddress"/>
			</xs:choice>
		</xs:sequence>
	</xs:group>
	<xs:attributeGroup name="emailaddresses.attributes">
		<xs:attributeGroup ref="data-element-atts.class"/>
		<xs:attributeGroup ref="global-atts"/>
	</xs:attributeGroup>
	<xs:element name="firstname">
		<xs:annotation>
			<xs:documentation>The &lt;firstname&gt; element contains the person's first name. </xs:documentation>
		</xs:annotation>
		<xs:complexType mixed="true">
			<xs:complexContent>
				<xs:extension base="firstname.class">
					<xs:attribute ref="class" default="+ topic/data xnal-d/firstname "/>
				</xs:extension>
			</xs:complexContent>
		</xs:complexType>
	</xs:element>
	<xs:complexType name="firstname.class" mixed="true">
		<xs:sequence>
			<xs:group ref="firstname.content"/>
		</xs:sequence>
		<xs:attributeGroup ref="firstname.attributes"/>
	</xs:complexType>
	<xs:group name="firstname.content">
		<xs:sequence>
			<xs:choice minOccurs="0" maxOccurs="unbounded">
				<xs:group ref="keyword"/>
			</xs:choice>
		</xs:sequence>
	</xs:group>
	<xs:attributeGroup name="firstname.attributes">
		<xs:attributeGroup ref="data-element-atts.class"/>
		<xs:attributeGroup ref="global-atts"/>
	</xs:attributeGroup>
	<xs:element name="generationidentifier">
		<xs:annotation>
			<xs:documentation>The &lt;generationidentifier&gt; element contains information about
                the person's generation, such as: Jr, III, or VIII.</xs:documentation>
		</xs:annotation>
		<xs:complexType mixed="true">
			<xs:complexContent>
				<xs:extension base="generationidentifier.class">
					<xs:attribute ref="class" default="+ topic/data xnal-d/generationidentifier "/>
				</xs:extension>
			</xs:complexContent>
		</xs:complexType>
	</xs:element>
	<xs:complexType name="generationidentifier.class" mixed="true">
		<xs:sequence>
			<xs:group ref="generationidentifier.content"/>
		</xs:sequence>
		<xs:attributeGroup ref="generationidentifier.attributes"/>
	</xs:complexType>
	<xs:group name="generationidentifier.content">
		<xs:sequence>
			<xs:choice minOccurs="0" maxOccurs="unbounded">
				<xs:group ref="keyword"/>
			</xs:choice>
		</xs:sequence>
	</xs:group>
	<xs:attributeGroup name="generationidentifier.attributes">
		<xs:attributeGroup ref="data-element-atts.class"/>
		<xs:attributeGroup ref="global-atts"/>
	</xs:attributeGroup>
	<xs:element name="honorific">
		<xs:annotation>
			<xs:documentation>The &lt;honorific&gt; element contains the person's title, such as:
                Dr., Mr., Ms., HRH.. or Grand Exalted Wizard. </xs:documentation>
		</xs:annotation>
		<xs:complexType mixed="true">
			<xs:complexContent>
				<xs:extension base="honorific.class">
					<xs:attribute ref="class" default="+ topic/data xnal-d/honorific "/>
				</xs:extension>
			</xs:complexContent>
		</xs:complexType>
	</xs:element>
	<xs:complexType name="honorific.class" mixed="true">
		<xs:sequence>
			<xs:group ref="honorific.content"/>
		</xs:sequence>
		<xs:attributeGroup ref="honorific.attributes"/>
	</xs:complexType>
	<xs:group name="honorific.content">
		<xs:sequence>
			<xs:choice minOccurs="0" maxOccurs="unbounded">
				<xs:group ref="keyword"/>
			</xs:choice>
		</xs:sequence>
	</xs:group>
	<xs:attributeGroup name="honorific.attributes">
		<xs:attributeGroup ref="data-element-atts.class"/>
		<xs:attributeGroup ref="global-atts"/>
	</xs:attributeGroup>
	<xs:element name="lastname">
		<xs:annotation>
			<xs:documentation>The &lt;lastname&gt; element contains the person's last name. </xs:documentation>
		</xs:annotation>
		<xs:complexType mixed="true">
			<xs:complexContent>
				<xs:extension base="lastname.class">
					<xs:attribute ref="class" default="+ topic/data xnal-d/lastname "/>
				</xs:extension>
			</xs:complexContent>
		</xs:complexType>
	</xs:element>
	<xs:complexType name="lastname.class" mixed="true">
		<xs:sequence>
			<xs:group ref="lastname.content"/>
		</xs:sequence>
		<xs:attributeGroup ref="lastname.attributes"/>
	</xs:complexType>
	<xs:group name="lastname.content">
		<xs:sequence>
			<xs:choice minOccurs="0" maxOccurs="unbounded">
				<xs:group ref="keyword"/>
			</xs:choice>
		</xs:sequence>
	</xs:group>
	<xs:attributeGroup name="lastname.attributes">
		<xs:attributeGroup ref="data-element-atts.class"/>
		<xs:attributeGroup ref="global-atts"/>
	</xs:attributeGroup>
	<xs:element name="locality">
		<xs:annotation>
			<xs:documentation>The &lt;locality&gt; element contains information about the city and
                postal or ZIP code. It can contain the information directly, or by acting
                as a wrapper for &lt;localityname&gt; and &lt;postalcode&gt;. </xs:documentation>
		</xs:annotation>
		<xs:complexType mixed="true">
			<xs:complexContent>
				<xs:extension base="locality.class">
					<xs:attribute ref="class" default="+ topic/ph xnal-d/locality "/>
				</xs:extension>
			</xs:complexContent>
		</xs:complexType>
	</xs:element>
	<xs:complexType name="locality.class" mixed="true">
		<xs:sequence>
			<xs:group ref="locality.content"/>
		</xs:sequence>
		<xs:attributeGroup ref="locality.attributes"/>
	</xs:complexType>
	<xs:group name="locality.content">
		<xs:sequence>
			<xs:choice minOccurs="0" maxOccurs="unbounded">
				<xs:group ref="words.cnt" minOccurs="0"/>
				<xs:group ref="localityname" minOccurs="0"/>
				<xs:group ref="postalcode" minOccurs="0"/>
			</xs:choice>
		</xs:sequence>
	</xs:group>
	<xs:attributeGroup name="locality.attributes">
		<xs:attributeGroup ref="univ-atts"/>
		<xs:attribute name="keyref" type="xs:string"/>
		<xs:attribute name="outputclass" type="xs:string"/>
		<xs:attributeGroup ref="global-atts"/>
	</xs:attributeGroup>
	<xs:element name="localityname">
		<xs:annotation>
			<xs:documentation>The &lt;localityname&gt; element contains the name of the locality
                or city.</xs:documentation>
		</xs:annotation>
		<xs:complexType mixed="true">
			<xs:complexContent>
				<xs:extension base="localityname.class">
					<xs:attribute ref="class" default="+ topic/ph xnal-d/localityname "/>
				</xs:extension>
			</xs:complexContent>
		</xs:complexType>
	</xs:element>
	<xs:complexType name="localityname.class" mixed="true">
		<xs:sequence>
			<xs:group ref="localityname.content"/>
		</xs:sequence>
		<xs:attributeGroup ref="localityname.attributes"/>
	</xs:complexType>
	<xs:group name="localityname.content">
		<xs:sequence>
			<xs:choice minOccurs="0" maxOccurs="unbounded">
				<xs:group ref="words.cnt"/>
			</xs:choice>
		</xs:sequence>
	</xs:group>
	<xs:attributeGroup name="localityname.attributes">
		<xs:attributeGroup ref="univ-atts"/>
		<xs:attribute name="keyref" type="xs:string"/>
		<xs:attribute name="outputclass" type="xs:string"/>
		<xs:attributeGroup ref="global-atts"/>
	</xs:attributeGroup>
	<xs:element name="middlename">
		<xs:annotation>
			<xs:documentation>The &lt;middlename&gt; element contains the person's middle name or
                initial. </xs:documentation>
		</xs:annotation>
		<xs:complexType mixed="true">
			<xs:complexContent>
				<xs:extension base="middlename.class">
					<xs:attribute ref="class" default="+ topic/data xnal-d/middlename "/>
				</xs:extension>
			</xs:complexContent>
		</xs:complexType>
	</xs:element>
	<xs:complexType name="middlename.class" mixed="true">
		<xs:sequence>
			<xs:group ref="middlename.content"/>
		</xs:sequence>
		<xs:attributeGroup ref="middlename.attributes"/>
	</xs:complexType>
	<xs:group name="middlename.content">
		<xs:sequence>
			<xs:choice minOccurs="0" maxOccurs="unbounded">
				<xs:group ref="keyword"/>
			</xs:choice>
		</xs:sequence>
	</xs:group>
	<xs:attributeGroup name="middlename.attributes">
		<xs:attributeGroup ref="data-element-atts.class"/>
		<xs:attributeGroup ref="global-atts"/>
	</xs:attributeGroup>
	<xs:element name="namedetails">
		<xs:annotation>
			<xs:documentation>The &lt;namedetails&gt; element contains information about the name
                of the author or the authoring organization. </xs:documentation>
		</xs:annotation>
		<xs:complexType>
			<xs:complexContent>
				<xs:extension base="namedetails.class">
					<xs:attribute ref="class" default="+ topic/data xnal-d/namedetails "/>
				</xs:extension>
			</xs:complexContent>
		</xs:complexType>
	</xs:element>
	<xs:complexType name="namedetails.class">
		<xs:sequence>
			<xs:group ref="namedetails.content"/>
		</xs:sequence>
		<xs:attributeGroup ref="namedetails.attributes"/>
	</xs:complexType>
	<xs:group name="namedetails.content">
		<xs:sequence>
			<xs:choice minOccurs="0" maxOccurs="unbounded">
				<xs:group ref="personname"/>
				<xs:group ref="organizationnamedetails"/>
			</xs:choice>
		</xs:sequence>
	</xs:group>
	<xs:attributeGroup name="namedetails.attributes">
		<xs:attributeGroup ref="data-element-atts.class"/>
		<xs:attributeGroup ref="global-atts"/>
	</xs:attributeGroup>
	<xs:element name="organizationinfo">
		<xs:annotation>
			<xs:documentation>The &lt;organizationinfo&gt; element contains detailed information
                about an authoring organization. </xs:documentation>
		</xs:annotation>
		<xs:complexType>
			<xs:complexContent>
				<xs:extension base="organizationinfo.class">
					<xs:attribute ref="class" default="+ topic/data xnal-d/organizationinfo "/>
				</xs:extension>
			</xs:complexContent>
		</xs:complexType>
	</xs:element>
	<xs:complexType name="organizationinfo.class">
		<xs:sequence>
			<xs:group ref="organizationinfo.content"/>
		</xs:sequence>
		<xs:attributeGroup ref="organizationinfo.attributes"/>
	</xs:complexType>
	<xs:group name="organizationinfo.content">
		<xs:sequence>
			<xs:sequence>
				<xs:group ref="namedetails" minOccurs="0"/>
				<xs:group ref="addressdetails" minOccurs="0"/>
				<xs:group ref="contactnumbers" minOccurs="0"/>
				<xs:group ref="emailaddresses" minOccurs="0"/>
				<xs:group ref="urls" minOccurs="0"/>
			</xs:sequence>
		</xs:sequence>
	</xs:group>
	<xs:attributeGroup name="organizationinfo.attributes">
		<xs:attributeGroup ref="data-element-atts.class"/>
		<xs:attributeGroup ref="global-atts"/>
	</xs:attributeGroup>
	<xs:element name="organizationname">
		<xs:annotation>
			<xs:documentation>The &lt;organizationname&gt; element contains name information about
                the authoring organization. </xs:documentation>
		</xs:annotation>
		<xs:complexType mixed="true">
			<xs:complexContent>
				<xs:extension base="organizationname.class">
					<xs:attribute ref="class" default="+ topic/ph xnal-d/organizationname "/>
				</xs:extension>
			</xs:complexContent>
		</xs:complexType>
	</xs:element>
	<xs:complexType name="organizationname.class" mixed="true">
		<xs:sequence>
			<xs:group ref="organizationname.content"/>
		</xs:sequence>
		<xs:attributeGroup ref="organizationname.attributes"/>
	</xs:complexType>
	<xs:group name="organizationname.content">
		<xs:sequence>
			<xs:choice minOccurs="0" maxOccurs="unbounded">
				<xs:group ref="ph.cnt"/>
			</xs:choice>
		</xs:sequence>
	</xs:group>
	<xs:attributeGroup name="organizationname.attributes">
		<xs:attributeGroup ref="univ-atts"/>
		<xs:attribute name="keyref" type="xs:string"/>
		<xs:attribute name="outputclass" type="xs:string"/>
		<xs:attributeGroup ref="global-atts"/>
	</xs:attributeGroup>
	<xs:element name="organizationnamedetails">
		<xs:annotation>
			<xs:documentation>The &lt;organizationnamedetails&gt; element contains information about
                the name of an authoring organization. </xs:documentation>
		</xs:annotation>
		<xs:complexType>
			<xs:complexContent>
				<xs:extension base="organizationnamedetails.class">
					<xs:attribute ref="class" default="+ topic/ph xnal-d/organizationnamedetails "/>
				</xs:extension>
			</xs:complexContent>
		</xs:complexType>
	</xs:element>
	<xs:complexType name="organizationnamedetails.class">
		<xs:sequence>
			<xs:group ref="organizationnamedetails.content"/>
		</xs:sequence>
		<xs:attributeGroup ref="organizationnamedetails.attributes"/>
	</xs:complexType>
	<xs:group name="organizationnamedetails.content">
		<xs:sequence>
			<xs:sequence>
				<xs:group ref="organizationname" minOccurs="0"/>
				<xs:group ref="otherinfo" minOccurs="0" maxOccurs="unbounded"/>
			</xs:sequence>
		</xs:sequence>
	</xs:group>
	<xs:attributeGroup name="organizationnamedetails.attributes">
		<xs:attributeGroup ref="univ-atts"/>
		<xs:attribute name="keyref" type="xs:string"/>
		<xs:attribute name="outputclass" type="xs:string"/>
		<xs:attributeGroup ref="global-atts"/>
	</xs:attributeGroup>
	<xs:element name="otherinfo">
		<xs:annotation>
			<xs:documentation>The &lt;otherinfo&gt; element contains other name information about
                the author or authoring organization. </xs:documentation>
		</xs:annotation>
		<xs:complexType mixed="true">
			<xs:complexContent>
				<xs:extension base="otherinfo.class">
					<xs:attribute ref="class" default="+ topic/data xnal-d/otherinfo "/>
				</xs:extension>
			</xs:complexContent>
		</xs:complexType>
	</xs:element>
	<xs:complexType name="otherinfo.class" mixed="true">
		<xs:sequence>
			<xs:group ref="otherinfo.content"/>
		</xs:sequence>
		<xs:attributeGroup ref="otherinfo.attributes"/>
	</xs:complexType>
	<xs:group name="otherinfo.content">
		<xs:sequence>
			<xs:choice minOccurs="0" maxOccurs="unbounded">
				<xs:group ref="words.cnt"/>
			</xs:choice>
		</xs:sequence>
	</xs:group>
	<xs:attributeGroup name="otherinfo.attributes">
		<xs:attributeGroup ref="data-element-atts.class"/>
		<xs:attributeGroup ref="global-atts"/>
	</xs:attributeGroup>
	<xs:element name="personinfo">
		<xs:annotation>
			<xs:documentation>The &lt;personinfo&gt; element is a wrapper containing all relevant
                data about a person, including name, address, and contact information.</xs:documentation>
		</xs:annotation>
		<xs:complexType>
			<xs:complexContent>
				<xs:extension base="personinfo.class">
					<xs:attribute ref="class" default="+ topic/data xnal-d/personinfo "/>
				</xs:extension>
			</xs:complexContent>
		</xs:complexType>
	</xs:element>
	<xs:complexType name="personinfo.class">
		<xs:sequence>
			<xs:group ref="personinfo.content"/>
		</xs:sequence>
		<xs:attributeGroup ref="personinfo.attributes"/>
	</xs:complexType>
	<xs:group name="personinfo.content">
		<xs:sequence>
			<xs:sequence>
				<xs:group ref="namedetails" minOccurs="0"/>
				<xs:group ref="addressdetails" minOccurs="0"/>
				<xs:group ref="contactnumbers" minOccurs="0"/>
				<xs:group ref="emailaddresses" minOccurs="0"/>
			</xs:sequence>
		</xs:sequence>
	</xs:group>
	<xs:attributeGroup name="personinfo.attributes">
		<xs:attributeGroup ref="data-element-atts.class"/>
		<xs:attributeGroup ref="global-atts"/>
	</xs:attributeGroup>
	<xs:element name="personname">
		<xs:annotation>
			<xs:documentation>The &lt;personname&gt; element contains name information about the
                author.</xs:documentation>
		</xs:annotation>
		<xs:complexType>
			<xs:complexContent>
				<xs:extension base="personname.class">
					<xs:attribute ref="class" default="+ topic/data xnal-d/personname "/>
				</xs:extension>
			</xs:complexContent>
		</xs:complexType>
	</xs:element>
	<xs:complexType name="personname.class">
		<xs:sequence>
			<xs:group ref="personname.content"/>
		</xs:sequence>
		<xs:attributeGroup ref="personname.attributes"/>
	</xs:complexType>
	<xs:group name="personname.content">
		<xs:sequence>
			<xs:sequence>
				<xs:group ref="honorific" minOccurs="0"/>
				<xs:group ref="firstname" minOccurs="0" maxOccurs="unbounded"/>
				<xs:group ref="middlename" minOccurs="0" maxOccurs="unbounded"/>
				<xs:group ref="lastname" minOccurs="0" maxOccurs="unbounded"/>
				<xs:group ref="generationidentifier" minOccurs="0"/>
				<xs:group ref="otherinfo" minOccurs="0" maxOccurs="unbounded"/>
			</xs:sequence>
		</xs:sequence>
	</xs:group>
	<xs:attributeGroup name="personname.attributes">
		<xs:attributeGroup ref="data-element-atts.class"/>
		<xs:attributeGroup ref="global-atts"/>
	</xs:attributeGroup>
	<xs:element name="postalcode">
		<xs:annotation>
			<xs:documentation>The &lt;postalcode&gt; element contains information about the postal
                code  or the ZIP code.</xs:documentation>
		</xs:annotation>
		<xs:complexType mixed="true">
			<xs:complexContent>
				<xs:extension base="postalcode.class">
					<xs:attribute ref="class" default="+ topic/ph xnal-d/postalcode "/>
				</xs:extension>
			</xs:complexContent>
		</xs:complexType>
	</xs:element>
	<xs:complexType name="postalcode.class" mixed="true">
		<xs:sequence>
			<xs:group ref="postalcode.content"/>
		</xs:sequence>
		<xs:attributeGroup ref="postalcode.attributes"/>
	</xs:complexType>
	<xs:group name="postalcode.content">
		<xs:sequence>
			<xs:choice minOccurs="0" maxOccurs="unbounded">
				<xs:group ref="keyword"/>
			</xs:choice>
		</xs:sequence>
	</xs:group>
	<xs:attributeGroup name="postalcode.attributes">
		<xs:attributeGroup ref="univ-atts"/>
		<xs:attribute name="keyref" type="xs:string"/>
		<xs:attribute name="outputclass" type="xs:string"/>
		<xs:attributeGroup ref="global-atts"/>
	</xs:attributeGroup>
	<xs:element name="thoroughfare">
		<xs:annotation>
			<xs:documentation>The &lt;thoroughfare&gt; element contains information about the thoroughfare
                - for example, the street, avenue, or boulevard - on which an address is located.</xs:documentation>
		</xs:annotation>
		<xs:complexType mixed="true">
			<xs:complexContent>
				<xs:extension base="thoroughfare.class">
					<xs:attribute ref="class" default="+ topic/ph xnal-d/thoroughfare "/>
				</xs:extension>
			</xs:complexContent>
		</xs:complexType>
	</xs:element>
	<xs:complexType name="thoroughfare.class" mixed="true">
		<xs:sequence>
			<xs:group ref="thoroughfare.content"/>
		</xs:sequence>
		<xs:attributeGroup ref="thoroughfare.attributes"/>
	</xs:complexType>
	<xs:group name="thoroughfare.content">
		<xs:sequence>
			<xs:choice minOccurs="0" maxOccurs="unbounded">
				<xs:group ref="words.cnt"/>
			</xs:choice>
		</xs:sequence>
	</xs:group>
	<xs:attributeGroup name="thoroughfare.attributes">
		<xs:attributeGroup ref="univ-atts"/>
		<xs:attribute name="keyref" type="xs:string"/>
		<xs:attribute name="outputclass" type="xs:string"/>
		<xs:attributeGroup ref="global-atts"/>
	</xs:attributeGroup>
	<xs:element name="url">
		<xs:annotation>
			<xs:documentation>The &lt;url&gt; element contains a Uniform Resource Locator (URL). </xs:documentation>
		</xs:annotation>
		<xs:complexType mixed="true">
			<xs:complexContent>
				<xs:extension base="url.class">
					<xs:attribute ref="class" default="+ topic/data xnal-d/url "/>
				</xs:extension>
			</xs:complexContent>
		</xs:complexType>
	</xs:element>
	<xs:complexType name="url.class" mixed="true">
		<xs:sequence>
			<xs:group ref="url.content"/>
		</xs:sequence>
		<xs:attributeGroup ref="url.attributes"/>
	</xs:complexType>
	<xs:group name="url.content">
		<xs:sequence>
			<xs:choice minOccurs="0" maxOccurs="unbounded">
				<xs:group ref="words.cnt"/>
			</xs:choice>
		</xs:sequence>
	</xs:group>
	<xs:attributeGroup name="url.attributes">
		<xs:attributeGroup ref="data-element-atts.class"/>
		<xs:attributeGroup ref="global-atts"/>
	</xs:attributeGroup>
	<xs:element name="urls">
		<xs:annotation>
			<xs:documentation>The &lt;urls&gt; element contains a list of Uniform Resource Locators
                (URLs). </xs:documentation>
		</xs:annotation>
		<xs:complexType>
			<xs:complexContent>
				<xs:extension base="urls.class">
					<xs:attribute ref="class" default="+ topic/data xnal-d/urls "/>
				</xs:extension>
			</xs:complexContent>
		</xs:complexType>
	</xs:element>
	<xs:complexType name="urls.class">
		<xs:sequence>
			<xs:group ref="urls.content"/>
		</xs:sequence>
		<xs:attributeGroup ref="urls.attributes"/>
	</xs:complexType>
	<xs:group name="urls.content">
		<xs:sequence>
			<xs:choice minOccurs="0" maxOccurs="unbounded">
				<xs:group ref="url"/>
			</xs:choice>
		</xs:sequence>
	</xs:group>
	<xs:attributeGroup name="urls.attributes">
		<xs:attributeGroup ref="data-element-atts.class"/>
		<xs:attributeGroup ref="global-atts"/>
	</xs:attributeGroup>
</xs:schema>
